# ---- KeyValueV35
KeyValueV35:
  type: object
  properties:
    key:
      type: string
    data:
      type: string
    type:
      type: string



ResponseInfo:
  required:
    - responseUID
    - resultID
    - errorCode
  type: object
  properties:
    responseUID:
      type: string
      description: <p>Response Identifier. Echoed back by PowerCARD to the requester. It should contain the same value as the one sent in the request message.
        </p>
    resultID:
      type: string
      enum:
        - ProceedWithSuccess
        - ProceedWithSuccessMC
        - Error
        - SystemError
      description: <p>Refers to the result of processing in PowerCARD.
        The possible values are:<b>
        ProceedWithSuccess:<b> Call was ended successfully.
        ProceedWithSuccessMC:<b> Call made successfully, however the request will be inserted in a Maker Checker queue for further analysis.
        Error:<b> An error has occurred during the processing.
        SystemError:<b> An unknown system error occurred during the process. </p>

    errorCode:
      type: string
      description: <p>Indicate the error code used by the PowerCARD to tell you that program was experiencing a particular problem during the processing of the request.</p>
    errorDescription:
      type: string
      description: <p>If present, this field must contain the description of the error encountered</p>
Address:
  type: object
  required:
    - defaultAddressFlag
    - addressType
    - defaultUsage
    - sendingMode
    - status
  properties:
    addressId:
      type: string
      description: <p>Internal Identification of the addresses as generated by PowerCARD</p>
    addressListID:
      type: string
      description: <p>Internal Identification of the addresses generated by PowerCARD to link with main entity </p>
    defaultAddressFlag:
      type: string
      description: <p>is default address 'Y' or 'N Value should be 'Y' for main address </p>
    addressType:
      type: string
      description: <p>Address type based on the intended purpose of use.This is a 2-digit code that must be defined in the PowerCARD ADDRESSES_TYPE_LIST table under the general parameters section.</p>
    defaultUsage:
      type: string
      description: <p> Describes what each entity’s address type will be used for:<br> 01  Mailing
        02 :<b> Statement
        03 :<b> Dispute
        04 :<b> Loyalty
        05 :<b> Authentifier
        </p>
    sendingMode:
      type: string
      description: <p>Indicates the sending mode.The defined values are
        E :<b> Email
        F :<b> Fax
        M :<b> Mailing
        O :<b> Others
        </p>
    status:
      type: string
      description: <p>Refers to the status of the address. Possible values are
        N :<b> Normal
        C :<b> Closed
        Default Value is 'N'
        </p>
    statusRangeDate:
      $ref: aggregate.yaml#/StatusRangeDate
    addressDetails:
      $ref: aggregate.yaml#/AddressDetails
AddressDetails:
  type: object
  required:
    - addressDetailsID
  properties:
    addressDetailsID:
      type: string
      description: <p>Internal Identification of the address details as generated by PowerCARD</p>
    careOf:
      type: string
      description: <p>Mail recipient in the address (To:<b> ..).
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    address1:
      type: string
      description: <p>Address Line 1 of the recipient address.</p>
    address2:
      type: string
      description: <p>Address Line 2 of the recipient address.</p>
    address3:
      type: string
      description: <p>Address Line 3 of the recipient address.</p>
    address4:
      type: string
      description: <p>Address Line 4 of the recipient address.</p>
    countryCode:
      type: string
      description: <p>Country for which parameters are being set,  Valid values are stored in the PowerCARD 'COUNTRY' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    forceZipCode:
      type: string
      description: <p>Specify if zip code should be forced in case does not exist in referentiel (Possible values:<b> 'Y/N')
        Default value is 'N'
        </p>
    zipCode:
      type: string
      description: <p>Zip code for which parameters are being set, Valid values are stored in the PowerCARD 'ZIP_CODE' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    regionCode:
      type: string
      description: <p>Region representing the administrative division of the selected country, Valid values are stored in the PowerCARD 'REGION' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityCode:
      type: string
      description: <p>City for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        Not required if forceZipCode is 'Y'
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityName:
      type: string
      description: <p>CityName for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        This field is mandatory when forceZipCode is 'Y'
        </p>
    phoneNumber:
      type: array
      items:
        $ref: aggregate.yaml#/PhoneNumber
    fax:
      type: string
      description: <p>The fax number must be formatted correctly based on the country policies.
        Required if sending mode field value is 'Fax'
        </p>
    coreSystemReference:
      type: string
      description: <p>Reference address for exchange with an external information system</p>
    webAddress:
      $ref: aggregate.yaml#/WebAddress
MerchantSite:
  type: object
  properties:
    siteID:
      type: string
      description: <p>Internal Identification of the merchant site as generated by PowerCARD.</p>
    siteType:
      type: string
      description: <p>This field is used to indicate the type of the merchant site.Possible values and their descriptions must be downloaded from PowerCARD SITE_TYPE_LIST table</p>
    siteDescription:
      type: string
      description: <p>The name of the site</p>
    siteOpeningDate:
      type: string
      format: date-time
      description: <p>Date at which the merchant site is opened. Opening date is set to the system current date as a default value</p>
    siteClosingDate:
      type: string
      format: date-time
      description: <p>It refers to the date when the site was closed.</p>
    externalId1:
      type: string
      description: <p>The first external site identifier, If present, this field is used to identify the merchant in a third-party system.</p>
    externalId2:
      type: string
      description: <p>The second external site identifier, If present, this field is used to identify the merchant in a third-party system.</p>
    contactName:
      type: string
      description: <p>The site contact name</p>
    statusCode:
      type: string
      description: <p>Merchant acquiring site status. Possible values:<b>
        P:<br> In progress
        N:<br> Normal
        S:<br> Suspended
        C:<br> Closed
        </p>
    statusReasonCode:
      type: string
      description: <p>Status reason code, Valid values are stored in the PowerCARD 'STATUS_REASON_LIST' table.</p>
    statusRangeDate:
      $ref: aggregate.yaml#/StatusRangeDate
    address:
      $ref: aggregate.yaml#/Address
MerchantAccount:
  type: object
  properties:
    accountSeqID:
      type: string
      description: <p>Internal Sequence of the merchant account as generated by PowerCARD.</p>
    accountType:
      type: string
      description: <p>The account type. Can be:<b>
        P:<b> Primary account (Default posting account),
        S:<b> Secondary (Posting account based on settlement conditions),
        H:<br> Hierarchical (Account belonging to a node in chain/sub-chain hierarchy, to which the merchant is linked).
        </p>
    chainBankCode:
      type: string
      description: <p>When AccountType is set to Hierarchical, then the this field must be populated with bank chain code</p>
    chainCode:
      type: string
      description: <p>When AccountType is set to Hierarchical, then the chain code must be populated whit account chain owner</p>
    accountCategory:
      type: string
      description: <p>Account category:Possible values can be downloaded from the PowerCARD ACCOUNT_TYPE_LIST table</p>
    accountBankCode:
      type: string
      description: <p>Code identifying the bank where the account is opened.It is a 6-digit code must be stored in the PowerCARD BANK table under the general parameter section.</p>
    accountBranchCode:
      type: string
      description: <p>Code of the branch where the account is opened.This code must be stored in the PowerCARD BRANCH table under the general parameter section.</p>
    accountNumber:
      type: string
      description: <p>Merchant bank account number or BBAN (Base Bank Account Number). To ensure the validity of the account, the system checks the Bank Account (RIB) Control key and the account number length against the related bank parameters (Ex:<b> In France this length is 23 characters). This field is required for primary accounts and for secondary accounts with no defined "Core system reference".
        
        Regarding the account number structure, PowerCARD supports the following account number standard structure<b>
        BBBB BGGG GGCC CCCC CCCC CKK, Where:<b>
        "B" = Bank code,
        "G" = Branch code,
        "C" = Account number,
        "K" = Bank Account (RIB) Control key.
        </p>
    accountCurrency:
      type: string
      description: <p>Currency code as defined by ISO-4217 Possible values must be downloaded from the PowerCARD CURRENCY_TABLE table
        Default value of the account currency is the bank currency. This currency can be changed only if the bank supports multi-currency. This field is required for primary accounts and for secondary accounts with no defined "core system reference"
        </p>
    bic:
      type: string
      description: <p>The BIC defined for the merchant bank account (see bank parameter) is displayed for information
        Reserved for future use
        </p>
    iban:
      type: string
      description: <p>Merchant account number in IBAN format (International Bank Account Number). The IBAN format is “CP CC BBAN” where:<b>
        
        "CP" = Country code,
        "CC" = Control key (from 02 to 98),
        "BBAN" = Account number defined as described above.
        
        The system controls the existence of the country code in the referential "COUNTRY" and verifies the validity of the Control key. This field is required for primary accounts and for secondary accounts with no defined "Core system reference".
        Reserved for future use
        </p>
    coreSystemReference:
      type: string
      description: <p>External reference number of the account</p>
    accountStatus:
      type: string
      description: <p>Refers to the status of the account. Possible values are:<b>
        N:<b> Normal
        S:<b> Suspended
        C:<b> Closed
        </p>
    batchGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all remittances grouped or not. Possible values (for remittances)
        D:<b> Detail (Remittance by Remittance),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    feesGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all fees grouped or not. Possible values (for Fees)
        D:<b> Detail (Fee by Fee),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    billableElementGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all billing elements grouped or not. Possible values are:<b>
        Possible values (for billable elements)
        D:<b> Detail (Billable Element by Billable Element),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        C:<b> Aggregate all
        </p>
    chargebackGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all chargeback grouped or not. Possible values (for Chargebacks)
        D:<b> Detail (Chargeback by Chargeback),
        E<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    routingNumber:
      type: string
      description: <p>Account routing number (Required for United States' Accounts).
        Reserved for future use
        </p>
MerchantOnId:
  type: object
  properties:
    merchantOnIdIdentifier:
      type: string
      description: <p>Merchant identification at Network 1 indicator as defined in 'MERCHANT_LABEL_ID' table
        Possible values and their descriptions must be downloaded from PowerCARD MERCHANT_LABEL_ID table
        </p>
    merchantOnId:
      type: string
      description: <p>Merchant ID at network N
        It contains the number the first network, like Visa for instance, assigns to a merchant to identify their business.
        Captured values lengths should respect the minimum and maximum lengths set in the table merchant_label_id (column IND_LENGTH_MAX)
        </p>
RequestInfo:
  required:
    - requestUID
    - requestDate
  type: object
  properties:
    requestUID:
      type: string
      description: <p>Request Identifier. It is sent by the calling system as a universally unique identifier for the message. Used to match response with request messages.
        The generation mask should be the following:<b>
        XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
        Example:<b>
        6948DF80-14BD-4E04-8842-7668D9C001F5
        </p>
    requestDate:
      type: string
      format: date-time
      description: <p>Date when the request was submitted</p>
    userID:
      type: string
      description: <p>Represents the user Id who made the request.</p>
MerchantStatusRangeDate:
  type: object
  properties:
    startDt:
      type: string
      format: date
      description: <p>Start date for active or normal address status</p>
    endDt:
      type: string
      format: date
      description: <p>End date</p>
MerchantIdInfo:
  required:
    - bankCode
  type: object
  properties:
    bankCode:
      type: string
      description: <p>Code identifying the bank
        It is a 6-digit code must be stored in the PowerCARD BANK table
        </p>
    merchantID:
      type: string
      description: <p>This is an internal code generated by PowerCARD, it is used to identify uniquely the merchant on PowerCARD.
        Either merchantID or legalID should be filled in request otherwise an error code will be generated
        </p>
    legalID:
      type: string
      description: <p>represents the legal identification number of the merchant.
        Either merchantID or legalID should be filled in request otherwise an error code will be generated
        </p>
StatusRangeDate:
  type: object
  properties:
    startDt:
      type: string
      format: date
      description: <p>Start date for active or normal address status</p>
    endDt:
      type: string
      format: date
      description: <p>End date</p>
TerminalPos:
  type: object
  properties:
    terminalPosNumber:
      type: string
      description: <p>Must contain the terminal identification number as stored in PowerCARD.</p>
    masterPosIndicator:
      type: string
      description: <p>Refers to the pos indicator. Possible values are:<b>
        M:<b> Master
        S:<b> Slave
        A:<b> Autonomous
        </p>
    masterPosNumber:
      type: string
      description: <p>Refers to the Pos number of the master POS.
        This field is mandatory only in case the field above is set to S (Slave)
        </p>
    outletNumber:
      type: string
      description: <p>Must contain the code of the Acceptor point to which this POS belong</p>
    terminalPosGrouping:
      type: string
      description: <p>It should contain the code of the group to which belong the terminal.
        Those codes are defined for grouping reason to simplify the search and monitoring of terminals
        Valid values must be retrieved from PowerCARD TERMINAL_POS_GROUPING table
        </p>
    posAcronym:
      type: string
      description: <p>Must contain the terminal acronym</p>
    posLocation:
      type: string
      description: <p>Refers to the POS location</p>
    cityCode:
      type: string
      description: <p>This field contains the code of the city where the terminal is located.Valid values must be retrieved from PowerCARD CITY table </p>
    regionCode:
      type: string
      description: <p>This field contains the code of the state where the terminal is located.
        Valid values must be retrieved from PowerCARD REGION table
        </p>
    countryCode:
      type: string
      description: <p>This field contains the code of the country where the terminal is located.
        Valid values must be retrieved from PowerCARD COUNTRY
        </p>
    posBrandCode:
      type: string
      description: <p>Pos Brand Code
        Valid values must be retrieved from PowerCARD POS_BRAND table
        </p>
    protocolIndex:
      type: string
      description: <p>Terminal Protocol
        Valid values must be retrieved from PowerCARD PROTOCOL_LIST table
        </p>
    posProfileCode:
      type: string
      description: <p>Terminal profile code
        Valid values must be retrieved from PowerCARD POS_PROFILE table
        </p>
    transactionProcessingMode:
      type: string
      description: <p>Transaction processing mode.
        Possible values are:<b>
        SM:<b> Single message without reconciliation
        DM:<b> Double message with reconciliation
        TD:<b> Double message with transaction download
        </p>
    serialNumber:
      type: string
      description: <p>Pos Serial number</p>
    serialNumberPinpad:
      type: string
      description: <p>Pinpad serial number</p>
    installationDate:
      type: string
      format: date
      description: <p>Installation date</p>
    terminalModeStatus:
      type: string
      description: <p>Terminal mode status.
        Possible values are :<b>
        T:<b> Test mode
        L:<b> Live mode
        F:<b> Forbidden mode
        C:<b> Cancelled mode
        </p>
    dateStatus:
      type: string
      format: date
      description: <p>Last update status date</p>
    terminalCurAmtList:
      type: object
      properties:
        amt:
          type: integer
          format: long
          description: <p>The nominal amount value is multiplied by 10n; where n is the currency exponent of the currency code sent in the field below; the last n digits are used for decimals.
            Example:<b> An amount displayed as US$ 99,999.99 should be sent as 9999999.
            </p>
        curCode:
          type: string
          description: <p>ISO currency code of the transaction amount as defined in the PowerCARD CURRENCY_TABLE table under the general parameters section.should be sent as 9999999.
            </p>
        creditNoteFlag:
          type: string
          description: <p>This field indicates if the POS must be refunded to the merchant in case the POS is removed from the outlet location.
            Y:<b> Yes
            N:<b> No
            </p>
        dialHour:
          type: string
          format: date
          description: <p>Dial hour. Date format HH24:MI</p>
        downloadUser:
          type: string
          description: <p>This field indicates the user who downloaded the POS data to the terminal</p>
        dialPrefixe:
          type: string
          description: <p>This field indicates the prefix that needs to be dialed before the actual server number</p>
        tonePulseFlag:
          type: string
          description: <p>This field indicates in the POS uses the tone or pulse standard
            T :<b> Tone
            P :<b> Pulse
            </p>
        pinkeyNumber:
          type: string
          description: <p>PIN key number</p>
        transportPinkeyNumber:
          type: string
          description: <p>Transport PIN key number</p>
        mackeyNumber:
          type: string
          description: <p>MAC key number</p>
        masterKeyNumber:
          type: string
          description: <p>Master key number</p>
        userPassword:
          type: string
          description: <p>User password for configuration change at terminal level</p>
        languageCode1:
          type: string
          description: <p>This field indicates which 1st language code to be used by the terminal.
            Valid values must be retrieved from PowerCARD LANGUAGE_LIST
            </p>
        languageCode2:
          type: string
          description: <p>This field indicates the 2nd language code to be used by the terminal.
            Valid values must be retrieved from PowerCARD LANGUAGE_LIST
            </p>
        languageCode3:
          type: string
          description: <p>This field indicates the 3rd language code to be used by the terminal.
            Valid values must be retrieved from PowerCARD LANGUAGE_LIST
            </p>
        idleLoopDisplay:
          type: string
          description: <p>Idle loop display on terminal</p>
        terminalApplicationCode:
          type: string
          description: <p>Terminal application code</p>
        currentSoftwareVersion:
          type: string
          description: <p>Current POS application software.</p>
        lastUploadSoftwareDate:
          type: string
          format: date
          description: <p>Date of last upload successfully of current software</p>
        posCardsNumber:
          type: integer
          format: long
          description: <p>Pos cards number</p>

        equipmentFeeCode:
          type: string
          description: <p>Fee code related to the rental of this equipment
            Must exist in the equipment table
            </p>
        stopListCode:
          type: string
          description: <p>stop list code</p>
  required:
    - terminalPosNumber
    - masterPosIndicator
    - outletNumber
    - terminalPosGrouping
    - posAcronym
    - posLocation
    - cityCode
    - regionCode
    - countryCode
    - posBrandCode
    - protocolIndex
    - posProfileCode
    - transactionProcessingMode
    - terminalModeStatus
    - creditNoteFlag
    - languageCode1
    - terminalApplicationCode
    - currentSoftwareVersion
    - posCardsNumber
    - equipmentFeeCode
NetworkIdentifiers:
  type: object
  properties:
    merchantOnId:
      type: array
      items:
        $ref: aggregate.yaml#/MerchantOnId
MerchantInfoBasic:
  required:
    - bankCode
    - branchCode
    - legalID
    - legalIdType
    - doingBusinessAs
    - companyName
    - openingDate
    - countryCode
    - regionCode
    - location
    - status
  type: object
  properties:
    bankCode:
      type: string
      description: <p>Code identifying Institution to which the merchant will be linked
        It is a 6-digit code must be stored in the PowerCARD BANK table
        </p>
    branchCode:
      type: string
      description: <p>Code of the Acquirer institution's branch for which the merchant contract application process is being performed (the merchant branch)
        This code must be stored in the PowerCARD BRANCH table
        </p>
    legalID:
      type: string
      description: <p>This field represents the legal identification number of the merchant.
        Merchant Legal ID is subject to the following check:<b> a uniqueness search is performed across the merchant database to make sure that the ID does not already exist
        </p>
    legalIdType:
      type: string
      description: <p>Possible values are:<b>
        P :<b> Permanent=> Is attributed when the legal Id is filled manually
        T :<b> Temporary=>To indicate temporary legal IDs that are usually generated using a specific popup for legal ID management(Available only in France)
        F :<b> Fictive=>To indicate fictive legal IDs that are usually generated using a specific popup for legal ID management(Available only in France).
        Default value on merchant onboarding is 'P'
        </p>
    merchantID:
      type: string
      description: <p>Merchant number or code automatically assigned to the new merchant. This is an internal code generated by PowerCARD, it is used to identify uniquely the merchant on PowerCARD.</p>
    doingBusinessAs:
      type: string
      description: <p>refers to the name the merchant uses to identify itself. The one used for trading commercial products or services</p>
    companyName:
      type: string
      description: <p>The legal name of the merchant. It could be different than the DoingBusinessAs field.</p>
    openingDate:
      type: string
      format: date
      description: <p>System date when the first contract is accepted for the merchant</p>
    closingDate:
      type: string
      format: date-time
      description: <p>The closing date
        The date when the merchant was closed in PowerCARD. (Merchant Status moves to C:<b> Closed)
        </p>
    countryCode:
      type: string
      description: <p>defines the merchant’s country code according to the ISO 3166-1 format, must be stored in the PowerCARD COUNTRY table</p>
    regionCode:
      type: string
      description: <p>indicates the merchant region based on the administrative segmentation of the merchant’s country, must be stored in the PowerCARD REGION table</p>
    location:
      type: string
      description: <p>Merchant Location</p>
    vatNumber:
      type: string
      description: <p>Merchant intra-community VAT number</p>
    contractReference:
      type: string
      description: <p>First contract number the merchant signed with the institution. It is controlled by the system as the unique identifier within the institution merchants and used to set the default values when defining contract elements for the merchant</p>
    externalID1:
      type: string
      description: <p>indicates the merchant ID within an external system</p>
    externalID2:
      type: string
      description: <p>used to store a second identifier within an external system</p>
    status:
      type: string
      description: <p>During the merchant boarding, the status is automatically set to 'P' (Ongoing)
        Possible values are :<b>
        P:<b> Ongoing/In progress,
        V:<b> Waiting for the validation of a higher authority, Waiting for qualification
        N:<b> Normal,
        S:<b> Suspended,
        C:<b> Closed,
        M:<b> Monitored.
        </p>
    merchantStatusReason:
      type: string
      description: <p></p>
    merchantStatusRangeDate:
      $ref: aggregate.yaml#/MerchantStatusRangeDate
    merchantAgreementDate:
      type: string
      format: date
      description: <p>Usually, the date on which the agreement is signed by two parties; the merchant and the acquirer.</p>
    chainCode:
      type: string
      description: <p>This code identifies the merchant chain code.
        The Chain Id must be valid and must be defined in the PowerCARD CHAIN table.
        </p>
    legalForm:
      type: string
      description: <p>Merchant legal form. Possible values are:<p>
        B :<b> Public
        E :<b> Self-employed
        G :<b> Non-governmental organization
        L :<b> Limited liability company
        M :<b> Corporation
        N :<b> Non-profit
        P :<b> Individual
        S :<b> Sole proprietor
        T :<b> Partnership
        V :<b> Private
        </p>
    tradeLicenseNumber:
      type: string
      description: <p>Merchant trade license number</p>
    annualTurnover:
      type: integer
      format: int64
    languageCode:
      type: string
      description: <p>This field refers to the merchant language code.Valid values are stored in the PowerCARD LANGUAGE_LIST table. </p>
    payFacilitator:
      type: string
      description: <p>It indicates whether the merchant is a payment facilitator or not.</p>
    groupingCode:
      type: string
      description: <p>Is used to gather some merchants that don’t belong to the same chain in a same group (Put merchants of a mall in the same group for example).</p>
    merchantVerificationValue:
      type: string
      description: <p>This information is used by VISA to determine if the merchant is eligible to special programs</p>
    merchantRiskIndicator:
      type: string
      description: <p>First digit of the “Special Condition Indicator” field sent to VISA for base II clearing. Possible Values are:<p>
        1 :<b> Authorization floor limit set to zero
        2 :<b> Mag stripe data reading and transmission
        3 :<b> Authorization floor limit set to zero & Reading and transmission of data on magnetic card
        </p>
    merchantTransIndicator:
      type: string
      description: <p>Second digit of the “Special Condition Indicator” field sent to VISA for Base II clearing, Possible Values are:<b>
        1 :<b> Floor limit to $ 500 for hotel
        2 :<b> Floor limit to $ 1000 for hotel
        3 :<b> Floor limit to $ 1500 for hotel
        4 :<b> Visa Services Lodging Hotel specific floor limit
        5 :<b> Facsimile provided
        6 :<b> Current debt indicator
        7 :<b> Visa Lodging Merchant Services
        8 :<b> Quasi-cash / Online games
        </p>
    merchantNetworkIdentifiers:
      $ref: aggregate.yaml#/MerchantNetworkIdentifiers
WebAddress:
  type: object
  properties:
    emailAddress:
      type: string
      description: <p>The email address</p>
    url:
      type: string
      description: <p>The web site address</p>
PhoneNumber:
  type: object
  required:
    - phoneType
    - phoneNumber
  properties:
    phoneType:
      type: string
      description: <p>Type of the phone number, possible values are:<p>
        0 :<b> Office phone
        1 :<b> Office mobile phone
        2 :<b> Home phone
        3 :<b> Personal mobile phone
        4 :<b> Others
        </p>
    phoneNumber:
      type: string
      description: <p>Where the contact can be reached at. The phone number must be formatted correctly based on the country policies.</p>
MerchantAcceptorPoint:
  type: object
  properties:
    acceptorPointId:
      type: string
      description: <p>Acceptor point internal identification automatically generated by the system</p>
    contractReference:
      type: string
      description: <p>Contract element's internal identification number</p>
    mcc:
      type: string
      description: <p>ISO standard MCC representing the merchant activity</p>
    activityIdentifier:
      type: string
      description: <p>The Acctivity Identifier</p>
    siteIdentifier:
      type: string
      description: <p>The Site Identifier</p>
    acceptanceProductID:
      type: string
      description: <p></p>
    status:
      type: string
      description: <p>During the merchant boarding,the status is automatically set to ‘Ongoing’.
        Possible values are :<b>
        In progress,
        Waiting for the validation of a higher authority,
        Waiting for qualification,
        Normal,
        Declined,
        Suspended,
        Closed,
        Monitored.</p>
    acceptorPointName:
      type: string
      description: <p>The Acceptor point Name</p>
    accessNumber:
      type: string
      description: <p>External identifier of the Acceptor Point. This number is unique for the "Acceptance ELC / Acceptance Site / Activity" association. For the first PA created from this association, the access number is generated sequentially on a field of seven positions assigned to each bank. If another Acceptance Point is created from the same association, the access number gets automatically the same access number as the existing PA</p>
    legalID:
      type: string
      description: <p>Legal ID of the Acceptor point. It gets the Merchant Legal ID as a default value and can be changed by the user if the PA has its own legal ID. When the Legal ID is changed, the system performs the same controls as those performed on the Merchant Legal ID.</p>
    receiptLabel:
      type: string
      description: <p>Label printed in the transaction receipt</p>
    openingDate:
      type: string
      format: date
      description: <p>It sets the start date of the Acceptance point activity with the system date as a default value. When changed, this date must be greater than or equal to the Merchant opening date.</p>
    supervisorCardsNumber:
      type: integer
      format: int64
    privateId1:
      type: string
      description: <p>External Identifier 1</p>
    externalId2:
      type: string
      description: <p>External Identifier 2</p>
    externalId3:
      type: string
      description: <p>External Identifier 3</p>
    doingBusinessAs:
      type: string
      description: <p>The Merchant Acceptor Point Acronym
        This acronym is used during the clearing and settlement of all transactions performed at this point
        </p>
    groupingCode:
      type: string
      description: <p>Code is used for grouping different Acceptor points under user defined criteria</p>
    location:
      type: string
      description: <p>The Acceptor Point location</p>
    networkIdentifiers:
      $ref: aggregate.yaml#/NetworkIdentifiers
    terminalPosList:
      type: array
      items:
        $ref: aggregate.yaml#/TerminalPos
  required:
    - contractReference
    - activityIdentifier
    - siteIdentifier
    - acceptanceProductID
    - acceptorPointName
    - receiptLabel
    - supervisorCardsNumber
    - doingBusinessAs
    - location
MerchantActivity:
  type: object
  required:
    - activityId
    - mcc
    - description
    - activityType
    - bankingActivityCode
    - activityNationalID
  properties:
    activityId:
      type: string
      description: <p>Internal Identification of the merchant acitivity as generated by PowerCARD.</p>
    mcc:
      type: string
      description: <p>ISO standard MCC representing the merchant activity</p>
    description:
      type: string
      description: <p>This field must contain the name or description of the activity.By default, this field might contain the description of the MCC as stored in the PowerCARD MCC table. But users are allowed to modify it if needed during the creation of the activity. </p>
    activityType:
      type: string
      description: <p>The activity type, this field is used to indicate whether the concerned activity is primary one or secondary.
        Possible values are:<b>
        ·        P:<b> Primary activity
        ·        S:<b> Secondary activity
        </p>
    bankingActivityCode:
      type: string
      description: <p>Indicates if the activity is permanent or temporary
        Default value is 'P' permanent
        </p>
    activityNationalID:
      type: string
      description: <p>can be used to enter the national ID of the merchant activity</p>
    statusCode:
      type: string
      description: <p>The activity status, this field is used to indicate the status of the activity.
        Possible values are:<b>
        P:<b> In progress
        N:<b> Normal
        S:<b> Suspended (status = S, reason = DC)
        C:<b> Closed
        </p>
    statusReasonCode:
      type: string
      description: <p>The reason used to change the status of the merchant activity.
        Valid values are stored in the PowerCARD PowerCARD STATUS_REASON_LIST table.
        </p>
    statusRangeDate:
      $ref: aggregate.yaml#/StatusRangeDate
    openingDate:
      type: string
      format: date
      description: <p>This field indicate the opening date of the activity. </p>
    closingDate:
      type: string
      format: date
      description: <p>This field indicate the closing date of the activity. </p>
    externalID1:
      type: string
      description: <p>External ID 1</p>
    externalID2:
      type: string
      description: <p>External ID 2</p>
MerchantNetworkIdentifiers:
  type: object
  properties:
    merchantOnId:
      $ref: aggregate.yaml#/MerchantOnId
MerchantContact:
  type: object
  properties:
    contactID:
      type: string
      description: <p>This is an internal code generated by PowerCARD, it is used to identify uniquely the contact on PowerCARD</p>
    titleCode:
      type: string
      description: <p>Prefix added to the customer’s name. Titles may refer to social honorifics, professional designations, or academic ranks.
        This code must be previously defined in the PowerCARD TITLE_LIST table under the general parameters section and must be retrieved from PowerCARD
        </p>
    gender:
      type: string
      description: <p>One character identifying the gender of a person. Valid values are:<b>
        . M:<b> Male
        .  F:<b> Female
        .  N:<b> Not applicable
        </p>
    firstName:
      type: string
      description: <p>Contact first name</p>
    lastName:
      type: string
      description: <p>Contact  last name or family name</p>
    middleName:
      type: string
      description: <p>This field is used to transmit the Contact  middle name if available.</p>
    documentCode:
      type: string
      description: <p>Code identifying the government Issued Identifications, Valid values are stored in the PowerCARD DOCUMENT_LIST table</p>
    documentNumber:
      type: string
      description: <p>Contact ID document number</p>
    birthDate:
      type: string
      format: date
      description: <p>Contact birth date. When it is indicated, it goes through a control over the date format and a check that it is prior to the current date.</p>
    traceLicenseNumber:
      type: string
      description: <p>Contact trade register number</p>
    taxRegistryOffice:
      type: string
      description: <p>Tax identification number</p>
    languageCode:
      type: string
      description: <p>Default language of communication with the Contact. Valid values are stored in the PowerCARD LANGUAGE_LIST table.</p>
    functionCode:
      type: string
      description: <p>Contact function
        Possible values are:<b>
        01:<b>Owner (Should be default value for Owner)
        02:<b>Manager
        03:<b>Assistant
        04:<b>Sales
        </p>
    functionDescription:
      type: string
      description: <p>Applicable only if Function field is different than '01:Owner'
        function description
        </p>
    ownershipType:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Possible values are:<b>
        001:individual owner
        002:corporate owner
        003:Non-owner authorized signor
        </p>
    ownerSince:
      type: string
      format: date
      description: <p>Applicable only if Function field is  '01:Owner'
        Date from which the owner becomes owner.
        </p>
    equityOwnership:
      type: integer
      format: int64
      description: <p>Applicable only if Function field is  '01:Owner'
        Representative ownership percentage.</p>

    citizenship:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Nationality,  Valid values are stored in the PowerCARD 'COUNTRY' table
        </p>
    guarantee:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        field with Y (Yes) or N (No) value.
        </p>
    authorizedSignatoryFlag:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Specifies if the owner is an authorized signatory or not possible value ('0' for False / '1' for True)
        </p>
    linkMerchantAddressFlag:
      type: string
      description: <p>Specifies if the address is linked to the merchant address ('Y/N')
        Default Value is 'N'
        </p>
    linkMerchantAddressId:
      type: string
      description: <p>Specifies the merchant address ID to which contact address should be linked to
        If not specified link will be done with merchant main address
        </p>
    address:
      $ref: aggregate.yaml#/Address
  required:
    - contactID
    - titleCode
    - gender
    - firstName
    - lastName
    - functionCode
    - address



CreateMerchantAddress:
  type: object
  required:
    - defaultAddressFlag
    - addressType
    - defaultUsage
    - sendingMode
    - status
  properties:
    addressId:
      type: string
      description: <p>Internal Identification of the addresses as generated by PowerCARD</p>
    addressListID:
      type: string
      description: <p>Internal Identification of the addresses generated by PowerCARD to link with main entity </p>
    defaultAddressFlag:
      type: string
      description: <p>is default address 'Y' or 'N
        Value should be 'Y' for main address
        </p>
    addressType:
      type: string
      description: <p>Address type based on the intended purpose of use.
        This is a 2-digit code that must be defined in the PowerCARD ADDRESSES_TYPE_LIST table under the general parameters section.
        </p>
    defaultUsage:
      type: string
      description: <p>Describes what each entity’s address type will be used for:<b>
        01 :<b> Mailing
        02 :<b> Statement
        03 :<b> Dispute
        04 :<b> Loyalty
        05 :<b> Authentifier
        </p>
    sendingMode:
      type: string
      description: <p>Indicates the sending mode.The defined values are
        E :<b> Email
        F :<b> Fax
        M :<b> Mailing
        O :<b> Others
        </p>
    status:
      type: string
      description: <p></p>
    statusRangeDate:
      $ref: aggregate.yaml#/CreateMerchantStatusRangeDate
    addressDetails:
      $ref: aggregate.yaml#/CreateMerchantAddressDetails
CreateMerchantAddressDetails:
  type: object
  required:
    - addressDetailsID
  properties:
    addressDetailsID:
      type: string
      description: <p>Internal Identification of the address details as generated by PowerCARD</p>

    address1:
      type: string
      description: <p>Address Line 1 of the recipient address.</p>
    address2:
      type: string
      description: <p>Address Line 2 of the recipient address.</p>
    address3:
      type: string
      description: <p>Address Line 3 of the recipient address.</p>
    address4:
      type: string
      description: <p>Address Line 4 of the recipient address.</p>
    countryCode:
      type: string
      description: <p>Country for which parameters are being set,  Valid values are stored in the PowerCARD 'COUNTRY' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    forceZipCode:
      type: string
      description: <p>Specify if zip code should be forced in case does not exist in referentiel (Possible values:<b> 'Y/N')
        Default value is 'N'
        </p>
    zipCode:
      type: string
      description: <p>Zip code for which parameters are being set, Valid values are stored in the PowerCARD 'ZIP_CODE' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    regionCode:
      type: string
      description: <p>Region representing the administrative division of the selected country, Valid values are stored in the PowerCARD 'REGION' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityCode:
      type: string
      description: <p>City for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        Not required if forceZipCode is 'Y'
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityName:
      type: string
      description: <p>CityName for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        This field is mandatory when forceZipCode is 'Y'
        </p>
    phoneNumber:
      type: array
      items:
        $ref: aggregate.yaml#/CreateMerchantPhoneNumber
    fax:
      type: string
      description: <p>The fax number must be formatted correctly based on the country policies.
        Required if sending mode field value is 'Fax'
        </p>
    coreSystemReference:
      type: string
      description: <p>Reference address for exchange with an external information system</p>
    webAddress:
      $ref: aggregate.yaml#/CreateMerchantWebAddress
CreateMerchantMerchantSite:
  type: object
  properties:
    siteID:
      type: string
      description: <p>Internal Identification of the merchant site as generated by PowerCARD.</p>
    siteType:
      type: string
      description: <p>This field is used to indicate the type of the merchant site. Possible values and their descriptions must be downloaded from PowerCARD SITE_TYPE_LIST table</p>
    siteDescription:
      type: string
      description: <p>The name of the site </p>
    siteOpeningDate:
      type: string
      format: date-time
      description: <p>Date at which the merchant site is opened. Opening date is set to the system current date as a default value</p>
    siteClosingDate:
      type: string
      format: date-time
      description: <p>It refers to the date when the site was closed.</p>
    externalId1:
      type: string
      description: <p>The first external site identifier, If present, this field is used to identify the merchant in a third-party system.</p>
    externalId2:
      type: string
      description: <p>The second external site identifier, If present, this field is used to identify the merchant in a third-party system.</p>
    contactName:
      type: string
      description: <p>The site contact name</p>
    statusCode:
      type: string
      description: <p>Merchant acquiring site status. Possible values:<b>
        P:<b> In progress
        N:<b> Normal
        S:<b> Suspended
        C:<b> Closed
        </p>
    statusReasonCode:
      type: string
      description: <p>Status reason code, Valid values are stored in the PowerCARD 'STATUS_REASON_LIST' table</p>
    statusRangeDate:
      $ref: aggregate.yaml#/CreateMerchantStatusRangeDate
    address:
      $ref: aggregate.yaml#/CreateMerchantAddress
CreateMerchantMerchantAccount:
  type: object
  properties:
    accountSeqID:
      type: string
      description: <p>Internal Sequence of the merchant account as generated by PowerCARD.</p>
    accountType:
      type: string
      description: <p>The account type. Can be:<b>
        P:<b> Primary account (Default posting account),
        S:<b> Secondary (Posting account based on settlement conditions),
        H:<b> Hierarchical (Account belonging to a node in chain/sub-chain hierarchy, to which the merchant is linked).
        </p>
    chainBankCode:
      type: string
      description: <p>When AccountType is set to Hierarchical, then the this field must be populated with bank chain code</p>
    chainCode:
      type: string
      description: <p>When AccountType is set to Hierarchical, then the chain code must be populated whit account chain owner</p>
    accountCategory:
      type: string
      description: <p>Account category:Possible values can be downloaded from the PowerCARD ACCOUNT_TYPE_LIST table</p>
    accountBankCode:
      type: string
      description: <p>Code identifying the bank where the account is opened.It is a 6-digit code must be stored in the PowerCARD BANK table under the general parameter section.</p>
    accountBranchCode:
      type: string
      description: <p>Code of the branch where the account is opened.This code must be stored in the PowerCARD BRANCH table under the general parameter section.</p>
    accountNumber:
      type: string
      description: <p>Merchant bank account number or BBAN (Base Bank Account Number). To ensure the validity of the account, the system checks the Bank Account (RIB) Control key and the account number length against the related bank parameters (Ex:<b> In France this length is 23 characters). This field is required for primary accounts and for secondary accounts with no defined "Core system reference".
        
        Regarding the account number structure, PowerCARD supports the following account number standard structure:<b>
        BBBB BGGG GGCC CCCC CCCC CKK, Where:<b>
        
        "B" = Bank code,
        "G" = Branch code,
        "C" = Account number,
        "K" = Bank Account (RIB) Control key.
        </p>
    accountCurrency:
      type: string
      description: <p>Currency code as defined by ISO-4217 Possible values must be downloaded from the PowerCARD CURRENCY_TABLE table
        Default value of the account currency is the bank currency. This currency can be changed only if the bank supports multi-currency. This field is required for primary accounts and for secondary accounts with no defined "core system reference"
        </p>
    bic:
      type: string
      description: <p>The BIC defined for the merchant bank account (see bank parameter) is displayed for information
        Reserved for future use
        </p>
    iban:
      type: string
      description: <p>Merchant account number in IBAN format (International Bank Account Number). The IBAN format is “CP CC BBAN” where:<b>
        "CP" = Country code,
        "CC" = Control key (from 02 to 98),
        "BBAN" = Account number defined as described above.
        The system controls the existence of the country code in the referential "COUNTRY" and verifies the validity of the Control key. This field is required for primary accounts and for secondary accounts with no defined "Core system reference".
        Reserved for future use
        </p>
    coreSystemReference:
      type: string
      description: <p>External reference number of the account</p>
    accountStatus:
      type: string
      description: <p>Refers to the status of the account. Possible values are:<b>
        N:<b> Normal
        S:<b> Suspended
        C:<b> Closed
        </p>
    batchGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all remittances grouped or not. Possible values (for remittances)
        D:<b> Detail (Remittance by Remittance),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    feesGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all fees grouped or not. Possible values (for Fees)
        D:<b> Detail (Fee by Fee),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    billableElementGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all billing elements grouped or not. Possible values are:<b>
        Possible values (for billable elements)
        D:<b> Detail (Billable Element by Billable Element),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        C:<b> Aggregate all
        </p>
    chargebackGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all chargeback grouped or not. Possible values (for Chargebacks)
        D:<b> Detail (Chargeback by Chargeback),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    routingNumber:
      type: string
      description: <p>Account routing number (Required for United States' Accounts).
        Reserved for future use
        </p>
CreateMerchantMerchantOnId:
  type: object
  properties:
    merchantOnIdIdentifier:
      type: string
      description: <p>Merchant identification at Network 1 indicator as defined in 'MERCHANT_LABEL_ID' table
        Possible values and their descriptions must be downloaded from PowerCARD MERCHANT_LABEL_ID table
        </p>
    merchantOnId:
      type: string
      description: <p>Merchant ID at network N
        It contains the number the first network, like Visa for instance, assigns to a merchant to identify their business.
        Captured values lengths should respect the minimum and maximum lengths set in the table merchant_label_id (column IND_LENGTH_MAX)
        </p>

CreateMerchantMerchantStatusRangeDate:
  type: object
  properties:
    startDt:
      type: string
      format: date
      description: <p>This field indicate the date when the status will be effective.</p>
    endDt:
      type: string
      format: date
      description: <p>This field refers to the date till when the current merchant activity status will be valid.</p>

CreateMerchantStatusRangeDate:
  type: object
  properties:
    startDt:
      type: string
      format: date
      description: <p>This field indicate the date when the status will be effective.</p>
    endDt:
      type: string
      format: date
      description: <p>This field refers to the date till when the current merchant activity status will be valid.</p>
CreateMerchantTerminalPos:
  type: object
  properties:
    terminalPosNumber:
      type: string
      description: <p>Must contain the terminal identification number as stored in PowerCARD.</p>
    masterPosIndicator:
      type: string
      description: <p>Refers to the pos indicator. Possible values are:<b>
        M:<b> Master
        S:<b> Slave
        A:<b> Autonomous
        </p>
    masterPosNumber:
      type: string
      description: <p>Refers to the Pos number of the master POS.
        This field is mandatory only in case the field above is set to S (Slave
        </p>
    outletNumber:
      type: string
      description: <p>Must contain the code of the Acceptor point to which this POS belong</p>
    terminalPosGrouping:
      type: string
      description: <p>It should contain the code of the group to which belong the terminal.
        Those codes are defined for grouping reason to simplify the search and monitoring of terminals
        Valid values must be retrieved from PowerCARD TERMINAL_POS_GROUPING table
        </p>
    posAcronym:
      type: string
      description: <p>Must contain the terminal acronym</p>
    posLocation:
      type: string
      description: <p>Refers to the POS location</p>
    cityCode:
      type: string
      description: <p>This field contains the code of the city where the terminal is located.
        Valid values must be retrieved from PowerCARD CITY table
        </p>
    regionCode:
      type: string
      description: <p>This field contains the code of the state where the terminal is located.
        Valid values must be retrieved from PowerCARD REGION table
        </p>
    countryCode:
      type: string
      description: <p>This field contains the code of the country where the terminal is located.
        Valid values must be retrieved from PowerCARD COUNTRY
        </p>
    posBrandCode:
      type: string
      description: <p>Pos Brand Code
        Valid values must be retrieved from PowerCARD POS_BRAND table
        </p>
    protocolIndex:
      type: string
      description: <p>Terminal Protocol
        Valid values must be retrieved from PowerCARD PROTOCOL_LIST table
        </p>
    posProfileCode:
      type: string
      description: <p>Terminal profile code
        Valid values must be retrieved from PowerCARD POS_PROFILE table
        </p>
    transactionProcessingMode:
      type: string
      description: <p>Transaction processing mode.
        Possible values are:<b>
        SM:<b> Single message without reconciliation
        DM:<b> Double message with reconciliation
        TD:<b> Double message with transaction download
        </p>
    serialNumber:
      type: string
      description: <p>Pos Serial number</p>
    serialNumberPinpad:
      type: string
      description: <p>Pinpad serial number</p>
    installationDate:
      type: string
      format: date
      description: <p>Installation date</p>
    terminalModeStatus:
      type: string
      description: <p>Terminal mode status.
        Possible values are :<b>
        T:<b> Test mode
        L:<b> Live mode
        F:<b> Forbidden mode
        C:<b> Cancelled mode
        </p>
    dateStatus:
      type: string
      format: date
      description: <p>Last update status date</p>
    terminalCurAmtList:
      type: object
      properties:
        amt:
          type: integer
          format: long
          description: <p>The nominal amount value is multiplied by 10n; where n is the currency exponent of the currency code sent in the field below; the last n digits are used for decimals.
            Example:<b> An amount displayed as US$ 99,999.99 should be sent as 9999999.
            </p>
        curCode:
          type: string
          description: <p>ISO currency code of the transaction amount as defined in the PowerCARD CURRENCY_TABLE table under the general parameters section.
            </p>
        creditNoteFlag:
          type: string
          description: <p>This field indicates if the POS must be refunded to the merchant in case the POS is removed from the outlet location.
            Y:<b> Yes
            N:<b> No
            </p>
        dialHour:
          type: string
          format: date
          description: <p>Dial hour. Date format HH24:MI</p>
        downloadUser:
          type: string
          description: <p>This field indicates the user who downloaded the POS data to the terminal</p>
        dialPrefixe:
          type: string
          description: <p>This field indicates the prefix that needs to be dialed before the actual server number</p>
        tonePulseFlag:
          type: string
          description: <p>This field indicates in the POS uses the tone or pulse standard
            T :<b> Tone
            P :<b> Pulse
            </p>
        pinkeyNumber:
          type: string
          description: <p>PIN key number</p>
        transportPinkeyNumber:
          type: string
          description: <p>Transport PIN key number</p>
        mackeyNumber:
          type: string
          description: <p>MAC key number</p>
        masterKeyNumber:
          type: string
          description: <p>Master key number</p>
        userPassword:
          type: string
          description: <p>User password for configuration change at terminal level</p>
        languageCode1:
          type: string
          description: <p>This field indicates which 1st language code to be used by the terminal.
            Valid values must be retrieved from PowerCARD LANGUAGE_LIST
            </p>
        languageCode2:
          type: string
          description: <p>This field indicates the 2nd language code to be used by the terminal.
            Valid values must be retrieved from PowerCARD LANGUAGE_LIST
            </p>
        languageCode3:
          type: string
          description: <p>This field indicates the 3rd language code to be used by the terminal.
            Valid values must be retrieved from PowerCARD LANGUAGE_LIST
            </p>
        idleLoopDisplay:
          type: string
          description: <p>Idle loop display on terminal</p>
        terminalApplicationCode:
          type: string
          description: <p>Terminal application code</p>
        currentSoftwareVersion:
          type: string
          description: <p>Current POS application software.</p>
        lastUploadSoftwareDate:
          type: string
          format: date
          description: <p>Date of last upload successfully of current software</p>
        posCardsNumber:
          type: integer
          format: long
          description: <p>Pos cards number</p>

        equipmentFeeCode:
          type: string
          description: <p>Fee code related to the rental of this equipment
            Must exist in the equipment table
            </p>
        stopListCode:
          type: string
          description: <p>stop list code</p>
  required:
    - terminalPosNumber
    - masterPosIndicator
    - outletNumber
    - terminalPosGrouping
    - posAcronym
    - posLocation
    - cityCode
    - regionCode
    - countryCode
    - posBrandCode
    - protocolIndex
    - posProfileCode
    - transactionProcessingMode
    - terminalModeStatus
    - creditNoteFlag
    - languageCode1
    - terminalApplicationCode
    - currentSoftwareVersion
    - posCardsNumber
    - equipmentFeeCode
CreateMerchantNetworkIdentifiers:
  type: object
  properties:
    merchantOnId:
      type: array
      items:
        $ref: aggregate.yaml#/CreateMerchantMerchantOnId
CreateMerchantMerchantInfoBasic:
  required:
    - bankCode
    - branchCode
    - legalID
    - legalIdType
    - doingBusinessAs
    - companyName
    - openingDate
    - countryCode
    - regionCode
    - location
    - status
  type: object
  properties:
    bankCode:
      type: string
      description: <p>Code identifying Institution to which the merchant will be linked
        It is a 6-digit code must be stored in the PowerCARD BANK table
        </p>
    branchCode:
      type: string
      description: <p>Code of the Acquirer institution's branch for which the merchant contract application process is being performed (the merchant branch)
        This code must be stored in the PowerCARD BRANCH table
        </p>
    legalID:
      type: string
      description: <p>This field represents the legal identification number of the merchant.
        Merchant Legal ID is subject to the following check:<b> a uniqueness search is performed across the merchant database to make sure that the ID does not already exist
        </p>
    legalIdType:
      type: string
      description: <p>Possible values are:<b>
        P :<b> Permanent=> Is attributed when the legal Id is filled manually
        T :<b> Temporary=>To indicate temporary legal IDs that are usually generated using a specific popup for legal ID management(Available only in France)
        F :<b> Fictive=>To indicate fictive legal IDs that are usually generated using a specific popup for legal ID management(Available only in France).
        Default value on merchant onboarding is 'P'
        </p>
    merchantID:
      type: string
      description: <p>Merchant number or code automatically assigned to the new merchant. This is an internal code generated by PowerCARD, it is used to identify uniquely the merchant on PowerCARD.</p>
    doingBusinessAs:
      type: string
      description: <p>refers to the name the merchant uses to identify itself. The one used for trading commercial products or services</p>
    companyName:
      type: string
      description: <p>The legal name of the merchant. It could be different than the DoingBusinessAs field.</p>
    openingDate:
      type: string
      format: date
      description: <p>System date when the first contract is accepted for the merchant</p>
    closingDate:
      type: string
      format: date-time
      description: <p>The closing date
        The date when the merchant was closed in PowerCARD. (Merchant Status moves to C:<b> Closed)
        </p>
    countryCode:
      type: string
      description: <p>defines the merchant’s country code according to the ISO 3166-1 format, must be stored in the PowerCARD COUNTRY table</p>
    regionCode:
      type: string
      description: <p>indicates the merchant region based on the administrative segmentation of the merchant’s country, must be stored in the PowerCARD REGION table</p>
    location:
      type: string
      description: <p>Merchant Location</p>
    vatNumber:
      type: string
      description: <p>Merchant intra-community VAT number</p>
    contractReference:
      type: string
      description: <p>First contract number the merchant signed with the institution. It is controlled by the system as the unique identifier within the institution merchants and used to set the default values when defining contract elements for the merchant</p>
    externalID1:
      type: string
      description: <p>indicates the merchant ID within an external system</p>
    externalID2:
      type: string
      description: <p>used to store a second identifier within an external system</p>
    status:
      type: string
      description: <p>During the merchant boarding, the status is automatically set to 'P' (Ongoing)
        Possible values are :<b>
        P:Ongoing/In progress,
        V:Waiting for the validation of a higher authority, Waiting for qualification
        N:Normal,
        S:Suspended,
        C:Closed,
        M:Monitored.
        </p>
    merchantStatusReason:
      type: string
      description: <p>The reason used to change the status of the merchant.
        Status reason code Valid values are stored in the PowerCARD STATUS_REASON_LIST table.
        </p>
    merchantStatusRangeDate:
      $ref: aggregate.yaml#/CreateMerchantMerchantStatusRangeDate
    merchantAgreementDate:
      type: string
      format: date
      description: <p>Usually, the date on which the agreement is signed by two parties; the merchant and the acquirer.</p>
    chainCode:
      type: string
      description: <p>This code identifies the merchant chain code.
        The Chain Id must be valid and must be defined in the PowerCARD CHAIN table.
        </p>
    legalForm:
      type: string
      description: <p>Merchant legal form. Possible values are:<b>
        B :<b> Public
        E :<b> Self-employed
        G :<b> Non-governmental organization
        L :<b> Limited liability company
        M :<b> Corporation
        N :<b> Non-profit
        P :<b> Individual
        S :<b> Sole proprietor
        T :<b> Partnership
        V :<b> Private
        </p>
    tradeLicenseNumber:
      type: string
      description: <p>Merchant trade license number</p>
    annualTurnover:
      type: integer
      format: int64
      description: <p>Annual turnover in the bank local currency</p>
    languageCode:
      type: string
      description: <p>This field refers to the merchant language code.Valid values are stored in the PowerCARD LANGUAGE_LIST table. </p>
    payFacilitator:
      type: string
      description: <p>It indicates whether the merchant is a payment facilitator or not.</p>
    groupingCode:
      type: string
      description: <p>Is used to gather some merchants that don’t belong to the same chain in a same group (Put merchants of a mall in the same group for example).</p>
    merchantVerificationValue:
      type: string
      description: <p>This information is used by VISA to determine if the merchant is eligible to special programs</p>
    merchantRiskIndicator:
      type: string
      description: <p>First digit of the “Special Condition Indicator” field sent to VISA for base II clearing. Possible Values are:<b>
        1 :<b> Authorization floor limit set to zero
        2 :<b> Mag stripe data reading and transmission
        3 :<b> Authorization floor limit set to zero & Reading and transmission of data on magnetic card
        </p>
    merchantTransIndicator:
      type: string
      description: <p>Second digit of the “Special Condition Indicator” field sent to VISA for Base II clearing, Possible Values are:<b>
        1 :<b> Floor limit to $ 500 for hotel
        2 :<b> Floor limit to $ 1000 for hotel
        3 :<b> Floor limit to $ 1500 for hotel
        4 :<b> Visa Services Lodging Hotel specific floor limit
        5 :<b> Facsimile provided
        6 :<b> Current debt indicator
        7 :<b> Visa Lodging Merchant Services
        8 :<b> Quasi-cash / Online games
        </p>
    merchantNetworkIdentifiers:
      $ref: aggregate.yaml#/CreateMerchantMerchantNetworkIdentifiers
CreateMerchantWebAddress:
  type: object
  properties:
    emailAddress:
      type: string
      description: <p>The email address
        Required if sending mode field value is 'Mailing'
        </p>
    url:
      type: string
      description: <p>The web site address</p>
CreateMerchantPhoneNumber:
  type: object
  required:
    - phoneType
    - phoneNumber
  properties:
    phoneType:
      type: string
      description: <p>Type of the phone number, possible values are:<b>
        0 :<b> Office phone
        1 :<b> Office mobile phone
        2 :<b> Home phone
        3 :<b> Personal mobile phone
        4 :<b> Others
        </p>
    phoneNumber:
      type: string
      description: <p>Where the contact can be reached at. The phone number must be formatted correctly based on the country policies.</p>
CreateMerchantMerchantAcceptorPoint:
  type: object
  properties:
    acceptorPointId:
      type: string
      description: <p>Acceptor point internal identification automatically generated by the system</p>
    contractReference:
      type: string
      description: <p>Contract element's internal identification number</p>
    mcc:
      type: string
      description: <p>ISO standard MCC representing the merchant activity</p>
    activityIdentifier:
      type: string
      description: <p>The Acctivity Identifier</p>
    siteIdentifier:
      type: string
      description: <p>The Site Identifier</p>
    acceptanceProductID:
      type: string
      description: <p></p>
    status:
      type: string
      description: <p>During the merchant boarding,the status is automatically set to ‘Ongoing’.
        Possible values are :<b>
        In progress,
        Waiting for the validation of a higher authority,
        Waiting for qualification,
        Normal,
        Declined,
        Suspended,
        Closed,
        Monitored.
        </p>
    acceptorPointName:
      type: string
      description: <p>The Acceptor point Name</p>
    accessNumber:
      type: string
      description: <p>External identifier of the Acceptor Point. This number is unique for the "Acceptance ELC / Acceptance Site / Activity" association. For the first PA created from this association, the access number is generated sequentially on a field of seven positions assigned to each bank. If another Acceptance Point is created from the same association, the access number gets automatically the same access number as the existing </p>
    legalID:
      type: string
      description: <p>Legal ID of the Acceptor point. It gets the Merchant Legal ID as a default value and can be changed by the user if the PA has its own legal ID. When the Legal ID is changed, the system performs the same controls as those performed on the Merchant Legal </p>
    receiptLabel:
      type: string
      description: <p>Label printed in the transaction receipt</p>
    openingDate:
      type: string
      format: date
      description: <p>It sets the start date of the Acceptance point activity with the system date as a default value. When changed, this date must be greater than or equal to the Merchant opening date.</p>
    supervisorCardsNumber:
      type: integer
      format: int64
      description: <p>Number of Acceptance point's authentication cards to be generated for the Acceptance Point</p>
    privateId1:
      type: string
      description: <p>External Identifier 1</p>
    externalId2:
      type: string
      description: <p>External Identifier 2</p>
    externalId3:
      type: string
      description: <p>External Identifier 3</p>
    doingBusinessAs:
      type: string
      description: <p>The Merchant Acceptor Point Acronym
        This acronym is used during the clearing and settlement of all transactions performed at this point
        </p>
    groupingCode:
      type: string
      description: <p>Code is used for grouping different Acceptor points under user defined criteria</p>
    location:
      type: string
      description: <p>The Acceptor Point location</p>
    networkIdentifiers:
      $ref: aggregate.yaml#/CreateMerchantNetworkIdentifiers
    terminalPosList:
      type: array
      items:
        $ref: aggregate.yaml#/CreateMerchantTerminalPos
  required:
    - contractReference
    - activityIdentifier
    - siteIdentifier
    - acceptanceProductID
    - acceptorPointName
    - receiptLabel
    - supervisorCardsNumber
    - doingBusinessAs
    - location
CreateMerchantMerchantActivity:
  type: object
  required:
    - activityId
    - mcc
    - description
    - activityType
    - bankingActivityCode
    - activityNationalID
  properties:
    activityId:
      type: string
      description: <p>Internal Identification of the merchant acitivity as generated by PowerCARD.</p>
    mcc:
      type: string
      description: <p>ISO standard MCC representing the merchant activity</p>
    description:
      type: string
      description: <p>This field must contain the name or description of the activity.By default, this field might contain the description of the MCC as stored in the PowerCARD MCC table. But users are allowed to modify it if needed during the creation of the activity. </p>
    activityType:
      type: string
      description: <p>The activity type, this field is used to indicate whether the concerned activity is primary one or secondary.
        Possible values are:<b>
        ·        P:<b> Primary activity
        ·        S:<b> Secondary activity
        </p>
    bankingActivityCode:
      type: string
      description: <p>Indicates if the activity is permanent or temporary
        Default value is 'P' permanent
        </p>
    activityNationalID:
      type: string
      description: <p>can be used to enter the national ID of the merchant activity</p>
    statusCode:
      type: string
      description: <p>The activity status, this field is used to indicate the status of the activity.
        Possible values are:<b>
        P:<b> In progress
        N:<b> Normal
        S:<b> Suspended (status = S, reason = DC)
        C:<b> Closed
        </p>
    statusReasonCode:
      type: string
      description: <p>The reason used to change the status of the merchant activity.
        Valid values are stored in the PowerCARD PowerCARD STATUS_REASON_LIST table.
        </p>
    statusRangeDate:
      $ref: aggregate.yaml#/CreateMerchantStatusRangeDate
    openingDate:
      type: string
      format: date
      description: <p>This field indicate the opening date of the activity. </p>
    closingDate:
      type: string
      format: date
      description: <p>This field indicate the closing date of the activity. </p>
    externalID1:
      type: string
      description: <p>External ID 1</p>
    externalID2:
      type: string
      description: <p>External ID 2</p>
CreateMerchantMerchantNetworkIdentifiers:
  type: object
  properties:
    merchantOnId:
      $ref: aggregate.yaml#/CreateMerchantMerchantOnId
CreateMerchantMerchantContact:
  type: object
  properties:

    titleCode:
      type: string
      description: <p>Prefix added to the customer’s name. Titles may refer to social honorifics, professional designations, or academic ranks.
        This code must be previously defined in the PowerCARD TITLE_LIST table under the general parameters section and must be retrieved from PowerCARD
        </p>
    gender:
      type: string
      description: <p>One character identifying the gender of a person. Valid values are:<b>
        . M:<b> Male
        .  F:<b> Female
        .  N:<b> Not applicable
        </p>
    firstName:
      type: string
      description: <p>Contact first name</p>
    lastName:
      type: string
      description: <p>Contact  last name or family name</p>
    middleName:
      type: string
      description: <p>This field is used to transmit the Contact  middle name if available.</p>
    documentCode:
      type: string
      description: <p>Code identifying the government Issued Identifications, Valid values are stored in the PowerCARD DOCUMENT_LIST table</p>
    documentNumber:
      type: string
      description: <p>Contact ID document number</p>
    birthDate:
      type: string
      format: date
      description: <p>Contact birth date. When it is indicated, it goes through a control over the date format and a check that it is prior to the current date.</p>
    traceLicenseNumber:
      type: string
      description: <p>Contact trade register number</p>
    taxRegistryOffice:
      type: string
      description: <p>Tax identification number</p>
    languageCode:
      type: string
      description: <p>Default language of communication with the Contact. Valid values are stored in the PowerCARD LANGUAGE_LIST table.</p>
    functionCode:
      type: string
      description: <p>Contact function
        Possible values are:<b>
        01:<b>Owner (Should be default value for Owner)
        02:<b>Manager
        03:<b>Assistant
        04:<b>Sales
        </p>
    functionDescription:
      type: string
      description: <p>Applicable only if Function field is different than '01:Owner'
        function description
        </p>
    ownershipType:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Possible values are:<b>
        001:<b>individual owner
        002:<b>corporate owner
        003:<b>Non-owner authorized signor
        </p>
    ownerSince:
      type: string
      format: date
      description: <p>Applicable only if Function field is  '01:Owner'
        Date from which the owner becomes owner.
        </p>
    equityOwnership:
      type: integer
      format: int64
    citizenship:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Nationality,  Valid values are stored in the PowerCARD 'COUNTRY' table
        </p>
    guarantee:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        field with Y (Yes) or N (No) value.
        </p>
    authorizedSignatoryFlag:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Specifies if the owner is an authorized signatory or not possible value ('0' for False / '1' for True)
        </p>
    linkMerchantAddressFlag:
      type: string
      description: <p>Specifies if the address is linked to the merchant address ('Y/N')
        Default Value is 'N'
        </p>
    linkMerchantAddressId:
      type: string
      description: <p>Specifies the merchant address ID to which contact address should be linked to
        If not specified link will be done with merchant main address
        </p>
    address:
      $ref: aggregate.yaml#/CreateMerchantAddress
  required:

    - titleCode
    - gender
    - firstName
    - lastName
    - functionCode
    - address



#----------------------CheckMerchantExist






#----------------AddMerchantAddress

AddMerchantAddressMerchantIdInfo:
  type: object
  required:
    - bankCode
  properties:
    bankCode:
      type: string
      description: <p>Code identifying the bank
        It is a 6-digit code must be stored in the PowerCARD BANK table
        </p>
    merchantID:
      type: string
      description: <p>This is an internal code generated by PowerCARD, it is used to identify uniquely the merchant on PowerCARD.
        Either merchantID or legalID should be filled in request otherwise an error code will be generated
        </p>
    legalID:
      type: string
      description: <p>represents the legal identification number of the merchant.
        Either merchantID or legalID should be filled in request otherwise an error code will be generated
        </p>

AddMerchantAddressStatusRangeDate:
  required:
    - statusStartDate
  type: object
  properties:
    statusStartDate:
      type: string
      format: date
      description: <p>Start date for active or normal address status</p>
    statusEndDate:
      type: string
      format: date
      description: <p>end date </p>
AddMerchantAddressAddress:
  required:
    - defaultAddressFlag
    - addressType
    - defaultUsage
    - sendingMode
    - addressDetails
  type: object
  properties:
    defaultAddressFlag:
      type: string
      description: <p>is default address 'Y' or 'N
        Value should be 'Y' for main address
        </p>
    addressType:
      type: string
      description: <p>Address type based on the intended purpose of use.
        This is a 2-digit code that must be defined in the PowerCARD ADDRESSES_TYPE_LIST table under the general parameters section.
        </p>
    defaultUsage:
      type: string
      description: <p>Describes what each entity’s address type will be used for:<b>
        01 :<b> Mailing
        02 :<b> Statement
        03 :<b> Dispute
        04 :<b> Loyalty
        05 :<b> Authentifier
        </p>
    sendingMode:
      type: string
      description: <p>Indicates the sending mode.The defined values are
        E :<b> Email
        F :<b> Fax
        M :<b> Mailing
        O :<b> Others
        </p>
    statusRangeDate:
      $ref: aggregate.yaml#/AddMerchantAddressStatusRangeDate
    addressDetails:
      $ref: aggregate.yaml#/AddMerchantAddressAddressDetails
AddMerchantAddressAddressDetails:
  type: object
  required:
    - countryCode
    - ZIPCode
    - regionCode
    - cityCode
    - cityName
  properties:
    careOf:
      type: string
      description: <p>Mail recipient in the address (To:<b> ..).
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    address1:
      type: string
      description: <p>Address Line 1 of the recipient address.</p>
    address2:
      type: string
      description: <p>Address Line 2 of the recipient address.</p>
    address3:
      type: string
      description: <p>Address Line 3 of the recipient address.</p>
    address4:
      type: string
      description: <p>Address Line 4 of the recipient address.</p>
    countryCode:
      type: string
      description: <p>Country for which parameters are being set,  Valid values are stored in the PowerCARD 'COUNTRY' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    forceZipCode:
      type: string
      description: <p>Specify if zip code should be forced in case not exist in referentiel (Possible values:<b> 'Y/N')
        Default value is 'N'
        </p>
    ZIPCode:
      type: string
      description: <p>Zip code for which parameters are being set, Valid values are stored in the PowerCARD 'ZIP_CODE' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    regionCode:
      type: string
      description: <p>Region representing the administrative division of the selected country, Valid values are stored in the PowerCARD 'REGION' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityCode:
      type: string
      description: <p>City for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        Not required if forceZipCode is 'Y'
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityName:
      type: string
      description: <p>CityName for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        This field is mandatory when forceZipCode is 'Y'
        </p>
    phoneNumber:
      type: array
      items:
        $ref: aggregate.yaml#/AddMerchantAddressPhoneNumber
    fax:
      type: string
      description: <p>The fax number must be formatted correctly based on the country policies.
        Required if sending mode field value is 'Fax'
        </p>
    coreSystemReference:
      type: string
      description: <p>Reference address for exchange with an external information system</p>
    webAddress:
      $ref: aggregate.yaml#/AddMerchantAddressWebAddress
AddMerchantAddressWebAddress:
  type: object
  properties:
    emailAddress:
      type: string
      description: <p>The email address
        Required if sending mode field value is 'Mailing'
        </p>
    url:
      type: string
      description: <p>The web site address</p>
AddMerchantAddressPhoneNumber:
  required:
    - phoneType
    - phoneNumber
  type: object
  properties:
    phoneType:
      type: string
      description: <p>Type of the phone number, possible values are:<b>
        0 :<b> Office phone
        1 :<b> Office mobile phone
        2 :<b> Home phone
        3 :<b> Personal mobile phone
        4 :<b> Others
        </p>
    phoneNumber:
      type: string
      description: <p>Where the contact can be reached at. The phone number must be formatted correctly based on the country policies.</p>


#----------------AddMerchantBankAccount


AddMerchantBankAccountMerchantAccount:
  required:
    - accountType
    - accountCategory
    - accountBankCode
    - accountBranchCode
    - accountNumber
    - accountCurrency
    - batchGrouping
    - feesGrouping
    - billableElementGrouping
    - chargebackGrouping
  type: object
  properties:
    accountType:
      type: string
      description: <p>The account type. Can be:<b>
        P:<b> Primary account (Default posting account),
        S:<b> Secondary (Posting account based on settlement conditions),
        H:<b>  Hierarchical (Account belonging to a node in chain/sub-chain hierarchy, to which the merchant is linked).
        </p>
    chainBankCode:
      type: string
      description: <p>When AccountType is set to Hierarchical, then the this field must be populated with bank chain code</p>
    chainCode:
      type: string
      description: <p>When AccountType is set to Hierarchical, then the chain code must be populated whit account chain owner</p>
    accountCategory:
      type: string
      description: <p>Account category:Possible values can be downloaded from the PowerCARD ACCOUNT_TYPE_LIST table</p>
    accountBankCode:
      type: string
      description: <p>Code identifying the bank where the account is opened.It is a 6-digit code must be stored in the PowerCARD BANK table under the general parameter section.</p>
    accountBranchCode:
      type: string
      description: <p>Code of the branch where the account is opened.This code must be stored in the PowerCARD BRANCH table under the general parameter section.</p>
    accountNumber:
      type: string
      description: <p>Merchant bank account number or BBAN (Base Bank Account Number). To ensure the validity of the account, the system checks the Bank Account (RIB) Control key and the account number length against the related bank parameters (Ex:<b> In France this length is 23 characters). This field is required for primary accounts and for secondary accounts with no defined "Core system reference".
        
        Regarding the account number structure, PowerCARD supports the following account number standard structure:<b>
        BBBB BGGG GGCC CCCC CCCC CKK, Where:<b>
        "B" = Bank code,
        "G" = Branch code,
        "C" = Account number,
        "K" = Bank Account (RIB) Control key.
        </p>
    accountCurrency:
      type: string
      description: <p>Currency code as defined by ISO-4217 Possible values must be downloaded from the PowerCARD CURRENCY_TABLE table
        Default value of the account currency is the bank currency. This currency can be changed only if the bank supports multi-currency. This field is required for primary accounts and for secondary accounts with no defined "core system reference"
        </p>
    bic:
      type: string
      description: <p>The BIC defined for the merchant bank account (see bank parameter) is displayed for information
        Reserved for future use
        </p>
    iban:
      type: string
      description: <p>Merchant account number in IBAN format (International Bank Account Number). The IBAN format is “CP CC BBAN” where:<b>
        
        "CP" = Country code,
        "CC" = Control key (from 02 to 98),
        "BBAN" = Account number defined as described above.
        
        The system controls the existence of the country code in the referential "COUNTRY" and verifies the validity of the Control key. This field is required for primary accounts and for secondary accounts with no defined "Core system reference".
        Reserved for future use
        </p>
    coreSystemReference:
      type: string
      description: <p>External reference number of the account</p>
    batchGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all remittances grouped or not. Possible values (for remittances)
        D:<b> Detail (Remittance by Remittance),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    feesGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all fees grouped or not. Possible values (for Fees)
        D:<b> Detail (Fee by Fee),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    billableElementGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all billing elements grouped or not. Possible values are:<b>
        Possible values (for billable elements)
        D:<b> Detail (Billable Element by Billable Element),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        C:<b> Aggregate all
        </p>
    chargebackGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all chargeback grouped or not. Possible values (for Chargebacks)
        D:<b> Detail (Chargeback by Chargeback),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    routingNumber:
      type: string
      description: <p>Account routing number (Required for United States' Accounts).
        Reserved for future use
        </p>






#--------------------AddMerchantContact


AddMerchantContactMerchantContact:
  required:
    - titleCode
    - gender
    - firstName
    - lastName
    - functionCode
  type: object
  properties:
    contactID:
      type: string
      description: <p>This is an internal code generated by PowerCARD, it is used to identify uniquely the contact on PowerCARD.</p>
    titleCode:
      type: string
      description: <p>Prefix added to the customer’s name. Titles may refer to social honorifics, professional designations, or academic ranks.
        This code must be previously defined in the PowerCARD TITLE_LIST table under the general parameters section and must be retrieved from PowerCARD
        </p>
    gender:
      type: string
      description: <p>One character identifying the gender of a person. Valid values are:<b>
        . M:<b> Male
        .  F:<b> Female
        .  N:<b> Not applicable
        </p>
    firstName:
      type: string
      description: <p>Contact first name</p>
    lastName:
      type: string
      description: <p>Contact  last name or family name</p>
    middleName:
      type: string
      description: <p>This field is used to transmit the Contact  middle name if available.</p>
    documentCode:
      type: string
      description: <p>Code identifying the government Issued Identifications, Valid values are stored in the PowerCARD DOCUMENT_LIST table</p>
    documentNumber:
      type: string
      description: <p>Contact ID document number</p>
    birthDate:
      type: string
      format: date
      description: <p>Contact birth date. When it is indicated, it goes through a control over the date format and a check that it is prior to the current date.</p>
    traceLicenseNumber:
      type: string
      description: <p>Contact trade register number</p>
    taxRegistryOffice:
      type: string
      description: <p>Tax identification number</p>
    languageCode:
      type: string
      description: <p>Default language of communication with the Contact. Valid values are stored in the PowerCARD LANGUAGE_LIST table.</p>
    functionCode:
      type: string
      description: <p>Contact function
        Possible values are:<b>
        01:<b> Owner (Should be default value for Owner)
        02:<b> Manager
        03:<b> Assistant
        04:<b> Sales
        </p>
    functionDescription:
      type: string
      description: <p>Applicable only if Function field is different than '01:Owner'
        function description
        </p>
    ownershipType:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Possible values are:<b>
        001:<b> individual owner
        002:<b> corporate owner
        003:<b> Non-owner authorized signor
        </p>
    ownerSince:
      type: string
      format: date
      description: <p>Applicable only if Function field is  '01:Owner'
        Date from which the owner becomes owner.
        </p>
    equityOwnership:
      type: integer
      format: int64
    citizenship:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Nationality,  Valid values are stored in the PowerCARD 'COUNTRY' table
        </p>
    guarantee:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        field with Y (Yes) or N (No) value.
        </p>
    authorizedSignatoryFlag:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Specifies if the owner is an authorized signatory or not possible value ('0' for False / '1' for True)
        </p>
    linkMerchantAddressFlag:
      type: string
      description: <p>Specifies if the address is linked to the merchant address ('Y/N')
        Default Value is 'N'
        </p>
    linkMerchantAddressId:
      type: string
      description: <p>Specifies the merchant address ID to which contact address should be linked to
        If not specified link will be done with merchant main address
        </p>
    address:
      $ref: aggregate.yaml#/AddMerchantContactaddressDetails


AddMerchantContactaddressDetails:
  type: object
  required:
    - addressDetailsID
  properties:
    addressDetailsID:
      type: string
      description: <p>Internal Identification of the address details as generated by PowerCARD</p>

    address1:
      type: string
      description: <p>Address Line 1 of the recipient address.</p>
    address2:
      type: string
      description: <p>Address Line 2 of the recipient address.</p>
    address3:
      type: string
      description: <p>Address Line 3 of the recipient address.</p>
    address4:
      type: string
      description: <p>Address Line 4 of the recipient address.</p>
    countryCode:
      type: string
      description: <p>Country for which parameters are being set,  Valid values are stored in the PowerCARD 'COUNTRY' table</p>
    forceZipCode:
      type: string
      description: <p>Specify if zip code should be forced in case not exist in referentiel (Possible values:<b> 'Y/N')
        Default value is 'N'
        </p>
    zipCode:
      type: string
      description: <p>Zip code for which parameters are being set, Valid values are stored in the PowerCARD 'ZIP_CODE' table </p>
    regionCode:
      type: string
      description: <p>Region representing the administrative division of the selected country, Valid values are stored in the PowerCARD 'REGION' table</p>
    cityCode:
      type: string
      description: <p>City for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        this field is not required If forceZipCode is 'Y'
        </p>
    cityName:
      type: string
      description: <p>CityName for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        This field is mandatory when forceZipCode is 'Y'
        </p>
    phoneNumber:
      type: array
      items:
        $ref: aggregate.yaml#/PhoneNumber
    fax:
      type: string
      description: <p>The fax number must be formatted correctly based on the country policies.</p>

    webAddress:
      $ref: aggregate.yaml#/WebAddress




#------------------------UpdateMerchantDescription

UpdateMerchantDescriptionMerchantInfoBasic:
  required:
    - bankCode
    - legalID
    - merchantID
    - doingBusinessAs
    - companyName
    - regionCode
    - location
    - legalForm
    - languageCode
  type: object
  properties:
    bankCode:
      type: string
      description: <p>Code identifying the bank
        It is a 6-digit code must be stored in the PowerCARD BANK table
        </p>
    legalID:
      type: string
      description: <p>represents the legal identification number of the merchant.
        Either merchantID or legalID should be filled in request otherwise an error code will be generated
        </p>
    merchantID:
      type: string
      description: <p>Merchant number or code automatically assigned to the new merchant. This is an internal code generated by PowerCARD, it is used to identify uniquely the merchant on PowerCARD.
        </p>
    doingBusinessAs:
      type: string
      description: <p>refers to the name the merchant uses to identify itself. The one used for trading commercial products or services</p>
    companyName:
      type: string
      description: <p>The legal name of the merchant. It could be different than the DoingBusinessAs field.</p>
    regionCode:
      type: string
      description: <p>indicates the merchant region based on the administrative segmentation of the merchant’s country, must be stored in the PowerCARD REGION table</p>
    location:
      type: string
      description: <p>Merchant Location</p>
    vatNumber:
      type: string
      description: <p>Merchant intra-community VAT number</p>
    contractReference:
      type: string
      description: <p>First contract number the merchant signed with the institution. It is controlled by the system as the unique identifier within the institution merchants and used to set the default values when defining contract elements for the merchant</p>
    externalID1:
      type: string
      description: <p>indicates the merchant ID within an external system</p>
    externalID2:
      type: string
      description: <p>used to store a second identifier within an external system</p>
    chainCode:
      type: string
      description: <p>This code identifies the merchant chain code.
        The Chain Id must be valid and must be defined in the PowerCARD CHAIN table.
        </p>
    legalForm:
      type: string
      description: <p>Merchant legal form. Possible values are:<b>
        B :<b> Public
        E :<b> Self-employed
        G :<b> Non-governmental organization
        L :<b> Limited liability company
        M :<b> Corporation
        N :<b> Non-profit
        P :<b> Individual
        S :<b> Sole proprietor
        T :<b> Partnership
        V :<b> Private
        </p>
    tradeLicenseNumber:
      type: string
      description: <p>Merchant trade license number</p>
    annualTurnover:
      type: integer
      format: int64
    languageCode:
      type: string
      description: <p>This field refers to the merchant language code.Valid values are stored in the PowerCARD LANGUAGE_LIST table. </p>
    payFacilitator:
      type: string
      description: <p>It indicates whether the merchant is a payment facilitator or not.</p>
    groupingCode:
      type: string
      description: <p>Is used to gather some merchants that don’t belong to the same chain in a same group (Put merchants of a mall in the same group for example).</p>
    merchantVerificationValue:
      type: string
      description: <p>This information is used by VISA to determine if the merchant is eligible to special programs</p>
    merchantRiskIndicator:
      type: string
      description: <p>First digit of the “Special Condition Indicator” field sent to VISA for base II clearing. Possible Values are:<b>
        1 :<b> Authorization floor limit set to zero
        2 :<b> Mag stripe data reading and transmission
        3 :<b> Authorization floor limit set to zero & Reading and transmission of data on magnetic card
        </p>
    merchantTransIndicator:
      type: string
      description: <p>Second digit of the “Special Condition Indicator” field sent to VISA for Base II clearing, Possible Values are:<b>
        1 :<b> Floor limit to $ 500 for hotel
        2 :<b> Floor limit to $ 1000 for hotel
        3 :<b> Floor limit to $ 1500 for hotel
        4 :<b> Visa Services Lodging Hotel specific floor limit
        5 :<b> Facsimile provided
        6 :<b> Current debt indicator
        7 :<b> Visa Lodging Merchant Services
        8 :<b> Quasi-cash / Online games
        </p>
    merchantNetworkIdentifiers:
      $ref: aggregate.yaml#/MerchantOnId




#---------------DeleteMerchantContact

DeleteMerchantContactMerchantIdInfo:
  required:
    - bankCode
  type: object
  properties:
    bankCode:
      type: string
      description: <p>Code identifying Institution to which the merchant will be linked
        It is a 6-digit code must be stored in the PowerCARD BANK table
        </p>
    merchantID:
      type: string
      description: <p>Merchant number or code automatically assigned to the new merchant. This is an internal code generated by PowerCARD, it is used to identify uniquely the merchant on PowerCARD.</p>
    legalID:
      type: string
      description: <p>This field represents the legal identification number of the merchant.
        Merchant Legal ID is subject to the following check:<b> a uniqueness search is performed across the merchant database to make sure that the ID does not already exist
        </p>
    contactID:
      type: string
      description: <p>This is an internal code generated by PowerCARD, it is used to identify uniquely the contact on PowerCARD.</p>



#-------------AddMerchantSite

AddMerchantSiteAddress:
  required:
    - addressDetails
  type: object
  properties:
    addressDetails:
      $ref: aggregate.yaml#/AddMerchantSiteAddressDetails
AddMerchantSiteMerchantSite:
  required:
    - siteType
    - siteDescription
    - siteOpeningDate
    - address
  type: object
  properties:
    siteType:
      type: string
      description: <p>This field is used to indicate the type of the merchant site.Possible values and their descriptions must be downloaded from PowerCARD SITE_TYPE_LIST table</p>
    siteDescription:
      type: string
      description: <p>The name of the site </p>
    siteOpeningDate:
      type: string
      format: date-time
      description: <p>Date at which the merchant site is opened. Opening date is set to the system current date as a default value</p>
    externalId1:
      type: string
      description: <p>The first external site identifier, If present, this field is used to identify the merchant in a third-party system.</p>
    externalId2:
      type: string
      description: <p>The second external site identifier, If present, this field is used to identify the merchant in a third-party system.</p>
    contactName:
      type: string
      description: <p>The site contact name</p>
    address:
      $ref: aggregate.yaml#/AddMerchantSiteAddress
AddMerchantSiteAddressDetails:
  required:
    - countryCode
    - regionCode
  type: object
  properties:
    address1:
      type: string
      description: <p>Address Line 1 of the recipient address.</p>
    address2:
      type: string
      description: <p>Address Line 2 of the recipient address.</p>
    address3:
      type: string
      description: <p>Address Line 3 of the recipient address.</p>
    address4:
      type: string
      description: <p>Address Line 1 of the recipient address.</p>
    countryCode:
      type: string
      description: <p>Country for which parameters are being set,  Valid values are stored in the PowerCARD 'COUNTRY' table</p>
    forceZipCode:
      type: string
      description: <p>Specify if zip code should be forced in case not exist in referentiel (Possible values:<b> 'Y/N')
        Default value is 'N'
        </p>
    zipCode:
      type: string
      description: <p>Zip code for which parameters are being set, Valid values are stored in the PowerCARD 'ZIP_CODE' table</p>
    regionCode:
      type: string
      description: <p>Region representing the administrative division of the selected country, Valid values are stored in the PowerCARD 'REGION' table</p>
    cityCode:
      type: string
      description: <p>City for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        this field is not required If forceZipCode is 'Y'
        </p>
    cityName:
      type: string
      description: <p>CityName for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        This field is mandatory when forceZipCode is 'Y'
        </p>
    phoneNumber:
      type: array
      items:
        $ref: aggregate.yaml#/AddMerchantSitePhoneNumber
    webAddress:
      $ref: aggregate.yaml#/AddMerchantSiteWebAddress
AddMerchantSiteWebAddress:
  type: object
  properties:
    url:
      type: string
      description: <p></p>
AddMerchantSitePhoneNumber:
  required:
    - phoneType
    - phoneNumber
  type: object
  properties:
    phoneType:
      type: string
      description: <p>Type of the phone number, possible values are:<b>
        0 :<b> Office phone
        1 :<b>  Office mobile phone
        2 :<b>  Home phone
        3 :<b>  Personal mobile phone
        4 :<b>  Others
        </p>
    phoneNumber:
      type: string
      description: <p>Where the contact can be reached at. The phone number must be formatted correctly based on the country policies.</p>




#-------------------------UpdateMerchantContactDetails

UpdateMerchantContactDetailsAddress:
  required:
    - addressId
    - addressListID
    - addressDetails
  type: object
  properties:
    addressId:
      type: string
      description: <p>Internal Identification of the addresses as generated by PowerCARD
        Required for secondary address (DefaultAddressFlag is 'N')
        </p>
    addressListID:
      type: string
      description: <p>Internal Identification of the addresses generated by PowerCARD to link with main entity
        Required for secondary address (DefaultAddressFlag is 'N')
        </p>
    addressDetails:
      $ref: aggregate.yaml#/UpdateMerchantContactDetailsAddressDetails
UpdateMerchantContactDetailsAddressDetails:
  required:
    - addressDetailsID
    - careOf
    - countryCode
    - regionCode
  type: object
  properties:
    addressDetailsID:
      type: string
      description: <p>Internal Identification of the address details as generated by PowerCARD
        Required for secondary address (DefaultAddressFlag is 'N')
        </p>

    address1:
      type: string
      description: <p>Address Line 1 of the recipient address.</p>
    address2:
      type: string
      description: <p>Address Line 2 of the recipient address.</p>
    address3:
      type: string
      description: <p>Address Line 3 of the recipient address.</p>
    address4:
      type: string
      description: <p>Address Line 4 of the recipient address.</p>
    countryCode:
      type: string
      description: <p>Country for which parameters are being set,  Valid values are stored in the PowerCARD 'COUNTRY' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    forceZipCode:
      type: string
      description: <p>Specify if zip code should be forced in case not exist in referentiel (Possible values:<b> 'Y/N')
        Default value is 'N'
        </p>
    zIPCode:
      type: string
      description: <p>Zip code for which parameters are being set, Valid values are stored in the PowerCARD 'ZIP_CODE' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    regionCode:
      type: string
      description: <p>Region representing the administrative division of the selected country, Valid values are stored in the PowerCARD 'REGION' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityCode:
      type: string
      description: <p>City for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        Not required if forceZipCode is 'Y'
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityName:
      type: string
      description: <p>CityName for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        This field is mandatory when forceZipCode is 'Y'
        </p>
    phoneNumber:
      type: array
      items:
        $ref: aggregate.yaml#/UpdateMerchantContactDetailsPhoneNumber
    fax:
      type: string
      description: <p>The fax number must be formatted correctly based on the country policies.
        Required if sending mode field value is 'Fax'
        </p>
    webAddress:
      $ref: aggregate.yaml#/UpdateMerchantContactDetailsWebAddress
UpdateMerchantContactDetailsWebAddress:
  type: object
  properties:
    emailAddress:
      type: string
      description: <p>The email address
        Required if sending mode field value is 'Mailing'
        </p>
    url:
      type: string
      description: <p>The web site address</p>
UpdateMerchantContactDetailsPhoneNumber:
  required:
    - phoneType
    - phoneNumber
  type: object
  properties:
    phoneType:
      type: string
      description: <p>Type of the phone number, possible values are:<b>
        0 :<b> Office phone
        1 :<b> Office mobile phone
        2 :<b> Home phone
        3 :<b> Personal mobile phone
        4 :<b> Others
        </p>
    phoneNumber:
      type: string
      description: <p>Where the contact can be reached at. The phone number must be formatted correctly based on the country policies.</p>

UpdateMerchantContactDetailsMerchantContact:
  required:
    - contactID
    - titleCode
    - gender
    - firstName
    - lastName
    - functionCode
    - address
  type: object
  properties:
    contactID:
      type: string
      description: <p>This is an internal code generated by PowerCARD, it is used to identify uniquely the contact on PowerCARD.</p>
    titleCode:
      type: string
      description: <p>Prefix added to the customer’s name. Titles may refer to social honorifics, professional designations, or academic ranks.
        This code must be previously defined in the PowerCARD TITLE_LIST table under the general parameters section and must be retrieved from PowerCARD
        </p>
    gender:
      type: string
      description: <p>One character identifying the gender of a person. Valid values are:<p>
        . M:<b> Male
        .  F:<b> Female
        .  N:<b> Not applicable
        </p>
    firstName:
      type: string
      description: <p>Contact first name</p>
    lastName:
      type: string
      description: <p>Contact  last name or family name</p>
    middleName:
      type: string
      description: <p>This field is used to transmit the Contact  middle name if available.</p>
    documentCode:
      type: string
      description: <p>Code identifying the government Issued Identifications, Valid values are stored in the PowerCARD DOCUMENT_LIST table</p>
    documentNumber:
      type: string
      description: <p>Contact ID document number</p>
    birthDate:
      type: string
      format: date
      description: <p>Contact birth date. When it is indicated, it goes through a control over the date format and a check that it is prior to the current date.</p>
    traceLicenseNumber:
      type: string
      description: <p>Contact trade register number</p>
    taxRegistryOffice:
      type: string
      description: <p>Tax identification number</p>
    languageCode:
      type: string
      description: <p>Default language of communication with the Contact. Valid values are stored in the PowerCARD LANGUAGE_LIST table.</p>
    functionCode:
      type: string
      description: <p>Contact function
        Possible values are:<b>
        01:<b>Owner (Should be default value for Owner)
        02:<b>Manager
        03:<b>Assistant
        04:<b>Sales
        </p>
    functionDescription:
      type: string
      description: <p>Applicable only if Function field is different than '01:Owner'
        function description
        </p>
    ownershipType:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Possible values are:<b>
        001:<b>individual owner
        002:<b>corporate owner
        003:<b>Non-owner authorized signor
        </p>
    ownerSince:
      type: string
      format: date
      description: <p>Applicable only if Function field is  '01:Owner'
        Date from which the owner becomes owner.
        </p>
    equityOwnership:
      type: integer
      format: int64
    citizenship:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Nationality,  Valid values are stored in the PowerCARD 'COUNTRY' table
        </p>
    guarantee:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        field with Y (Yes) or N (No) value.
        </p>
    authorizedSignatoryFlag:
      type: string
      description: <p>Applicable only if Function field is  '01:Owner'
        Specifies if the owner is an authorized signatory or not possible value ('0' for False / '1' for True)
        </p>
    linkMerchantAddressFlag:
      type: string
      description: <p>Specifies if the address is linked to the merchant address ('Y/N')
        Default Value is 'N'
        </p>
    linkMerchantAddressId:
      type: string
      description: <p>Specifies the merchant address ID to which contact address should be linked to
        If not specified link will be done with merchant main address
        </p>
    address:
      $ref: aggregate.yaml#/UpdateMerchantContactDetailsAddress



#---------------------UpdateMerchantSite

UpdateMerchantSiteAddress:
  required:
    - addressDetails
  type: object
  properties:
    addressDetails:
      $ref: aggregate.yaml#/AddressDetails
UpdateMerchantSiteMerchantSite:
  required:
    - siteID
    - siteType
    - siteDescription
    - siteOpeningDate
    - address
  type: object
  properties:
    siteID:
      type: string
      description: <p>Internal Identification of the merchant site as generated by PowerCARD.</p>
    siteType:
      type: string
      description: <p>This field is used to indicate the type of the merchant site.Possible values and their descriptions must be downloaded from PowerCARD SITE_TYPE_LIST table</p>
    siteDescription:
      type: string
      description: <p>The name of the site </p>
    siteOpeningDate:
      type: string
      format: date-time
      description: <p>Date at which the merchant site is opened. Opening date is set to the system current date as a default value</p>
    externalId1:
      type: string
      description: <p>The first external site identifier, If present, this field is used to identify the merchant in a third-party system.</p>
    externalId2:
      type: string
      description: <p>The second external site identifier, If present, this field is used to identify the merchant in a third-party system.</p>
    contactName:
      type: string
      description: <p>The site contact name</p>
    address:
      $ref: aggregate.yaml#/Address
UpdateMerchantSiteAddressDetails:
  required:
    - countryCode
    - regionCode
  type: object
  properties:
    address1:
      type: string
      description: <p>Address Line 1 of the recipient address.</p>
    address2:
      type: string
      description: <p>Address Line 2 of the recipient address.</p>
    address3:
      type: string
      description: <p>Address Line 3 of the recipient address.</p>
    address4:
      type: string
      description: <p>Address Line 4 of the recipient address.</p>
    countryCode:
      type: string
      description: <p>Country for which parameters are being set,  Valid values are stored in the PowerCARD 'COUNTRY' table</p>
    forceZipCode:
      type: string
      description: <p>Specify if zip code should be forced in case does not exist in referentiel (Possible values:<b> 'Y/N')
        Default value is 'N'
        </p>
    zipCode:
      type: string
      description: <p>Zip code for which parameters are being set, Valid values are stored in the PowerCARD 'ZIP_CODE' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    regionCode:
      type: string
      description: <p>Region representing the administrative division of the selected country, Valid values are stored in the PowerCARD 'REGION' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityCode:
      type: string
      description: <p>City for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        Not required if forceZipCode is 'Y'
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityName:
      type: string
      description: <p>CityName for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        This field is mandatory when forceZipCode is 'Y'
        </p>
    phoneNumber:
      $ref: aggregate.yaml#/UpdateMerchantSitePhoneNumber
    webAddress:
      $ref: aggregate.yaml#/UpdateMerchantSiteWebAddress
UpdateMerchantSiteWebAddress:
  type: object
  properties:
    email:
      type: string
      description: <p>The email address
        Required if sending mode field value is 'Mailing'
        </p>
UpdateMerchantSitePhoneNumber:
  required:
    - phoneType
    - phoneNumber
  type: object
  properties:
    phoneType:
      type: string
      description: <p>Type of the phone number, possible values are:<b>
        0 :<b>Office phone
        1 :<b> Office mobile phone
        2 :<b> Home phone
        3 :<b> Personal mobile phone
        4 :<b> Others
        </p>
    phoneNumber:
      type: string
      description: <p></p>




#---------------UpdateMerchantAddressDetails


UpdateMerchantAddressDetailsStatusRangeDate:
  required:
    - statusStartDate
  type: object
  properties:
    statusStartDate:
      type: string
      format: date-time
      description: <p>Start date for active or normal address status</p>
    statusEndDate:
      type: string
      format: date-time
      description: <p>End date</p>
UpdateMerchantAddressDetailsAddress:
  required:
    - defaultAddressFlag
    - addressType
    - defaultUsage
    - sendingMode
    - addressDetails
  type: object
  properties:
    addressId:
      type: string
      description: <p>Internal Identification of the addresses as generated by PowerCARD</p>
    addressListID:
      type: string
      description: <p>Internal Identification of the addresses generated by PowerCARD to link with main entity </p>
    defaultAddressFlag:
      type: string
      description: <p>is default address 'Y' or 'N
        Value should be 'Y' for main address
        </p>
    addressType:
      type: string
      description: <p>Address type based on the intended purpose of use.
        This is a 2-digit code that must be defined in the PowerCARD ADDRESSES_TYPE_LIST table under the general parameters section.
        </p>
    defaultUsage:
      type: string
      description: <p>Describes what each entity’s address type will be used for:<b>
        01 :<b> Mailing
        02 :<b> Statement
        03 :<b> Dispute
        04 :<b> Loyalty
        05 :<b> Authentifier
        </p>
    sendingMode:
      type: string
      description: <p>Indicates the sending mode.The defined values are
        E :<b> Email
        F :<b> Fax
        M :<b> Mailing
        O :<b> Others
        </p>
    statusRangeDate:
      $ref: aggregate.yaml#/UpdateMerchantAddressDetailsStatusRangeDate
    addressDetails:
      $ref: aggregate.yaml#/UpdateMerchantAddressDetailsAddressDetails
UpdateMerchantAddressDetailsAddressDetails:
  required:
    - countryCode
    - ZIPCode
    - regionCode
    - cityCode
  type: object
  properties:
    addressDetailsID:
      type: string
      description: <p>Internal Identification of the address details as generated by PowerCARD</p>
    careOf:
      type: string
      description: <p>Mail recipient in the address (To:<b> ..).
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    address1:
      type: string
      description: <p>Address Line 1 of the recipient address.</p>
    address2:
      type: string
      description: <p>Address Line 2 of the recipient address.</p>
    address3:
      type: string
      description: <p>Address Line 3 of the recipient address.</p>
    address4:
      type: string
      description: <p>Address Line 4 of the recipient address.</p>
    countryCode:
      type: string
      description: <p>Country for which parameters are being set,  Valid values are stored in the PowerCARD 'COUNTRY' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    ZIPCode:
      type: string
      description: <p>Zip code for which parameters are being set, Valid values are stored in the PowerCARD 'ZIP_CODE' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    regionCode:
      type: string
      description: <p>Region representing the administrative division of the selected country, Valid values are stored in the PowerCARD 'REGION' table
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    cityCode:
      type: string
      description: <p>City for which parameters are being set,  Valid values are stored in the PowerCARD 'CITY' table
        Not required if forceZipCode is 'Y'
        This field is mandatory for the primary address (DefaultAddressFlag='Y') and for a secondary address(DefaultAddressFlag='N') where the CoreSystemReference has not been indicated.
        For a secondary address (DefaultAddressFlag='N')  ,this field is not required If a CoreSystemReference  has been indicated
        </p>
    phoneNumber:
      type: array
      items:
        $ref: aggregate.yaml#/UpdateMerchantAddressDetailsPhoneNumber
    fax:
      type: string
      description: <p>The fax number must be formatted correctly based on the country policies.
        Required if sending mode field value is 'Fax'
        </p>
    coreSystemReference:
      type: string
      description: <p>Reference address for exchange with an external information system</p>
    webAddress:
      $ref: aggregate.yaml#/UpdateMerchantAddressDetailsWebAddress
UpdateMerchantAddressDetailsWebAddress:
  type: object
  properties:
    emailAddress:
      type: string
      description: <p>The email address
        Required if sending mode field value is 'Mailing'
        </p>
    url:
      type: string
      format: uri
      description: <p>The web site address</p>
UpdateMerchantAddressDetailsPhoneNumber:
  required:
    - phoneType
    - phoneNumber
  type: object
  properties:
    phoneType:
      type: string
      description: <p>Type of the phone number, possible values are:<b>
        0 :<b> Office phone
        1 :<b> Office mobile phone
        2 :<b> Home phone
        3 :<b> Personal mobile phone
        4 :<b> Others
        </p>
    phoneNumber:
      type: string
      description: <p>Where the contact can be reached at. The phone number must be formatted correctly based on the country policies.</p>



#-------------AddMerchantActivity


AddMerchantActivityMerchantActivity:
  required:
    - MCC
    - description
    - activityType
    - bankingActivityCode
    - activityNationalID
    - openingDate
  type: object
  properties:
    mcc:
      type: string
      description: <p>ISO standard MCC representing the merchant activity</p>
    description:
      type: string
      description: <p>This field must contain the name or description of the activity.By default, this field might contain the description of the MCC as stored in the PowerCARD MCC table. But users are allowed to modify it if needed during the creation of the activity. </p>
    activityType:
      type: string
      description: <p>The activity type, this field is used to indicate whether the concerned activity is primary one or secondary.
        Possible values are:<b>
        ·        P:<b> Primary activity
        ·        S:<b> Secondary activity
        </p>
    bankingActivityCode:
      type: string
      description: <p>Indicates if the activity is permanent or temporary
        Default value is 'P' permanent
        </p>
    activityNationalID:
      type: string
      description: <p>can be used to enter the national ID of the merchant activity</p>
    openingDate:
      type: string
      format: date
      description: <p>This field indicate the opening date of the activity. </p>
    externalID1:
      type: string
      description: <p>External ID 1</p>
    externalID2:
      type: string
      description: <p>External ID 2</p>




#---------GetProductList


ValidityRangeDate:
  type: object
  properties:
    startDt:
      type: string
      format: date
      description: <p>Status start date, refers to the date from when the status code is valid</p>
    endDt:
      type: string
      format: date
      description: <p>Status end date, refers to the date till when the status code is valid</p>
Product:
  required:
    - bankCode
    - productCode
    - statusCode
    - statusRangeDate
    - externalCode
  type: object
  properties:
    bankCode:
      type: string
      description: <p>Code identifying the bank
        It is a 6-digit code must be stored in the PowerCARD BANK table
        </p>
    productParentCode:
      type: string
      description: <p>This is the parent product
        PowerCARD internal identifier (e.g. technical product internal identifier
        for the level 1 customization
        product). It is inherited from the parent product during the
        customization.
        - For technical product:<b> It is used to link a customized product to the basic product from which it is derived. It is used to link the parent product to the customized product in PowerCARD GUI and is also used to retrieve the parent product external identifier.
        - For a level 1 or 2 customized product:<b> It is used to link a customized to a technical product from which it is derived. It is used to retrieve the technical product external identifier.
        This identifier is displayed on level
        1 and level 2 customized products.
        </p>
    productCode:
      type: string
      description: <p>This is the product PowerCARD internal identifier. It is used to link the contract elements to products from which they are derived.</p>
    productName:
      type: string
      description: <p>This field refers to the product name. It is entered during the technical product definition and inherited at different customization levels. It may be modified during the product customization.</p>
    productDescription:
      type: string
      description: <p>This field refers to the product detailed description. It is entered
        during the technical product’s definition and inherited at different customization levels. It may be modified during the product customization throughout its life cycle.
        </p>
    productType:
      type: string
      description: <p>This is the product type. Possible
        values are:<b>
        A:<b> Acceptance,
        E:<b> Equipment,
        M:<b> Management/Service.
        </p>
    productLevelCode:
      type: number
      format: int32
      xml:
        name: ProductLevelCode
    validFrom:
      type: string
      format: date
      description: <p>This is the product validity start date.</p>
    validUntil:
      type: string
      format: date
      description: <p>This is the product validity start date.</p>
    statusCode:
      type: string
      description: <p>This is the status of the product in the catalog. Possible values are:<b>
                     C:<b> Marketable,
                     L:<b> Customizable,
                     P:<b> Ongoing,
                     R:<b> Rejected,
                     M:<b> Maintenance,
                     T:<b> Closed,
                     A:<b> Archived
                     </p>
    statusRangeDate:
      $ref: aggregate.yaml#/ValidityRangeDate
    externalCode:
      type: string
      description: <p>This is the product PowerCARD external (distributor) identifier. It is used to find a product in the database.</p>
    currencyCode:
      type: string
      description: <p>This field specifies the default currency in which should appear the different characteristics of product payment type (i.e. banking
        ceilings, other amounts, turnover which are sometimes given in local
        currency). It is therefore useful if the local currency is different from the regulatory currency. It must be defined in ‘CURRENCY_TABLE’
        table.
        </p>
    subscriptionLevel:
      type: string
      description: <p>The application level of a service product indicating if it can be subscribed to one of the following levels:<b>
                     M:<b> Merchant,
                     C:<b> Chain,
                     A:<b> All
                     </p>
    externalID1:
      type: string
      description: <p>This field indicates the first product external identifier. It is used to find a product in another system.</p>
    externalID2:
      type: string
      description: <p>This field indicates the second product external identifier. It is used to find a product in another system.</p>
    exclusiveFlag:
      type: string
      description: <p>This field indicates if the product is
        considered exclusive to a banks
        group or bank. Possible values are:<b>
        0:<b> Not Exclusive
        1:<b> Exclusive.
        </p>
    exclusiveRangeDate:
      $ref: aggregate.yaml#/ValidityRangeDate
    productFamilyFlag:
      type: string
      description: <p>This is the package type if it exists.
        Possible values are:<b>
        C:<b> Executive Contract,
        V:<b> Convention,
        O:<b> Offer.
        </p>
    productFamilyId:
      type: string
      description: <p>This field indicates the package identifier concerned by this product.</p>
    sensitiveFlag:
      type: string
      description: <p>This field indicates if the product is considered sensitive or not, and any application to this product must be validated or not by a
        hierarchical.
        Possible values are:<b>
        0:<b> Not Sensitive
        1:<b> Sensitive.
        </p>
    refEchange:
      type: string
      description: <p>Ref echange</p>
    productVersion:
      type: number
      format: int64
      xml:
        name: ProductVersion
    basicProductCode:
      type: string
      description: <p>Basic Product code</p>
    changesPropagated:
      type: string
      description: <p>Changes Propagated</p>



#---------------UpdateMerchantStatus

UpdateMerchantStatusStatusRangeDate:
  type: object
  properties:
    statusStartDate:
      type: string
      format: date
      description: <p>Start date for specified status
        (default date is sysdate)
        Required if Status diferent than 'Monitored'
        </p>
    statusEndDate:
      type: string
      format: date
      description: <p>End date status</p>




#----------updatemerchantactivity

updatemerchantactivityValidityRangeDate:
  type: object
  properties:
    startDt:
      type: string
      format: date
      description: <p>This field indicate the date when the status will be effective.</p>
    endDt:
      type: string
      format: date
      description: <p>This field refers to the date till when the current merchant activity status will be valid.</p>

updatemerchantactivityMerchantActivity:
  required:
    - activityId
    - MCC
    - description
    - activityType
    - bankingActivityCode
    - activityNationalID
    - openingDate
  type: object
  properties:
    activityId:
      type: string
      description: <p>Internal Identification of the merchant acitivity as generated by PowerCARD.</p>
    mcc:
      type: string
      description: <p>ISO standard MCC representing the merchant activity</p>
    description:
      type: string
      description: <p>This field must contain the name or description of the activity.By default, this field might contain the description of the MCC as stored in the PowerCARD MCC table. But users are allowed to modify it if needed during the creation of the activity. </p>
    activityType:
      type: string
      description: <p>The activity type, this field is used to indicate whether the concerned activity is primary one or secondary.
        Possible values are:<b>
        ·        P:<b> Primary activity
        ·        S:<b> Secondary activity
        </p>
    bankingActivityCode:
      type: string
      description: <p>Indicates if the activity is permanent or temporary
        Default value is 'P' permanent
        </p>
    activityNationalID:
      type: string
      description: <p>can be used to enter the national ID of the merchant activity</p>
    statusCode:
      type: string
      description: <p>The activity status, this field is used to indicate the status of the activity.
        Possible values are:<b>
        P:<b> In progress
        N:<b> Normal
        S:<b> Suspended (status = S, reason = DC)
        C:<b> Closed
        </p>
    statusReasonCode:
      type: string
      description: <p>The reason used to change the status of the merchant activity.
        Valid values are stored in the PowerCARD PowerCARD STATUS_REASON_LIST table.
        </p>
    statusRangeDate:
      $ref: aggregate.yaml#/ValidityRangeDate
    openingDate:
      type: string
      format: date
      description: <p>This field indicate the opening date of the activity. </p>
    closingDate:
      type: string
      format: date
      description: <p>This field indicate the closing date of the activity. </p>
    externalID1:
      type: string
      description: <p>External ID 1</p>
    externalID2:
      type: string
      description: <p>External ID 2</p>




#---------------getproductdetails

getproductdetailsAcqProductService:
  required:
    - uniqueIndex
    - productContextCode
  type: object
  properties:
    uniqueIndex:
      type: integer
      format: int32
    productContextCode:
      type: string
      description: <p>Refers to the parent product context code, a unique value attributed to each component of the product.</p>
    contextExternalCode:
      type: string
      description: <p>Refers to the external product context code</p>
    contextInternalCode:
      type: string
      description: <p>Refers to the internal product context code</p>
    label:
      type: string
      description: <p>Service Label</p>
    mandatory:
      type: string
      description: <p>Service mandatory to define :<b> True(Y) Or False(N) </p>
    parentContextCode:
      type: string
      description: <p>Refers to the parent product context code, a unique value attributed to each component of the product.</p>
    contextCode:
      type: string
      description: <p>refers to contextCode </p>
    checked:
      type: string
      description: <p>checked value :<b> True(Y) Or False(N)</p>
    serviceCharacteristicList:
      type: array
      items:
        $ref: aggregate.yaml#/Characteristic
    billableElement:
      required:
        - uniqueIndex
        - productContextCode
        - contextExternalCode
      type: object
      properties:
        uniqueIndex:
          type: integer
          format: int32
        productContextCode:
          type: string
          description: <p>Refers to the product context code, a unique value attributed to each component of the product.</p>
        contextExternalCode:
          type: string
          description: <p>Refers to the external product context code</p>
        contextInternalCode:
          type: string
          description: <p>Refers to the internal product context code</p>
        payableEvent:
          type: string
          description: <p>billable element description</p>
        parentContextCode:
          type: string
          description: <p>Refers to the parent product context code, a unique value attributed to each component of the product.</p>
        contextCode:
          type: string
          description: <p>refers to contextCode </p>

        chargingConditionList:
          type: array
          items:
            $ref: aggregate.yaml#/ChargingCondition
ChargingCondition:
  required:
    - uniqueIndex
    - productContextCode
    - contextExternalCode
    - label
  type: object
  properties:
    uniqueIndex:
      type: integer
      format: int32
    productContextCode:
      type: string
      description: <p>Refers to the parent product context code, a unique value attributed to each component of the product.</p>
    contextExternalCode:
      type: string
      description: <p>Refers to the external product context code</p>
    contextInternalCode:
      type: string
      description: <p>Refers to the internal product context code</p>
    label:
      type: string
      description: <p>Refers to the characterestic label</p>
    parentContextCode:
      type: string
      description: <p>Refers to the parent product context code, a unique value attributed to each component of the product.</p>
    contextCode:
      type: string
      description: <p>refers to contextCode </p>
    checked:
      type: string
      description: <p>checked value :<b> True(Y) Or False(N)</p>

    chargingRulesList:
      type: array
      items:
        $ref: aggregate.yaml#/ChargingRule
criteria:
  required:
    - uniqueIndex
    - productContextCode
    - label
    - valueMode
  type: object
  properties:
    uniqueIndex:
      type: integer
      format: int32
    productContextCode:
      type: string
      description: <p>Refers to the product context code, a unique value attributed to each component of the product.</p>
    contextCode:
      type: string
      description: <p>refers to contextCode </p>
    label:
      type: string
      description: <p>Refers to the characterestic label</p>
    typePopup:
      type: string
      description: <p>Refers to the popup type</p>
    valueMode:
      type: string
      description: <p>Characteristic value mode</p>
    checked:
      type: string
      description: <p>checked value :<b> True(Y) Or False(N)</p>
    description:
      type: string
      description: <p>Characteristic description</p>
    value:
      type: string
      description: <p>Characteristic default value</p>
    valueMaxLength:
      type: integer
      format: int32
    valueMin:
      type: string
      description: <p>Max length value of the characteristic</p>
    valueMax:
      type: string
      description: <p>Max value of the characteristic</p>
    mandatory:
      type: string
      description: <p>Characteristic mandatory to define :<b> True(Y) Or False(N)</p>
    updateable:
      type: string
      description: <p>Characteristic updateable :<b> True(Y) Or False(N)</p>
    derogatory:
      type: string
      description: <p>Characteristic Derogatory :<b> True(Y) Or False(N)</p>
    multipleChoice:
      type: string
      description: <p>Characteristic have multi choice :<b> True(Y) Or False(N)</p>
    regulationType:
      type: string
      description: <p>Characteristic regulation type :<b> True(Y) Or False(N)</p>
    specialCondition:
      type: string
      description: <p>Characteristic special condition :<b> True(Y) Or False(N)</p>
    generalCondition:
      type: string
      description: <p>Characteristic general condition :<b> True(Y) Or False(N)</p>
    visible:
      type: string
      description: <p>Characteristic visible to final user :<b> True(Y) Or False(N)</p>
    valueList:
      type: array
      items:
        $ref: aggregate.yaml#/CodeLabel
getproductdetailsValidityRangeDate:
  type: object
  properties:
    startDt:
      type: string
      format: date
      description: <p>This field indicate the date when the status will be effective.</p>
    endDt:
      type: string
      format: date
      description: <p>This field refers to the date till when the current merchant activity status will be valid.</p>
Characteristic:
  required:
    - uniqueIndex
    - productContextCode
    - contextCode
    - labelGroup
    - label
    - valueMode
  type: object
  properties:
    uniqueIndex:
      type: integer
      format: int32
    productContextCode:
      type: string
      description: <p>Refers to the product context code, a unique value attributed to each component of the product.</p>
    contextCode:
      type: string
      description: <p>Refers to the characterestic context code</p>
    labelGroup:
      type: string
      description: <p>Refers to the characterestic group label</p>
    label:
      type: string
      description: <p>Refers to the characterestic label</p>
    typePopup:
      type: string
      description: <p>Refers to the popup type</p>
    valueMode:
      type: string
      description: <p>Characteristic value mode</p>
    checked:
      type: string
      description: <p>checked value :<b> True(Y) Or False(N)</p>
    description:
      type: string
      description: <p>Characteristic description</p>
    valueList:
      type: array
      items:
        $ref: aggregate.yaml#/CodeLabel
    value:
      type: string
      description: <p>Min value of the characteristic</p>
    valueMaxLength:
      type: integer
      format: int32
    valueMin:
      type: string
      description: <p>Min value of the characteristic</p>
    valueMax:
      type: string
      description: <p>Min value of the characteristic</p>
    mandatory:
      type: string
      description: <p>Characteristic mandatory to define :<b> True(Y) Or False(N)</p>
    updateable:
      type: string
      description: <p>Characteristic updateable :<b> True(Y) Or False(N)</p>
    derogatory:
      type: string
      description: <p>Characteristic Derogatory :<b> True(Y) Or False(N)</p>
    multipleChoice:
      type: string
      description: <p>Characteristic have multi choice :<b> True(Y) Or False(N)</p>
    regulationType:
      type: string
      description: <p>Characteristic regulation type :<b> True(Y) Or False(N)</p>
    specialCondition:
      type: string
      description: <p>Characteristic special condition :<b> True(Y) Or False(N)</p>
    generalCondition:
      type: string
      description: <p>Characteristic general condition :<b> True(Y) Or False(N)</p>
    visible:
      type: string
      description: <p>Characteristic visible to final user :<b> True(Y) Or False(N)</p>
CodeLabel:
  required:
    - code
    - label
  type: object
  properties:
    code:
      type: string
      description: <p>Possible value code</p>
    label:
      type: string
      description: <p>Possible value label</p>
    defaultSelected:
      type: string
      description: <p>indicates if current value is default value (selected by default)</p>
attribut:
  required:
    - uniqueIndex
    - productContextCode
    - labelGroup
    - label
    - valueMode
  type: object
  properties:
    uniqueIndex:
      type: integer
      format: int32
    productContextCode:
      type: string
      description: <p>Refers to the product context code, a unique value attributed to each component of the product.</p>
    contextCode:
      type: string
      description: <p>refers to contextCode </p>
    labelGroup:
      type: string
      description: <p>Refers to the characterestic group label</p>
    label:
      type: string
      description: <p>Refers to the characterestic label</p>
    typePopup:
      type: string
      description: <p>Refers to the popup type</p>
    valueMode:
      type: string
      description: <p>Characteristic value mode</p>
    checked:
      type: string
      description: <p>checked value :<b> True(Y) Or False(N)</p>
    description:
      type: string
      description: <p>Characteristic description</p>
    value:
      type: string
      description: <p>Characteristic default value</p>
    valueMaxLength:
      type: integer
      format: int32
    valueMin:
      type: string
      description: <p>Min value of the characteristic</p>
    valueMax:
      type: string
      description: <p>Max value of the characteristic</p>
    mandatory:
      type: string
      description: <p>Characteristic mandatory to define :<b> True(Y) Or False(N)</p>
    updateable:
      type: string
      description: <p>Characteristic updateable :<b> True(Y) Or False(N)</p>
    derogatory:
      type: string
      description: <p>Characteristic Derogatory :<b> True(Y) Or False(N)</p>
    multipleChoice:
      type: string
      description: <p>Characteristic have multi choice :<b> True(Y) Or False(N)</p>
    regulationType:
      type: string
      description: <p>Characteristic regulation type :<b> True(Y) Or False(N)</p>
    specialCondition:
      type: string
      description: <p>Characteristic special condition :<b> True(Y) Or False(N)</p>
    generalCondition:
      type: string
      description: <p>Characteristic general condition :<b> True(Y) Or False(N)</p>
    visible:
      type: string
      description: <p>Characteristic visible to final user :<b> True(Y) Or False(N)</p>
    valueList:
      type: array
      items:
        $ref: aggregate.yaml#/CodeLabel
getproductdetailsProduct:
  required:
    - bankCode
    - productCode
    - productName
    - statusCode
  type: object
  properties:
    bankCode:
      type: string
      description: <p>Code identifying the bank
        It is a 6-digit code must be stored in the PowerCARD BANK table
        </p>
    productParentCode:
      type: string
      description: <p>This is the parent product
        PowerCARD internal identifier (e.g. technical product internal identifier
        for the level 1 customization
        product). It is inherited from the parent product during the
        customization.
        - For technical product:<b> It is used to link a customized product to the basic product from which it is derived. It is used to link the parent product to the customized product in PowerCARD GUI and is also used to retrieve the parent product external identifier.
        - For a level 1 or 2 customized product:<b> It is used to link a customized to a technical product from which it is derived. It is used to retrieve the technical product external identifier.
        This identifier is displayed on level
        1 and level 2 customized products.
        </p>
    productParentExternalCode:
      type: string
      description: <p>Product parent externalCode</p>
    productParentName:
      type: string
      description: <p>This field refers to the parent product name. It is entered during the technical product definition and inherited at different customization levels. It may be modified during the product customization.</p>
    productCode:
      type: string
      description: <p>This is the product PowerCARD internal identifier. It is used to link the contract elements to products from which they are derived.</p>
    productName:
      type: string
      description: <p>This field refers to the product name. It is entered during the technical product definition and inherited at different customization levels. It may be modified during the product customization.</p>
    productDescription:
      type: string
      description: <p>This field refers to the product detailed description. It is entered
        during the technical product’s definition and inherited at different customization levels. It may be modified during the product customization throughout its life cycle.
        </p>
    productType:
      type: string
      description: <p>This is the product type. Possible
        values are:<b>
        A:<b> Acceptance,
        E:<b> Equipment,
        M:<b> Management/Service.
        </p>
    productLevelCode:
      type: integer
      format: int32
    validFrom:
      type: string
      format: date
      description: <p>This is the product validity start date.</p>
    validUntil:
      type: string
      format: date
      description: <p>This is the product validity end date.</p>
    statusCode:
      type: string
      description: <p>This is the status of the product in the catalog. Possible values are:<b>
                     C:<b> Marketable,
                     L:<b> Customizable,
                     P:<b> Ongoing,
                     R:<b> Rejected,
                     M:<b> Maintenance,
                     T:<b> Closed,
                     A:<b> Archived
                     </p>
    statusRangeDate:
      $ref: aggregate.yaml#/getproductdetailsValidityRangeDate
    externalCode:
      type: string
      description: <p>This is the product PowerCARD external (distributor) identifier. It is used to find a product in the database.</p>
    currencyCode:
      type: string
      description: <p>This field specifies the default currency in which should appear the different characteristics of product payment type (i.e. banking
        ceilings, other amounts, turnover which are sometimes given in local
        currency). It is therefore useful if the local currency is different from the regulatory currency. It must be defined in ‘CURRENCY_TABLE’
        table.
        </p>
    subscriptionLevel:
      type: string
      description: <p>The application level of a service product indicating if it can be subscribed to one of the following levels:<b>
                     M:<b> Merchant,
                     C:<b> Chain,
                     A:<b> All
                     </p>
    externalID1:
      type: string
      description: <p>This field indicates the first product external identifier. It is used to find a product in another system.</p>
    externalID2:
      type: string
      description: <p>This field indicates the second product external identifier. It is used to find a product in another system.</p>
    exclusiveFlag:
      type: string
      description: <p></p>
    exclusiveRangeDate:
      $ref: aggregate.yaml#/getproductdetailsValidityRangeDate
    productFamilyFlag:
      type: string
      description: <p>This is the package type if it exists.
        Possible values are:<b>
        C:<b> Executive Contract,
        V:<b> Convention,
        O:<b> Offer.
        </p>
    productFamilyId:
      type: string
      description: <p>This field indicates the package identifier concerned by this product.</p>
    sensitiveFlag:
      type: string
      description: <p>This field indicates if the product is considered sensitive or not, and any application to this product must be validated or not by a
        hierarchical.
        Possible values are:<b>
        0:<b> Not Sensitive
        1:<b> Sensitive.
        </p>
    refEchange:
      type: string
      description: <p>Ref echange</p>
    productVersion:
      type: integer
      format: int32
    basicProductCode:
      type: string
      description: <p>Basic Product code
        Reserved for future use
        </p>
    changesPropagated:
      type: string
      description: <p>Changes Propagated
        Reserved for future use
        </p>
    productCategory:
      type: string
      description: <p>Product Category</p>
    productOrigin:
      type: string
      description: <p>Product Origin</p>
    characteristicList:
      type: array
      items:
        $ref: aggregate.yaml#/Characteristic
    serviceList:
      type: array
      items:
        $ref: aggregate.yaml#/getproductdetailsAcqProductService
    settlementCondition:
      required:
        - uniqueIndex
        - productContextCode
        - contextExternalCode
        - contextGrouping
        - labelGroup
        - label
      type: object
      properties:
        uniqueIndex:
          type: integer
          format: int32
        productContextCode:
          type: string
          description: <p>Refers to the product context code, a unique value attributed to each component of the product.</p>
        contextExternalCode:
          type: string
          description: <p>Refers to the internal product context code</p>
        contextInternalCode:
          type: string
          description: <p>Refers to the internal product context code</p>
        contextGrouping:
          type: integer
          format: int32
        labelGroup:
          type: string
          description: <p>Refers to the characterestic group label </p>
        label:
          type: string
          description: <p>Refers to the characterestic label</p>
        parentContextCode:
          type: string
          description: <p>Refers to the parent product context code, a unique value attributed to each component of the product.</p>
        contextCode:
          type: string
          description: <p>refers to contextCode </p>
        checked:
          type: string
          description: <p>checked value :<b> True(Y) Or False(N)</p>
        criteriaList:
          type: array
          items:
            $ref: aggregate.yaml#/criteria
        attributList:
          type: array
          items:
            $ref: aggregate.yaml#/attribut

ChargingRule:
  required:
    - uniqueIndex
    - productContextCode
    - contextExternalCode
    - contextGrouping
    - labelGroup
    - label
  type: object
  properties:
    uniqueIndex:
      type: integer
      format: int32
    productContextCode:
      type: string
      description: <p>Refers to the product context code, a unique value attributed to each component of the product.</p>
    contextExternalCode:
      type: string
      description: <p>Refers to the external product context code</p>
    contextInternalCode:
      type: string
      description: <p>Refers to the internal product context code</p>
    contextGrouping:
      type: integer
      format: int32
    labelGroup:
      type: string
      description: <p>Refers to the characterestic group label </p>
    label:
      type: string
      description: <p>Refers to the characterestic label</p>
    parentContextCode:
      type: string
      description: <p>Refers to the parent product context code, a unique value attributed to each component of the product.</p>
    contextCode:
      type: string
      description: <p>refers to contextCode </p>
    criteriaList:
      type: array
      items:
        $ref: aggregate.yaml#/criteria
    attributList:
      type: array
      items:
        $ref: aggregate.yaml#/attribut



#-----------creatacceptorpoint


NetworkIdentifiersList:
  type: object
  properties:
    merchantOnId:
      $ref: aggregate.yaml#/creatacceptorpointMerchantOnId
creatacceptorpointMerchantOnId:
  type: object
  properties:
    merchantOnIdIdentifier:
      type: string
      description: <p>Merchant identification at Network indicator "MERCHANT_ID_IND" ,Valid values are stored in the PowerCARD 'MERCHANT_LABEL_ID' table</p>
    merchantOnId:
      type: string
      description: <p>Merchant ID at network N, like Visa for instance, assigns ID to a merchant to identify their business.
        Captured values lengths should respect the minimum and maximum lengths (IND_LENGTH_MIN/IND_LENGTH_MAX) set in the MERCHANT_LABEL_ID table
        </p>
creatacceptorpointMerchantAcceptorPoint:
  required:
    - contractReference
    - activityIdentifier
    - siteIdentifier
    - acceptorPointName
    - receiptLabel
    - doingBusinessAs
    - location
  type: object
  properties:
    merchantAcceptorPointId:
      type: string
      description: <p>Acceptor point internal identification automatically generated by the system</p>
    contractReference:
      type: string
      description: <p>Contract element's reference number</p>
    activityIdentifier:
      type: string
      description: <p>Activity identifier ID related to MCC representing the merchant activity</p>
    siteIdentifier:
      type: string
      description: <p>The Site Identifier</p>
    acceptorPointName:
      type: string
      description: <p>The Acceptor point Name</p>
    receiptLabel:
      type: string
      description: <p>Label printed in the transaction receipt</p>
    privateId1:
      type: string
      description: <p>External Identifier 1</p>
    supervisorCardsNumber:
      type: integer
      format: int32
    doingBusinessAs:
      type: string
      description: <p>The Merchant Acceptor Point Acronym
        This acronym is used during the clearing and settlement of all transactions performed at this point
        </p>
    location:
      type: string
      description: <p>The Acceptor Point location</p>
    groupingCode:
      type: string
      description: <p>Code is used for grouping different Acceptor points under user defined criteria</p>
    networkIdentifiersList:
      $ref: aggregate.yaml#/NetworkIdentifiersList



#-------------Validatemerchant

#------------------UpdatemerchantBankaccount

UpdatemerchantBankaccountMerchantAccount:
  required:
    - accountSeqID
    - accountType
    - accountCategory
    - accountBankCode
    - accountBranchCode
    - accountNumber
    - accountCurrency
    - batchGrouping
    - feesGrouping
    - billableElementGrouping
    - chargebackGrouping
  type: object
  properties:
    accountSeqID:
      type: string
      description: <p>Internal Sequence of the merchant account as generated by PowerCARD.</p>
    accountType:
      type: string
      description: <p>The account type. Can be:<b>
        P:<b> Primary account (Default posting account),
        S:<b>Secondary (Posting account based on settlement conditions),
        H:<b> Hierarchical (Account belonging to a node in chain/sub-chain hierarchy, to which the merchant is linked).
        </p>
    chainBankCode:
      type: string
      description: <p>When AccountType is set to Hierarchical, then the this field must be populated with bank chain code</p>
    chainCode:
      type: string
      description: <p>When AccountType is set to Hierarchical, then the chain code must be populated whit account chain owner</p>
    accountCategory:
      type: string
      description: <p>Account category:Possible values can be downloaded from the PowerCARD ACCOUNT_TYPE_LIST table</p>
    accountBankCode:
      type: string
      description: <p>Code identifying the bank where the account is opened.It is a 6-digit code must be stored in the PowerCARD BANK table under the general parameter section.</p>
    accountBranchCode:
      type: string
      description: <p>Code of the branch where the account is opened.This code must be stored in the PowerCARD BRANCH table under the general parameter section.</p>
    accountNumber:
      type: string
      description: <p>Merchant bank account number or BBAN (Base Bank Account Number). To ensure the validity of the account, the system checks the Bank Account (RIB) Control key and the account number length against the related bank parameters (Ex:<b> In France this length is 23 characters). This field is required for primary accounts and for secondary accounts with no defined "Core system reference".
                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                            Regarding the account number structure, PowerCARD supports the following account number standard structure:<b>
                                                                                                                                                                                                                                                            BBBB BGGG GGCC CCCC CCCC CKK, Where:<b>
                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                            "B" = Bank code,
                                                                                                                                                                                                                                                            "G" = Branch code,
                                                                                                                                                                                                                                                            "C" = Account number,
                                                                                                                                                                                                                                                            "K" = Bank Account (RIB) Control key.
                                                                                                                                                                                                                                                            </p>
    accountCurrency:
      type: string
      description: <p>Currency code as defined by ISO-4217 Possible values must be downloaded from the PowerCARD CURRENCY_TABLE table
        Default value of the account currency is the bank currency. This currency can be changed only if the bank supports multi-currency. This field is required for primary accounts and for secondary accounts with no defined "core system reference"
        </p>
    bic:
      type: string
      description: <p>The BIC defined for the merchant bank account (see bank parameter) is displayed for information
        Reserved for future use
        </p>
    iban:
      type: string
      description: <p>Merchant account number in IBAN format (International Bank Account Number). The IBAN format is “CP CC BBAN” where:<b>

                       "CP" = Country code,
                         "CC" = Control key (from 02 to 98),
                         "BBAN" = Account number defined as described above.
                         
                         The system controls the existence of the country code in the referential "COUNTRY" and verifies the validity of the Control key. This field is required for primary accounts and for secondary accounts with no defined "Core system reference".
                         Reserved for future use
                         </p>
    coreSystemReference:
      type: string
      description: <p>External reference number of the account</p>
    batchGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all remittances grouped or not. Possible values (for remittances)
        D:<b> Detail (Remittance by Remittance),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    feesGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all fees grouped or not. Possible values (for Fees)
        D:<b> Detail (Fee by Fee),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    billableElementGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all billing elements grouped or not. Possible values are:<b>
                     Possible values (for billable elements)
                     D:<b> Detail (Billable Element by Billable Element),
                     E:<b> Aggregate by contract element,
                     M:<b> Aggregate by merchant,
                     C:<b> Aggregate by the chain attached to the merchant,
                     C:<b> Aggregate all
                     </p>
    chargebackGrouping:
      type: string
      description: <p>Flag indicating whether the account transfer should be done for all chargeback grouped or not. Possible values (for Chargebacks)
        D:<b> Detail (Chargeback by Chargeback),
        E:<b> Aggregate by contract element,
        M:<b> Aggregate by merchant,
        C:<b> Aggregate by the chain attached to the merchant,
        A:<b> Aggregate all
        </p>
    routingNumber:
      type: string
      description: <p>Account routing number (Required for United States' Accounts).
        Reserved for future use
        </p>


