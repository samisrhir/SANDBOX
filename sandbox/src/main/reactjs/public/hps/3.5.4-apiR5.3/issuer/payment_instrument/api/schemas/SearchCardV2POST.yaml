openapi: "3.0.3"
info:
  title: Payment Instrument API documentation
  description: <p>Payment Instrument and Cardholder operation management include APIs for Payment Instrument maintenance , Payment instrument operations and Status operation.</p>
  version: PowerCARD-Issuer 3.5.4-apiR5.3
servers:
  - url: https://sandbox.connectapi.hps-worldwide.com/PowerCardConnectApi/rest
    description: Development server
paths:
  # ------- SearchCard API  
  /SearchCard/V2:
    post:
      description:  <h3>API Overview</h3>
                    <P>When a search card web service is used, agents and customers can include several options in the query message. PowerCARD is then responsible of looking for all the cards in the cardholder database that meets the combination of the input criteria being sent within the request.</P>
                    <p>Input criteria can include for instance card number, customer identification, card status, card product code, cardholder nameâ€¦</p>
                    <h3>Functional Description</h3>
                    <img  src="./docs/SearchCard.png" />
      summary: The search card web service is used, agents and customers can include several options...
      tags:
        - Search Card
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCardV35Rq'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchCardV35Rq'
      responses:  
         200:
          description:
                  <div>
                          Successful
                          <p>Business Error Codes &#58;</p>
                           <table>
                              <tr>
                                <th>Error code</th>
                                <th>Error Description</th>
                              </tr>
                              <tr> 
                                <td>20501</td>
                                <td>Invalid Card Number/Token Id</td>
                              </tr>	
                              <tr> 
                                <td>20502</td>
                                <td>One of the three fields (CardNumber, ClientCode, CorporateId) must be completed</td>
                              </tr>	
                              <tr> 
                                <td>20503</td>
                                <td>Invalid Customer Id  M20503_INVALID_CUSTOMER_ID</td>
                              </tr>	
                              <tr> 
                                <td>20504</td>
                                <td>Invalid Catalogue Payment Istrument Product</td>
                              </tr>	
                              <tr> 
                                <td>20505</td>
                                <td>Invalid Catalogue Payment Instrument Product Version</td>
                              </tr>	
                              <tr> 
                                <td>20506</td>
                                <td>Invalid Corporate Id</td>
                              </tr>	
                              <tr> 
                                <td>20507</td>
                                <td>Invalid Card Status Code</td>
                              </tr>	
                              <tr> 
                                <td>20508</td>
                                <td>No data found</td>
                              </tr>									
                           </table>
                  </div>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardV35Rs'
            application/xml:
                          schema:
                              $ref: '#/components/schemas/SearchCardV35Rs'       
 # Components definition
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 
          <div>
               <h5>Api key authorization</h5>
               <p>JWT authorization header using Bearer scheme. Example &#8282; "Authorization &#8282; Bearer {token}"</p>
               <table>
                  <tr>
                      <td>Name &#8282;</td>
                      <td>Authorization</td>
                  </tr>
                   <tr>
                      <td>In &#8282;</td>
                      <td>Header</td>
                  </tr>
                </table>
          </div>      
  schemas:

    # --- Import CreateDebitCardV35 request and response
      SearchCardV35Rq:
                     $ref: 'request.yaml#/SearchCardV35Rq'
      SearchCardV35Rs:
                     $ref: 'response.yaml#/SearchCardV35Rs'         
security:
  - bearerAuth: []