TokenAuthentication:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    providerLogin:
      type: string
      example: firstUser
    providerPassword:
      type: string
      example: $2a$10$AnRf8HJwhDOgvM/7PqXkNOnbyebzUPJFiFvN8wLDoLkKaYAK0dS1e
    userLanguage:
      type: string
      example: en_US
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateInterestRateIndexV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    accountId:
      type: string
      example: '123206721'
      description: Should contain the credit account number subject to this interest
        rate change.
    interestRateIndex:
      description: Refers to the interest rate index as alredr defined in CR_INTEREST_SCHEDULE
        table.
      example: AA22
      type: string
    effectiveDate:
      description: Effective date starting from wghen the new interest rate index
        will be applied.
      type: string
      example: '2020-12-22T00:00:00'
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - accountId
    - interestRateIndex
    - effectiveDate
    - requestInfo
GetCardDetailsV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      example: '4250120656063430'
      description: The card number or the Card Token Id.
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - cardNumber
    - requestInfo
ActivateContactLessV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      example: '4250120088972067'
      description: The card number or the Card Token Id.
    expiryDate:
      type: date
      example: ''
      description: Refers to the expiry date of the card Format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
        The value will be in GMT.
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - cardNumber
    - requestInfo
    - expiryDate
    - activationFlag
ChangeCardProductV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    newCatPIProduct:
      type: string
      description: It is a 6 digit code identifying the payment instrument product
        code to ne assigned to the card. Valid values must be retrieved from PowerCARD
        <b>CATALOGUE_PRODUCT</b> table with product type = P
    newCatPIProductVersion:
      type: string
      description: It is a 10 caracter fields identifying the payment instrument version.
        Valid values must be retrieved from PowerCARD <b>CATALOGUE_PRODUCT</b> table
        with product type = P
    newCatAccProduct:
      type: string
      description: It is a 6 digit code identifying the account product code to ne
        assigned to the card’s account. Valid values must be retrieved from PowerCARD
        <b>CATALOGUE_PRODUCT</b> table with product type = A Required in case of <b>Credit/Prepaid/Charge</b>
        Card update.
    newCatAccProductVersion:
      type: string
      description: It is a 10 caracter fields identifying the account version. Valid
        values must be retrieved from PowerCARD <b>CATALOGUE_PRODUCT</b> table with
        product type = A Required in case of <b>Credit/Prepaid/Charge</b> Card update.
    expiryDT:
      type: date
      description: Refers to the new expiry date of the card Format <b>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</b>
        The value will be in GMT.
    deliveryBranch:
      type: string
      description: The delivery branch code. 6 digits code of the branch to which
        the new card will be delivered if the customer has requested so. Valid values
        must be downloaded from PowerCARD BRANCH table.
    feesOption:
      type: string
      description: The fees option used to set fees during the <b>PIN</b> request.
        Possible values are<br> <b>Y<b/> - Apply fees <br> <b>N</b> - Do not apply
        fees
    feeAmount:
      type: object
      $ref: aggregate.yaml#/CurAmtV35
      description: Used only if the FeesOption field is set to Y. This aggregate contains
        the fee amount and currency.
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
ChangePinV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p>The card number or the Card Token Id.It should contain a valid
        value</p>
    pinBlockFormat:
      type: string
      description: <p> PIN Block Format this field indicates the format of the PIN
        block for the two PIN blocks (Old and new).Valid values are <br> <b>- 01</b>
        Format is based on the PIN, the PIN length, the selected rightmost digits
        of the account number, and the pad characters 0 and F—combined through an
        exclusive OR operation.<br> <b>- 03</b> Format is based on the PIN and the
        F pad character </p>
    pinMethod:
      type: string
      description: <p> Method of PIN validation This operation is performed within
        a Host Security Module (HSM) Valid values are <br> <b>- PVV</b> Pin Verification
        Value<br> <b>- OFS</b> Offset </p>
    currentPin:
      type: string
      description: <p> This field contains the current PIN. It is encrypted and formatted
        as a block of 16 hexadecimal digits. The PIN Block is transmitted encrypted
        under the <b>ZPK (Zone PIN key)</b>. This key should be shared between PowerCARD
        and the other party. This field is optional </p>
    currentPvv:
      type: string
      description: <p> Refers to the current <b>PVV/Offset</b> value that resides
        in the track 2 of the card. This value is mandatory only when the customer
        is aiming tyo change the existing PIN by a new one. This field is used for
        PIN verification. </p>
    newPin:
      type: string
      description: <p> This field contains a new PIN to replace an existing PIN. It
        is encrypted and formatted as a block of 16 hexadecimal digits. (A new PIN
        is chosen to replace the current PIN when the cardholder does not remember
        the current PIN, or the current PIN is compromised, or just wants a new PIN.).
        The PIN block encrypted under the <b>ZPK (Zone PIN key)</b> and must conform
        to the PIN Block Format 01 The ZPK key should be shared previously between
        PowerCARD and the other party. </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - cardNumber
    - requestInfo
    - newPIN
    - pinMethod
    - pinBlockFormat
CreateAccountTransactionV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    accountTransaction:
      type: object
      $ref: aggregate.yaml#/AccountTransactionV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - cardNumber
    - requestInfo
GetAccountBalanceV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p> The card number must contain the primary card number of the
        customer. The number should be valid and previously present in the PowerCARD
        CARD table under the cardholder section. This field becomes mandatory when
        the shadow account number is not provided. </p>
    clientCode:
      type: string
      description: "<p> ClientCode\tC(24)\t-\tOptional (max  1)\tThe client code present\
        \ in the table <b>CLIENT</b> in PowerCARD. </p>"
    accountId:
      type: string
      description: <p> The account identifier  It refers to the internal account number.
        This value should be already defined in the PowerCARD <b>SHADOW_ACCOUNT</b>
        table. This field is mandatory if the card number is not provided. </p>
    accountType:
      type: string
      description: <p> Account type refers to the type of the account.Possible values
        can be downloaded from the PowerCARD <b>ACCOUNT_TYPE_LIST</b> table. </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - requestInfo
RequestPinV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p> The card number must contain the primary card number of the
        customer. The number should be valid and previously present in the PowerCARD
        CARD table under the cardholder section. This field becomes mandatory when
        the shadow account number is not provided. </p>
    sendingMode:
      type: string
      enum:
        - WBS
        - VEW
        - EML
        - SMS
        - PML
        - BRC
      description: <p> Mode of re-sending the PIN select one value from the following
        list <b>WBS - </b>Returns the new PIN value in the response<br> <b>VEW - </b>
        Returns the old PIN (For future use)<br> <b>EML - </b> Send the PIN using
        the customer email address (For future use)<br> <b>SMS - </b>Send the PIN
        by SMS (For future use)<br> <b>PML - </b>Send the PIN by  Postal address<br>
        <b>BRC - </b>Send the PIN mailer to <br> </p> <p>the branch (For future use)
        For the time being, only the options WBS and PML are supported. </p>
    feesOption:
      type: string
      description: <p> The fees option used to set fees during the PIN request. Possible
        values are <b>Y</b> - Apply fees <b>N</b> - Do not apply fees </p>
    feeAmount:
      type: object
      $ref: aggregate.yaml#/CurAmtV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - requestInfo
SetCustomerDetailV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    actionCode:
      type: string
      description: <p> Action Code Valid values are <br> <b>C</b> - Create<br> <b>U</b>
        - Update<br> <b>D</b> - Cancel<br> <b>B</b> - Assign New branch to customer
        (Valid only in case of CustomerDetail)<br> </p>
    customerId:
      type: string
      description: <p> Customer identifier,Refers to the unique customer identification
        auto generated by the system in case of PersonId aggregate not passed in the
        request. </p>
    customerDetail:
      type: object
      description: <p> Refers to the demographic information of the client such as
        names, professional activity, job details … This aggregate is Mandatory if
        ExistingClient block is not provided </p>
      $ref: aggregate.yaml#/CustomerDetailsV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - requestInfo
GetCustomerDetailV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    clientCode:
      type: string
      example: 97032.0
      description: <p> Should contain the customer identification number in PowerCARD.
        This value must be previously defined in the PowerCARD <b>CLIENT</b> table.
        Required if CorporateId is empty. </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - requestInfo
GetLoyaltyAccountsV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    bankCode:
      type: string
      description: <p>Represent the bankcode of the account owner.</p>
    accountOwnerType:
      type: string
      description: <p> Indicates the type of the entity that owns the loyalty account.
        Possible values are the following<br> <b>CH</b> = Cardholder.<br> <b>SA</b>
        = Shadow Account<br> The value transmitted in the next field is based on the
        value of that one. </p>
    accountOwnerId:
      type: string
      description: <p> It refers to the identification of the entity that owns the
        loyalty account. Based on the value in the previous field, this field may
        contain </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - requestInfo
    - bankCode
    - accountOwnerType
    - accountOwnerId
UpdateAddressV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    clientCode:
      type: string
      description: <p>To provide the client code. This field is mandatory in case
        of <b>EntityType is ‘CL’</b> </p>
    entityType:
      type: string
      enum:
        - CH
        - CL
        - CO
      description: <p> Concerned entity code. Possible values are<br> <b>CH</b> -
        Card<br> <b>CL</b> -  Client<br> <b>CO</b> -  Corporate<br> </p>
    cardNumber:
      type: string
      description: <p> To provide the CardNumber or the Token ID. This field is mandatory
        in case of <b>EntityType is ‘CH’</b> </p>
    corporateId:
      type: string
      description: <p> To provide the Corporate Id. This field is mandatory in case
        of <b>EntityType is ‘CO’</b> </p>
    addressPurpose:
      type: object
      $ref: aggregate.yaml#/AddressPurpose2V35
    address:
      type: object
      $ref: aggregate.yaml#/AddressV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateBankAccountV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    actionCode:
      type: string
      description: <p> Refers to the desired action, possible values are <br> <b>A</b>
        - Add Bank Account <br> <b>U</b> - Update Bank Account <br> <b>D</b> - Delete
        Bank Account <br> </p>
    cardNumber:
      type: string
      description: <p> Card Number this field must hold the card number to which,
        1) the bank account will be added, 2) the bank account information ned to
        be updated, or 3) the bank account must be deleted. </p>
    accountId:
      type: string
      description: <p> Account Number this field must hold the credit account number
        to which, 1) the bank account will be added, 2) the bank account information
        ned to be updated, or 3) the bank account must be deleted. Note that, one
        of the two fields, Card number and Account number is mandatory. </p>
    bankAcctRec:
      type: array
      items:
        type: object
        $ref: aggregate.yaml#/BankAcctRecV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateCardLimitsV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p> Refers to the card number for which the requester is asking
        to update the limit. </p>
    cardLimit:
      type: array
      items:
        type: object
        $ref: aggregate.yaml#/CardLimitUpdateV35
    transactionCriteria:
      type: array
      items:
        type: object
        $ref: aggregate.yaml#/TransactionCriteriaV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
CreateCreditCardV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    customerDetails:
      type: object
      $ref: aggregate.yaml#/CustomerDetailsV35
    cardDetails:
      type: object
      $ref: aggregate.yaml#/CreditCardDetailsV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
GetCardCVC2V35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      example: '4250120088972067'
      description: <p>The card number or the Card Token Id.</p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - cardNumber
    - requestInfo
GetCardDomainV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      example: '4250120088972067'
      description: <p>The card number or the Card Token Id.</p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - cardNumber
    - requestInfo
GetCardLimitsV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      example: '4250120088972067'
      description: <p>The card number or the Card Token Id.</p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - cardNumber
    - requestInfo
GetEventNotificationV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    entityCode:
      type: string
      description: <p> Indicate the entity code to which the communication strategy
        is linked. The possible values are <br> <b>‘CL’</b> Client<br> <b>‘CH</b>
        PAN<br> <b>‘SA’</b>Financial account </p>
    entityId:
      type: string
      description: <p> Indicate the entity identification to which the communication
        strategy is linked. The possible values are<br> - Should provide the client
        code where entity code is.<br> - Should provide PAN when entity Code is.<br>
        - Should provide the financial account where the entity code is SA.<br> </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - cardNumber
    - requestInfo
GetLoyaltyAccTrxsV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    bankCode:
      type: string
      description: <p> Represents the bank code of the loyalty account owner. </p>
    accountOwnerType:
      type: string
      description: <p> Indicates the type of the entity that owns the loyalty account.
        Possible values are the following<br> <b>CH</b> = Cardholder.<br> <b>SA</b>
        = Shadow Account<br> The value transmitted in the next field is based on the
        value of that one.<br> </p>
    accountOwnerId:
      type: string
      description: <p> It refers to the identification of the entity that owns the
        loyalty account. Based on the value in the previous field, this field may
        contain <br> - The shadow account <b>(SA)</b><br> - The card number <b>(CH)</b>
        </p>
    loyaltyAccountNbr:
      type: string
      description: <p> This field refers to a unique internal identification of the
        loyalty account liked to the card, channel…. This field must contain the  loyalty
        account subject to this cancellation. </p>
    selRangeDt:
      type: object
      $ref: aggregate.yaml#/ValidityRangeDateV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required:
    - cardNumber
    - requestInfo
RenewCardV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p>The card number.</p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
ReplaceCardV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p>The card number.</p>
    reasonCode:
      type: string
      description: <p> Must contain the replacement reason code. This code must be
        previously defined in the PowerCARD <b>REPLACEMENT_REASON_CODE</b> table under
        the cardholder parameter section. Valid values must be downloaded from PowerCARD
        </p>
    deliveryBranch:
      type: string
      description: <p> The delivery branch code. 6 digits code of the branch to which
        the new card will be delivered   if the customer has requested so. Valid values
        must be downloaded from PowerCARD <b>BRANCH</b> table </p>
    priorityIndicator:
      type: string
      description: <p> Refer to the priority of card embossing The value must exist
        in the table <b>PRIORITY_INDICATOR</b> </p>
    plasticDeliveryMethod:
      type: string
      description: <p> This field identifies the kind of mailing method used to deliver
        the card plastic (For example  Assured mail, Ordinary mail, Airmail…). When
        provided, it will be validated against the list defined at bank and product
        level. Otherwise, the field will be automatically defaulted from the default
        parameter at bank and product. Should be defined in the table <b>ELIGIBLE_DELIVERY_METHOD</b>.
        </p>
    feesOption:
      type: string
      description: <p> The fees option used to set fees during the replacement of
        the card. Possible values are <br> <b>Y</b> -  Apply fees while replacing
        the card.<br> <b>N</b> -  Do not apply fees on replace card. </p>
    feeAmount:
      type: object
      $ref: aggregate.yaml#/CurAmtV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateCardStatusV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p>The card number.</p>
    operation:
      type: string
      description: <p> Must indicate the type of operation being executed on the card.
        Possible values are <br> <b>A</b> - Activate the card<br> <b>L</b> - Deliver
        the card<br> <b>E</b>- Activate & Deliver the card<br> <b>D</b> - Deactivate
        the card<br> <b>B</b> - Block the card<br> <b>U</b> - Unblock the card queue.<br>
        <b>R</b> - Remove the card from the Stop list queue.<br> <b>S</b> - Place
        the card in stop list <br> <b>C</b>  -  Cancel the card<br> <b>T</b> - Stop
        renewing the card<br> </p>
    reasonCode:
      type: string
      description: |-
        <p> Reason code Refers to the reason why the agent or the customer is requesting to change the status of an existing card, required only if Operation is set to B, U , S and C. If operation is set to <b>B</b>, <b>C</b>  and <b>U</b>, this code must be a valid value that must previously defined in the <b>STATUS_REASON_LIST</b> table under the general parameter section. If operation is set to S, the reason code field must match one of the codes present in the <b>STOP_LIST_REASON_CODE</b> table
        Finally, If operation is set to R, the reason code field must match of the codes present in the <b>WITHDRAWAL_REASON_CODE</b> table. Note that reasons must be retrieved  from PowerCARD </p>
    description:
      type: string
      description: <p> Additional description. May contain an additional comments
        or description of the operation that describes briefly the operation. </p>
    rangeDate:
      type: object
      $ref: aggregate.yaml#/ValidityRangeDateV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateCardStatusReasonV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p> The card number or the Card Token Id. It should contain a valid
        value .</p>
    newStatusCode:
      type: string
      description: <p> Must indicate the new Status Code of an existing Card. </p>
    statusReasonCode:
      type: string
      description: <p> Status Reason code Refers to the reason why the agent or the
        customer is requesting to change the status of an existing card. It must contain
        a valid value that is prevousely defined in the <b>STATUS_REASON_LIST</b>
        table under the general parameter section. </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateCustomerCategoryV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    customerId:
      type: string
      description: <p> Used to transmit the customer identification code in PowerCARD.
        If provided only data belonging to this customer will be returned. If present
        in the message, this code must be already defied in the PowerCARD <b>CLIENT</b>
        table. </p>
    customerSegment:
      type: string
      description: <p> Specifies the customer segments to which the cardholder belongs.
        This field is used mainly for marketing segmentation purposes. Assignable
        values must be previously defined in the PowerCARD <b>CUSTOMER SEGMENT</b>
        table under the general parameters section. </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateCustomerNameV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    customerId:
      type: string
      description: <p> Used to transmit the customer identification code in PowerCARD.
        If provided only data belonging to this customer will be returned. If present
        in the message, this code must be already defied in the PowerCARD <b>CLIENT</b>
        table. </p>
    titleCode:
      type: string
      description: <p> Prefix or suffix added to the customer’s name. Titles may refer
        to social honorifics, professional designations, or academic ranks. This code
        must be previously defined in the PowerCARD <b>TITLE LIST</b> table under
        the general parameters section. </p>
    familyName:
      type: string
      description: <p> Cardholder’s last name. </p>
    secondFamilyName:
      type: string
      description: <p> Cardholder’s second family name if compound names are in use
        </p>
    firstName:
      type: string
      description: <p> Cardholder’s given name. </p>
    secondFirstName:
      type: string
      description: <p> Cardholder’s second first name if compound names are in use.
        </p>
    maidenName:
      type: string
      description: <p> Mother’s Maiden name </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateCustomerEmailV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    customerId:
      type: string
      description: <p> Used to transmit the customer identification code in PowerCARD.
        If provided only data belonging to this customer will be returned. If present
        in the message, this code must be already defied in the PowerCARD <b>CLIENT</b>
        table. </p>
    email:
      type: string
      description: <p> Must contain a valid Email address.<br> It must include two
        parts (the part before the '@' sign) and the domain portion (i.e. @yahoo.com,
        or @verizon.com, or @gmail.com...) </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateCustomerPhoneNumberV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    customerId:
      type: string
      description: <p> Used to transmit the customer identification code in PowerCARD.
        If provided only data belonging to this customer will be returned. If present
        in the message, this code must be already defied in the PowerCARD <b>CLIENT</b>
        table. </p>
    phoneNum:
      type: array
      items:
        type: object
        $ref: aggregate.yaml#/PhoneV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
TransferAccountToAccountV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p> The card number. It should contain a valid value .</p>
    srcAccountNbr:
      type: string
      description: <p> The source account number In case of credit Account, It should
        refer to the internal account number. This value should be already defined
        in the PowerCARD <b>SHADOW_ACCOUNT</b> table. </p>
    destAccountNbr:
      type: string
      description: <p> The destination account number In case of credit Account, It
        should refer to the internal account number. This value should be already
        defined in the PowerCARD <p>SHADOW_ACCOUNT</p> table </p>
    transferAmount:
      type: object
      $ref: aggregate.yaml#/CurAmtV35
    transactionDate:
      type: string
      description: <p> The transaction date. Date and time when the transaction took
        place. Format<br> <b>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</b><br> The value will be
        in GMT. </p>
    valueDate:
      type: string
      description: <p> The transaction value date. Date when the transaction will
        be considered the accounts. Format<br> <b>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</b><br>
        The value will be in GMT. </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
GetParameterListV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    parameterList:
      type: array
      items:
        type: object
        $ref: aggregate.yaml#/ParameterV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
SearchAuthorizationV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p> The card number or the Card Token Id. It should contain a valid
        value </p>
    rangeDate:
      type: object
      $ref: aggregate.yaml#/ValidityRangeDateV35
    dataSource:
      type: object
      $ref: aggregate.yaml#/DataSourceV35
    sourceAccountId:
      type: string
      description: <p>Source Account Id</p>
    destinationAccountId:
      type: string
      description: <p>Destination Account Id</p>
    referencenumber:
      type: string
      description: <p>Contains the reference number as defined in <b>ISO-8583 norm
        (Field 37)</b> </p>
    internalStan:
      type: string
      description: <p> Internal <b>STAN (System Trace Audit Number)</b>. </p>
    externalStan:
      type: string
      description: <p> External <b>STAN (System Trace Audit Number)</b>. This number
        is generated by the sender. It is a unique identification of the transaction.
        This number should remain unchanged in all the messages related to this transaction.
        </p>
    TransmissionTime:
      type: string
      description: <p> Transmission date sent by the initiator Format<br> <b>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</b>
        The value will be in GMT. </p>
    messageType:
      type: string
      description: <p> Message type as defined in the <b>ISO8583 protocol</b>. <br>
        This code must be previously defined in the PowerCARD  <b>MESSAGE_LIST</b>
        table under the general parameter section. </p>
    actionCode:
      type: string
      description: <p> Refers to the desired action, possible values are <br> <b>A</b>
        - Add Bank Account<br> <b>U</b> - Update Bank Account<br> <b>D</b> - Delete
        Bank Account<br> </p>
    processingCode:
      type: string
      description: <p> Must contains a code that identifies the cardholder transaction
        type Any value in this field must be previously defined in the PowerCARD <b>PROCESSING_LIST</b>
        table under the general parameter section. </p>
    amountFrom:
      type: object
      $ref: aggregate.yaml#/CurAmtV35
    amountTo:
      type: object
      $ref: aggregate.yaml#/CurAmtV35
    authoType:
      type: string
      description: <p> Refers to the authorization type, possible values are <br>
        <b>I</b> -  Issuing <br> <b>A</b> -  Acquiring <br> <b>B</b> -  Both issuing
        & acquiring <br> </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateCollaboratorSubscriptionStatusV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    corporateId:
      type: string
      description: <p> The organization/corporate identifier. This code must be already
        defied in the PowerCARD <b>CORPORATE</b> table </p>
    employeeId:
      type: string
      description: <p>The employee ID</p>
    subscriptionId:
      type: string
      description: <p>The generated subscription ID submitted by corporate portal
        contact person.</p>
    requestStatus:
      type: string
      description: <p> This is the status of the subscription request that has been
        initiated by the corporate admin.<br> <b>O</b> - Ongoing by the employee and
        not yet completed by him/her. This new status is allowed only in case of of
        request with status ‘S’ Submitted.<br> <b>R</b> - Rejected by the employee.
        This new status is allowed only in case of request with status ‘S’ Submitted.
        <br> <b>C</b> - Completed by the employee. This new status is allowed only
        in case of of request with status ‘O’ Ongoing.<br> </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
CreateDebitCardV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    customerDetails:
      type: object
      $ref: aggregate.yaml#/CustomerDetailsV35
    cardDetails:
      type: object
      $ref: aggregate.yaml#/CardDetailsCreateCardV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
CreateLoyaltyAccountV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    bankCode:
      type: string
      description: <p> Represent the bank for the account owner. </p>
    accountOwnerType:
      type: string
      description: <p> Indicates the type of the entity that owns the loyalty account.
        Possible values are the following <br> <b>CH</b> = Cardholder. <br> <b>SA</b>
        = Shadow Account <br> The value transmitted in the next field is based on
        the value of that one. <br> </p>
    accountOwnerId:
      type: string
      description: <p> It refers to the identification of the entity that owns the
        loyalty account. Based on the value in the previous field, this field may
        contain <br> <b>The shadow account (SA)</b><br> <b>The card number (CH)</b>
        </p>
    catalogLoyaltyProduct:
      type: string
      description: <p> It is a 6 digit code identifying the loyalty product code.
        Valid values must be retrieved from PowerCARD <b>CATALOGUE_PRODUCT</b> table
        with product type = <b>Y </b> </p>
    catalogLoyaltyProductVersion:
      type: string
      description: <p> It is a 6 digit code identifying the loyalty product code.
        Valid values must be retrieved from PowerCARD <b>CATALOGUE_PRODUCT</b> table
        with product type = <b>Y</b> </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
GetCollaboratorInitiatedSubscriptionV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    corporateId:
      type: string
      description: <p> The organization/corporate identifier. This code must be already
        defied in the PowerCARD <b>CORPORATE</b> table </p>
    employeeId:
      type: string
      description: <p>The employee ID</p>
    subscriptionId:
      type: string
      description: <p>The generated subscription ID submitted by corporate portal
        contact person.</p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
GetStatementHistoryV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    accountId:
      type: string
      description: <p>The <b>CMS</b> account identifier as defined in PowerCARD.</p>
    statSelRangeDt:
      type: object
      $ref: aggregate.yaml#/ValidityRangeDateV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
GetStockCardsOverviewV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    batchNumber:
      type: string
      description: <p> May contain the batch number generated internally by PowerCARD
        and assigned to the order being submitted by the agent. A batch number is
        a identifying a set of cards requested in the same order. </p>
    branchCode:
      type: string
      description: <p>The branch id of the institution./p>
    requestedDate:
      type: object
      $ref: aggregate.yaml#/ValidityRangeDateV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
LostStolenDeclarationV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p> This field indicates the card number of the Lost/Stolen declaration
        concerned card. </p>
    actionType:
      type: string
      description: <p> <b>A</b>  -  Add a lost Stolen record <br> <b>U</b>  - Update
        a lost and stolen record<br> </p>
    declarationStatus:
      type: string
      description: <p> <b>C</b>  <b>“Confirmed”</b>. Can be used with action <b>A
        and U</b> (Add or Update). The cardholder confirms that the card is lost/stolen.
        In this case the card status will be set to <b>‘Canceled’</b>. When action
        is U (Update), a lost and stolen case with status W must be existing for the
        PAN. <b>W</b>  <b>“Waiting confirmation”</b>. Can be used with action <b>A</b>
        (Add) only. The cardholder is not sure that his card is lost or stolen.. In
        this case the card status will be set to <b>‘Suspended</b> <b>D</b>  <b>“Cancelled”</b>.
        Can be used with action <b>U(Update)</b> only. A lost and stolen case with
        status W (Waiting for confirmation) must be existing for the PAN. </p> <p>
        The cardholder confirms back that the card is found, then the case is closed
        and cards are reinstated to the original status. </p>
    cardStatusReason:
      type: string
      description: <p> This field indicates the card status reason after submitting
        the declaration. This code must be a valid value that must previously defined
        in the <b>STATUS_REASON_LIST</b> table under the general parameter section.
        </p>
    stopListRangeDate:
      type: object
      $ref: aggregate.yaml#/ValidityRangeDateV35
    replacePanFlag:
      type: string
      description: <p> If the <b>“replacement option”</b> defined in <b>card status
        reason</b> is set to <b>“ALLOW”</b> (in the table <b>STATUS_REASON_LIST for
        the user reason</b> ), the value of this flag will specify whether a <b>new
        PAN</b> will be generated or not. The possible values are<br> <b>‘Y’</b>:Yes
        Replace PAN <br> <b>‘N’</b> No Do not replace PAN<br> This flag triggers replacement
        only when the declaration status is confirmed. </p>
    incidentDate:
      type: string
      description: <p> This field indicates the date when the card has been lost or
        stolen. If not specified this date gets systematically the business date as
        default date during the card Lost/Stolen case declaration </p>
    declarationDate:
      type: string
      description: <p> This field indicates the date when the card has been declared
        as lost or stolen. If not specified this date gets systematically the business
        date as default date during the card Lost/Stolen case declaration. </p>
    countryCode:
      type: string
      description: <p> This field represents the country where the card has been lost
        or found. This value must be present in the PowerCARD <b>COUNTRY</b> table
        under the general parameters section. </p>
    city:
      type: string
      description: <p> This field represents the city where the card has been lost.
        This is a free text city name </p>
    stateProvince:
      type: string
      description: <p> Free text indicating the state or the province where the card
        has been lost. </p>
    reportedByCardholder:
      type: string
      description: <p> A flag to indicate if the lost stolen declaration is done by
        the cardholder or not. The possible values are <br> <b>‘Y’</b> Yes <br> <b>‘N’</b>
        No <br> </p>
    reporterName:
      type: string
      description: <p> The reporter name if the declaration isn’t done by the cardholder.
        </p>
    reporterComment:
      type: string
      description: <p> The reporter comment. </p>
    policeDeclarationInd:
      type: string
      description: <p> Y/N indicator <br> <b>Y </b>Police declaration done <br> <b>N
        </b> Police declaration not done.<br> </p>
    policeDeclaration:
      type: object
      $ref: aggregate.yaml#/PoliceDeclarationV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
OrderStockCardsV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    branchCode:
      type: string
      description: <p>Represent the branch of the financial institution.</p>
    catPIProduct:
      type: string
      description: <p> It is a 6 digit code identifying the payment instrument product
        code being requested in the application. Valid values must be retrieved from
        PowerCARD <b>CATALOGUE_PRODUCT</b> table with product type = <b>P</b> </p>
    catPIProductVersion:
      type: string
      description: <p> It is a 10 caracter fields identifying the payment instrument
        version. Valid values must be retrieved from PowerCARD <b>CATALOGUE_PRODUCT</b>
        table with product type = <b>P</b>. </p>
    catAccountProduct:
      type: string
      description: <p> It is a 6 digit code identifying the account product code being
        requested in the application. Valid values must be retrieved from PowerCARD
        <b>CATALOGUE_PRODUCT</b> table with product type = <b>A</b> </p>
    catAccountProductVersion:
      type: string
      description: <p> It is a 10 caracter fields identifying the account product
        version. Valid values must be retrieved from PowerCARD <b>CATALOGUE_PRODUCT</b>
        table with product type = <b>A</b>. </p>
    plasticCode:
      type: string
      description: <p> It refers to the plastic of the card to be personalized. Valid
        values must be previously defined in the PowerCARD <b>PLASTIC_LIST</b> table
        and could be populated using. </p>
    nbrOfCards:
      type: string
      description: <p>This field indicates the number of cars to be personalized.</p>
    embossedName:
      type: string
      description: <p>This field indicates the embossed name of the cards.</p>
    preLoadedAmnt:
      type: object
      $ref: aggregate.yaml#/CurAmtV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
SearchTransactionsV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p> Refers to the PowerCARD card number. This value corresponds
        to the card to which the transaction is posted. </p>
    clientCode:
      type: string
      description: <p> Represent the customer identifier. </p>
    rangeDate:
      type: object
      $ref: aggregate.yaml#/ValidityRangeDateV35
    amountFrom:
      type: object
      $ref: aggregate.yaml#/CurAmtV35
    amountTo:
      type: object
      $ref: aggregate.yaml#/CurAmtV35
    trnType:
      type: string
      description: |-
        <p> Criteria of transactions codes that should be returned. If empty, any transaction can be returned. Note that PowerCARD transactions can be grouped in different categories for reporting purpose. This code must be previously defined in the PowerCARD <b>TRANSACTIONS_DEFINITION</b> table under the general parameter section.
        </p>
    corporateId:
      type: string
      description: <p> Refers to the corporate identification. Valid values must be
        populated from the PowerCARD <b>CORPORATE</b> table under the cardholder section.
        </p>
    network:
      type: string
      description: <p> The network field allows you to specify the network where transactions
        are made. It is to mention that this code should be previously defined in
        the <b>NETWORK</b> table under the general parameter section. </p>
    territoriality:
      type: string
      description: <p> Valid values <br> <b>ONS</b> - On-us, refers to the criteria
        of transactions that are conducted in a context where the acquirer is also
        the issuer. <br> <b>NAT</b> - National, apply only to transactions made in
        the same country as the issuer country.<br> <b>INT</b> -  International, apply
        only to transactions that took place outside the cardholder country.<br> </p>
    acquirerCountry:
      type: string
      description: <p> Refers to the ISO code of the country where the transaction
        took place. It is 3 alphanumeric characters The country code is a numerical
        code identifying nations over the globe. This code should be present in the
        PowerCARD <b>COUNTRY</b> table under the general parameter section. </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
SetCardDetailsV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p></p>
    cardDemog:
      type: object
      $ref: aggregate.yaml#/CardDemogSetCardV35
    cardCustomFields:
      type: array
      items:
        type: object
        $ref: aggregate.yaml#/CustomFieldsV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
FeeInQuiryV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    operationType:
      type: string
      description: <p></p>
    cardFees:
      type: object
      $ref: aggregate.yaml#/CardFeesV35
    transactionFees:
      type: object
      $ref: aggregate.yaml#/TransactionFeesV35
    statementFees:
      type: object
      $ref: aggregate.yaml#/StatementFeesV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
SearchCardV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    clientCode:
      type: string
      description: <p> Represent the customer identifier. This field is required if
        CorporateId and CardNumber are empty. </p>
    cardNumber:
      type: string
      description: <p> The card number. This field is required if ClientCode and CorporateId
        are empty </p>
    corporateId:
      type: string
      description: <p> The corporate identifier. This field is required if ClientCode
        and CardNumber are empty. </p>
    catPIProduct:
      type: string
      description: <p> It is a 6 digit code identifying the payment instrument product
        code assigned to the card. Valid values must be retrieved from PowerCARD <b>CATALOGUE_PRODUCT</b>
        table with product type = <b>P</b> </p>
    catPIProductVersion:
      type: string
      description: <p> It is a 10 caracter fields identifying the payment instrument
        version. Valid values must be retrieved from PowerCARD <b>CATALOGUE_PRODUCT</b>
        table with product type = <b>P</b> </p>
    cardStatus:
      type: string
      description: <p> The card Status This field refers to the card status as stored
        in the system. Possible values are <b> <b>N</b> - Normal <br> <b>M</b> Monitoring
        <br> <b>S</b> Suspend <br> <b>R</b> Replaced <br> <b>C</b> Cancelled <br>
        <b>P</b> Prospect <br> </p>
    firstName:
      type: string
      description: <p>The first name or given name.</p>
    firstName2:
      type: string
      description: <p>The first name , part 2 , if compound names are in use</p>
    lastName:
      type: string
      description: <p>The last name</p>
    lastName2:
      type: string
      description: <p>The last name 2</p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateCustomerDemogV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    clientDemog:
      type: object
      $ref: aggregate.yaml#/ClientDemogV35
    documents:
      type: array
      items:
        type: object
        $ref: aggregate.yaml#/DocumentsV35
    clientCustomFields:
      type: array
      items:
        type: object
        $ref: aggregate.yaml#/CustomFieldsV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
UpdateLoyaltyAccStatusV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    bankCode:
      type: string
      description: <p> Represent the bank code of the account owner. </p>
    accountOwnerType:
      type: string
      description: <p> Indicates the type of the entity that owns the loyalty account.
        Possible values are the following<br> <b>CH</b> = Cardholder. <br> <b>SA</b>
        = Shadow Account. <br> The value transmitted in the next field is based on
        the value of that one. </p>
    accountOwnerId:
      type: string
      description: <p> It refers to the identification of the entity that owns the
        loyalty account. Based on the value in the previous field, this field may
        contain <br> The shadow account <b>(SA)</b> <br> The card number <b>(CH)</b>
        <br> </p>
    loyaltyAccountNbr:
      type: string
      description: <p> This field refers to a unique internal identification of the
        loyalty account liked to the card, channel…. This field must contain the  loyalty
        account subject to this cancellation. </p>
    statusCode:
      type: string
      description: <p> This field must contain the account status code. Possible values
        are the following <br> <b>N</b> = Normal.<br> <b>C</b> = Cancelled.<br> </p>
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
SetCardDomainV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    cardNumber:
      type: string
      description: <p> The card number or the Card Token Id. It should contain a valid
        value </p>
    domainControls:
      type: array
      items:
        type: object
        $ref: aggregate.yaml#/DomainControlV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
DemoV35Rq:
  type: object
  properties:
    keyValues:
      type: array
      items:
        $ref: aggregate.yaml#/KeyValueDataV35
    requestInfo:
      type: object
      $ref: aggregate.yaml#/RequestInfo
  required: [requestInfo]
      #RegisterWebhook35Rq:
RegisterWebhook35Rq:
        type: object
        properties:
          requestInfo:
            type: object
            $ref: 'aggregate.yaml#/RequestInfo'
          name:
            type: string
            example: 'Card created webhook'
            description: <p>
              The name of the webhook endpoint
              </p>
          url:
            type: string
            example: 'https://localhost:8099/webhooks/card_created'
            description: <p>
              The url of the webhook endpoint to register for events push
              </p>
          status:
            type: string
            example: 'A'
            description: <p>
              The webhook status <br>
              <b>A</b> - To enable  event push to registered webhook<br>
              <b>D</b> - To disable event push to registered webhook<br>
              </p>
          eventType:
            type: string
            example: 'card_created'
            description: <p>
              The event type to subscribe for this webhook
              </p>
        required: [requestInfo,name,url,status,eventType]
      #UpdateWebhook35Rq:
UpdateWebhook35Rq:
        type: object
        properties:
          requestInfo:
            type: object
            $ref: 'aggregate.yaml#/RequestInfo'
          webhookId:
            type: string
            example: '6948DF80-14BD-4E04-8842'
            description: <p>
              The identifier of the webhook to update
              </p>
          name:
            type: string
            example: 'Card created webhook'
            description: <p>
              The name of the webhook endpoint
              </p>
          url:
            type: string
            example: 'https://localhost:8099/webhooks/card_created'
            description: <p>
              The url of the webhook endpoint to register for events push
              </p>
          status:
            type: string
            example: 'A'
            description: <p>
              The webhook status <br>
              <b>A</b> - To enable  event push to registered webhook<br>
              <b>D</b> - To disable event push to registered webhook<br>
              </p>
          eventType:
            type: string
            example: 'card_created'
            description: <p>
              The event type to subscribe for this webhook
              </p>
        required: [requestInfo,webhookId,name,url,status,eventType]
DeleteWebhook35Rq:
        type: object
        properties:
          requestInfo:
            type: object
            $ref: 'aggregate.yaml#/RequestInfo'
          webhookId:
            type: string
            example: '6948DF80-14BD-4E04-8842'
            description: <p>
              The identifier of the webhook to delete from the system
              </p>
        required: [requestInfo,webhookId]
