openapi: "3.0.3"
info:
  title: Boarding API documentation
  description: <p>The boarding module supports different workflows of application and can manage pre-approved application as well as applications yet to be approved.The boarding process for all types of products (PI, Account, Loan, Loyalty, Add on services) has been unified and offers the possibility to bundle different type of products into a pack.</p>
  version: PowerCARD-Issuer 3.5.4-apiR5.3
servers:
  - url: https://sandbox.connectapi.hps-worldwide.com/PowerCardConnectApi/rest
    description: Development server
paths:
  #getApplicationDetail  
  /getApplicationDetail/V2:
        post:
            description:
                        <h3>API Overview</h3>
                          <p>
                            This web service is not available at the moment in the sandbox 
                          </p>
                        <h3>Functional Description</h3>
                       This web service is not available at the moment in the sandbox 
            summary: This web service is not available at the moment in the sandbox . 
            tags:
              - Get Application Detail
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/demoV35Rq'
                application/xml:
                  schema:
                    $ref: '#/components/schemas/demoV35Rq'
            responses:  
              200:
                description:
                        <div>
                                Successful
                                <p>Business Error Codes &#58;</p>
                                <table>
                                      <tr>
                                        <th>Error code</th>
                                        <th>Error Description</th>
                                      </tr>
                                </table>
                        </div> 
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/demoV35Rs'
                  application/xml:
                    schema:
                      $ref: '#/components/schemas/demoV35Rs'
 # Components definition
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 
          <div>
               <h5>Api key authorization</h5>
               <p>JWT authorization header using Bearer scheme. Example &#8282; "Authorization &#8282; Bearer {token}"</p>
               <table>
                  <tr>
                      <td>Name &#8282;</td>
                      <td>Authorization</td>
                  </tr>
                   <tr>
                      <td>In &#8282;</td>
                      <td>Header</td>
                  </tr>
                </table>
          </div>      
  schemas:
    # --- Import DemoV35 request and response
      demoV35Rq:
               $ref: 'request.yaml#/DemoV35Rq'
      demoV35Rs:
               $ref: 'response.yaml#/DemoV35Rs' 
security:
  - bearerAuth: []