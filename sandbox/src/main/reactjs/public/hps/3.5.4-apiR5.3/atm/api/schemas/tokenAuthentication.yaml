openapi: "3.0.3"
info:
  title: PowerCARD-ATM API documentation
  description: HPS’ PowerCARD-ATM is a powerful, comprehensive and self-service solution that enables financial insitutions and retailers to manage, secure and get more out of their ATM systems and networks. 
  version: PowerCARD 3.5.4-apiR5.3
servers:
  - url: https://sandbox.connectapi.hps-worldwide.com/PowerCardConnectApi/rest
    description: Development server
paths:
 # ------- TokenAuthentication API  

  /TokenAuthentication:
    post:
      description:  <h3>API Overview</h3>
                    <p>PowerCard Connect'API uses JWT authentication for securing the exposed REST APIs, the user will be able to consume API TokenAuthentification only if it has a valid Token.</p>
                    <p>The Connect’API authenticates all requests using the token available in the request itself, If such an authentication fails, Connect’API simply sends an HTTP code 401 (Unauthorized).</p>
                    <h3>Functional Description</h3>
                    <img  src="./docs/tokenAuthentication.png" />
      summary: Token Authentication service using user credentials. 
      tags:
        - User Token Authentication.
      requestBody:
        description: 	Token Authentication service using user credentials.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenAuthentication'
          application/xml:
            schema:
              $ref: '#/components/schemas/TokenAuthentication'      
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAuthenticationResponse'
        500:
          description: Error 500 Internal Server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAuthenticationResponse'
        401:
          description: Error 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAuthenticationResponse'
        400:
          description: Error 400 Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAuthenticationResponse'
 # Components definition
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 
          <div>
               <h5>Api key authorization</h5>
               <p>JWT authorization header using Bearer scheme. Example &#8282; "Authorization &#8282; Bearer {token}"</p>
               <table>
                  <tr>
                      <td>Name &#8282;</td>
                      <td>Authorization</td>
                  </tr>
                   <tr>
                      <td>In &#8282;</td>
                      <td>Header</td>
                  </tr>
                </table>
          </div>      
  schemas:
      # ---- Import TokenAuthentication request and response definition            
      TokenAuthentication:
            $ref: 'request.yaml#/TokenAuthentication'
      TokenAuthenticationResponse:
            $ref: 'response.yaml#/TokenAuthenticationResponse'
security:
  - bearerAuth: []