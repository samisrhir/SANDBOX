openapi: "3.0.3"
info:
  title: Customer API documentation
  description: <p>PowerCARD Connectâ€™API offers through APIs specific functions that group in a functional logic, all features relating to Client operations management.</p>
  version: PowerCARD-Issuer 3.5.4-apiR5.3
servers:
  - url: https://sandbox.connectapi.hps-worldwide.com/PowerCardConnectApi/rest
    description: Development server
paths:
#Client/V2/{clientCode}/Addresses  
  /Client/V2/{clientCode}/Addresses:
        patch:
            description:
                        <h3>API Overview</h3>
                        <a target="_blank" rel="noopener noreferrer" href="https://sandbox.connectapi.hps-worldwide.com/PowerCardConnectApi/jaxws/UpdateAddress/V2?wsdl"><img  src="./docs/soap_logo.jpg" /><u>SOAP WSDL</u></a>
                          <p>
                              The aim of this web service is to update the address of an existing customer or card, this web service can be invoked by customers and agents. The change will take place immediately in the system and all the next communication with that customer or card will take the new address being shared in the request into consideration.
                          </p>
                        <h3>Functional Description</h3>
                        <img  src="./docs/UpdateAddressWebService.png" />
            summary:  Update the address of an existing customer or card.
            tags:
              - Update Address
            parameters:
            - in: path
              name: clientCode
              schema:
                type: string
              required: true
              description: clientCode String to get client address.
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/UpdateAddressV35Rq'
                application/xml:
                  schema:
                    $ref: '#/components/schemas/UpdateAddressV35Rq'
            responses:  
              200:
                description:
                  <div>
                          Successful
                          <p>Business Error Codes &#58;</p>
                           <table>
                                <tr>
                                  <th>Error code</th>
                                  <th>Error Description</th>
                                </tr>
                                <tr> 
                                  <td>19401</td>
                                  <td>Invalid Entity Type</td>
                                </tr>
                                <tr> 
                                  <td>19402</td>
                                  <td>Invalid Client Code</td>
                                </tr>	
                                <tr> 
                                  <td>19403</td>
                                  <td>Invalid Card Number/Token ID </td>
                                </tr>	
                                <tr> 
                                  <td>19404</td>
                                  <td>Invalid Address Indicator</td>
                                </tr>
                                <tr> 
                                  <td>19405</td>
                                  <td>Invalid corporate ID</td>
                                </tr>	
                                <tr> 
                                  <td>19406</td>
                                  <td>Invalid Address Line 1</td>
                                </tr>	
                                <tr> 
                                  <td>19408</td>
                                  <td>Invalid Address</td>
                                </tr>
                                <tr> 
                                  <td>19411</td>
                                  <td>Invalid ZipCode</td>
                                </tr>	
                                <tr> 
                                  <td>19412</td>
                                  <td>Invalid CareOf</td>
                                </tr>
                                <tr> 
                                  <td>19413</td>
                                  <td>Invalid City Code </td>
                                </tr>
                                <tr> 
                                  <td>19415</td>
                                  <td>Invalid Country Code</td>
                                </tr>									
                                <tr> 
                                  <td>19416</td>
                                  <td>Invalid Address Purpose ID</td>
                                </tr>
                                <tr> 
                                  <td>19417</td>
                                  <td>Invalid Purpose Address Type</td>
                                </tr>	
                                <tr> 
                                  <td>19418</td>
                                  <td>Invalid Sending Mode</td>
                                </tr>	
                                <tr> 
                                  <td>19419</td>
                                  <td>Validity Start Date is accepted only in case of Secondary Address</td>
                                </tr>	
                                <tr> 
                                  <td>19420</td>
                                  <td>Validity Start Date must not be in the past</td>
                                </tr>
                                <tr> 
                                  <td>19421</td>
                                  <td>Validity Start Date cannot be greater than Validity End Date</td>
                                </tr>
                                <tr> 
                                  <td>19422</td>
                                  <td>Validity End Date is accepted only in case of Secondary Address</td>
                                </tr>									
                           </table>
                  </div> 
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateAddressV35Rs'
                  application/xml:
                    schema:
                      $ref: '#/components/schemas/UpdateAddressV35Rs'                                          
# Components definition
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 
          <div>
               <h5>Api key authorization</h5>
               <p>JWT authorization header using Bearer scheme. Example &#8282; "Authorization &#8282; Bearer {token}"</p>
               <table>
                  <tr>
                      <td>Name &#8282;</td>
                      <td>Authorization</td>
                  </tr>
                   <tr>
                      <td>In &#8282;</td>
                      <td>Header</td>
                  </tr>
                </table>
          </div>      
  schemas:
      UpdateAddressV35Rq:
            $ref: 'request.yaml#/UpdateAddressV35Rq'
      UpdateAddressV35Rs:
            $ref: 'response.yaml#/UpdateAddressV35Rs'    
security:
  - bearerAuth: []