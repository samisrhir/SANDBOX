openapi: "3.0.3"
info:
  title: Payment Instrument API documentation
  description: <p>Payment Instrument and Cardholder operation management include APIs for Payment Instrument maintenance , Payment instrument operations and Status operation.</p>
  version: PowerCARD-Issuer V4
servers:
  - url: https://api.wemeeting2023.pwcv4.com
    description: Development server
paths:

 # ------- TokenAuthentication API  

  /compliance/v4.0/tokens/authentication:
    post:
      description:  <h3>API Overview</h3>
                    <a target="_blank" rel="noopener noreferrer" href="https://sandbox.connectapi.hps-worldwide.com/PowerCardConnectApi/jaxws/TokenAuthentication?wsdl"><img  src="./docs/soap_logo.jpg" /><u>SOAP WSDL</u></a>                    <p>PowerCard Connect'API uses JWT authentication for securing the exposed REST APIs, the user will be able to consume API TokenAuthentification only if it has a valid Token.</p>
                    <p>The Connect’API authenticates all requests using the token available in the request itself, If such an authentication fails, Connect’API simply sends an HTTP code 401 (Unauthorized).</p>
                    <h3>Functional Description</h3>
                    <img  src="./docs/tokenAuthentication.png" />
      summary: Token Authentication service using user credentials. 
      tags:
        - User Token Authentication.
      requestBody:
        description: Token Authentication service using user credentials.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenAuthentication'
          application/xml:
            schema:
              $ref: '#/components/schemas/TokenAuthentication'      
      responses:
        200:
          description:
                  <div>
                          Successful
                          <p>Business Error Codes &#58;</p>
                           <table>
                              <tr>
                                <th>Error code</th>
                                <th>Error Description</th>
                              </tr>
                                  <tr>
                                     <td>00000</td>
                                     <td>Success</td>
                                  </tr>
                                  <tr>
                                      <td>00001</td>
                                      <td>Bad Credentials Invalid login and/or password</td>
                                  </tr>
                                  <tr>
                                      <td>00003</td>
                                      <td>User Blocked</td>
                                  <tr>
                                       <td>00005</td>
                                       <td>Invalid Password configuration</td>
                                  </tr>
                                  <tr>
                                      <td>00006</td>
                                      <td>User Password expired</td>
                                  </tr>
                                  <tr>
                                      <td>99999</td>
                                      <td>System Error</td>
                                  </tr>

                       </table>
                  </div> 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAuthenticationResponse'
            application/xml:
                      schema:
                        $ref: '#/components/schemas/TokenAuthenticationResponse'
 # Components definition
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 
          <div>
               <h5>Api key authorization</h5>
               <p>JWT authorization header using Bearer scheme. Example &#8282; "Authorization &#8282; Bearer {token}"</p>
               <table>
                  <tr>
                      <td>Name &#8282;</td>
                      <td>Authorization</td>
                  </tr>
                   <tr>
                      <td>In &#8282;</td>
                      <td>Header</td>
                  </tr>
                </table>
          </div>      
  schemas:
      # ---- Import TokenAuthentication request and response definition            
      TokenAuthentication:
            $ref: 'request.yaml#/TokenAuthentication'
      TokenAuthenticationResponse:
            $ref: 'response.yaml#/TokenAuthenticationResponse'
security:
  - bearerAuth: []