openapi: "3.0.3"
info:
  title: Customer Management API documentation
  description: <p>PowerCARD Connectâ€™API offers through APIs specific functions that group in a functional logic, all features relating to Client operations management. </p>
  version: PowerCARD-Issuer V4
servers:
  - url: https://api.wemeeting2023.pwcv4.com
    description: Development server
paths:

  /compliance/v4.0/users/{userCode}/authorizations:
    post:
        description:
                    <h3>API Overview</h3>
                    <a target="_blank" rel="noopener noreferrer" href="https://sandbox.connectapi.hps-worldwide.com/PowerCardConnectApi/jaxws/SetCustomerDetail/V2?wsdl"><img  src="./docs/soap_logo.jpg" /><u>SOAP WSDL</u></a> 
                    <p>
                         The CreateUserAuthorization web service used to grant access and authorization for different web service to a user. 
                    </p>
        summary: Create User Authorization
        parameters:
          - in: path
            name: userCode
            schema:
              type: string
            required: true
            example : "ISS004"
            description: Represent the user code.
        tags:
          - Create User Authorization
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserAuthorizationV4Req'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateUserAuthorizationV4Req'
        responses:
          200:
            description:
              <div>
                          Successful
              </div>

            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateUserAuthorizationV4Res'
              application/xml:
                    schema:
                      $ref: '#/components/schemas/CreateUserAuthorizationV4Res'
# Components definition
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description:
          <div>
               <h5>Api key authorization</h5>
               <p>JWT authorization header using Bearer scheme. Example &#8282; "Authorization &#8282; Bearer {token}"</p>
               <table>
                  <tr>
                      <td>Name &#8282;</td>
                      <td>Authorization</td>
                  </tr>
                   <tr>
                      <td>In &#8282;</td>
                      <td>Header</td>
                  </tr>
                </table>
          </div>
  schemas:
      CreateUserAuthorizationV4Req:
            $ref: 'request.yaml#/CreateUserAuthorizationV4Req'
      CreateUserAuthorizationV4Res:
            $ref: 'response.yaml#/CreateUserAuthorizationV4Res'
security:
  - bearerAuth: []
