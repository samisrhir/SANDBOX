openapi: "3.0.3"
info:
  title: PowerCARD-Switch Channel API documentation
  description: PowerCARD-Switch offers 100% availability with active/ active architecture, it is also able to process thousands of transactions per second.
  version: PowerCARD V4 
servers:
  - url: https://connect-api-f421ce7420d03b16.elb.eu-north-1.amazonaws.com
    description: Development server
paths:


 # ------- TokenAuthentication API  

  /compliance/v4.0/tokens/authentication:
    post:
      description:  <h3>API Overview</h3>
                    <a target="_blank" rel="noopener noreferrer" href="https://sandbox.connectapi.hps-worldwide.com/PowerCardConnectApi/jaxws/TokenAuthentication?wsdl"><img  src="./docs/soap_logo.jpg" /><u>SOAP WSDL</u></a>                    <p>PowerCard Connect'API uses JWT authentication for securing the exposed REST APIs, the user will be able to consume API TokenAuthentification only if it has a valid Token.</p>
                    <p>The Connect’API authenticates all requests using the token available in the request itself, If such an authentication fails, Connect’API simply sends an HTTP code 401 (Unauthorized).</p>
                    <h3>Functional Description</h3>
                    <img  src="./docs/tokenAuthentication.png" />
      summary: Token Authentication service using user credentials. 
      tags:
        - User Token Authentication.
      requestBody:
        description: Token Authentication service using user credentials.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenAuthentication'
          application/xml:
            schema:
              $ref: '#/components/schemas/TokenAuthentication'      
      responses:
        200:
          description:
                  <div>
                          Successful
                          <p>Business Error Codes &#58;</p>
                                <table>
                                    <tr>
                                         <th>Error code</th>
                                         <th>Error Description</th>
                                    </tr>
                                  <tr>
                                     <td>00000</td>
                                     <td>Success</td>
                                  </tr>
                                  <tr>
                                      <td>00001</td>
                                      <td>Bad Credentials Invalid login and/or password</td>
                                  </tr>
                                  <tr>
                                      <td>00003</td>
                                      <td>User Blocked</td>
                                  <tr>
                                       <td>00005</td>
                                       <td>Invalid Password configuration</td>
                                  </tr>
                                  <tr>
                                      <td>00006</td>
                                      <td>User Password expired</td>
                                  </tr>
                                  <tr>
                                      <td>99999</td>
                                      <td>System Error</td>
                                  </tr>
                                </table>
                  </div> 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAuthenticationResponse'
            application/xml:
                      schema:
                          $ref: '#/components/schemas/TokenAuthenticationResponse'   

  # --- Card from token
  /switch-channel/v4.0/tokenization/card_from_token:
    post:
      description:
        <h3>API Overview</h3>
        <p>
        When used in credit, debit or prepaid card transactions, tokens, sometimes referred to as surrogate value are created to replace the card number. A token, rather than the actual credit/debit card number, would be used to complete the purchases a customer is making with its card. In this context, this web service is mainly used to retrieve the clear card number when providing a token value. PowerCARD is in fact a tokenization system that accepts as entry token value and proceeds by the reverse process of redeeming a token for its associated PAN value.                          </p>
        <p>
        <p>
        Users are also required to pass the card expiry date in the list of input data to process the de-tokenization process and return back the clear card number.
        </p>
        <h3>Functional Description</h3>
        <img  src="./docs/getCardNumberFromToken.png" />
      summary:     Get the card number using an alias pan token .
      tags:
        - Get Card From Token
      requestBody:
        description:
          <img id="select-case-img" src="./docs/exclamation.png" />
          <label  id="select-case">To make Connect'API protocol more extensible, an array of <b>key value</b> pairs is available in All object.</label>
          <label id="select-case"> for example to indicate to the PowerCARD Connect’API that the Alias PAN is being sent instead of the card number, the Client must include a key TOKEN with value Y &#58; </label>
          <code id="key-value-token">
          {
          ...
          "keyValues" &#58; [{
          "key" &#58; "token",
          "data" &#58; "y"
          }],
          ...
          }
          </code>
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCardFromTokenV4Rq'
          application/xml:
            schema:
              $ref: '#/components/schemas/GetCardFromTokenV4Rq'
      responses:
        200:
          description:
            <div>
            <p>Technical Error Codes &#58;</p>
            <table>
            <tr>
            <th>Error code</th>
            <th>Error Description</th>
            </tr>
            <tr>
            <td>00000</td>
            <td>Success</td>
            </tr>
            <tr>
            <td>99999</td>
            <td>System error</td>
            </tr>
            <tr>
            <td>90009</td>
            <td>Generic error for request validation failure (check size,format,mandatory etc..)</td>
            </tr>
            <tr>
            <td>00002</td>
            <td> Forbidden you don't have permission to access for this api</td>
            </tr>
            <tr>
            <td>00007</td>
            <td>Authorization header is empty</td>
            </tr>
            <tr>
            <td>00008</td>
            <td>Authorization header is missing</td>
            </tr>
            <tr>
            <td>00009</td>
            <td>Malformat Authorization content</td>
            </tr>
            <tr>
            <td>00010</td>
            <td>Bearer is required in the token</td>
            </tr>
            <tr>
            <td>00011</td>
            <td>Token expired</td>
            </tr>
            <tr>
            <td>00012</td>
            <td>Invalid token</td>
            </tr>
            <table>
            <p>Business Error Codes &#58;</p>
            <table>
            <tr>
            <th>Error code</th>
            <th>Error Description</th>
            </tr>
            <tr>
            <td>021301</td>
            <td>Invalid CardNumber / TokenID</td>
            </tr>
            <tr>
            <td>021302</td>
            <td>Invalid bankCode</td>
            </tr>
            </table>
            </div>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCardFromTokenV4Rs'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetCardFromTokenV4Rs'
  /switch-channel/v4.0/cards/stop_list:
    put:
        description:
                    <h3>API Overview</h3>
                      <p>
                          This web services was introduced to allow to place a card in stop list permament / or temporary and to remove card from stop list
                      </p>
                    <h3>Functional Description</h3>
                      <img  src="./docs/UpdateCardStatus.png" />
        summary:    Place card in stop list / Place card in stop list temporary / Remove card from stop list.
        tags:
          - Card Status management
        requestBody:
          required: true
          description:
              <img id="select-case-img" src="./docs/exclamation.png" />
              <label  id="select-case">To make Connect'API protocol more extensible, an array of <b>key value</b> pairs is available in All object.</label>
              <label id="select-case"> for example to indicate to the PowerCARD Connect’API that the Alias PAN is being sent instead of the card number, the Client must include a key TOKEN with value Y ... &#58; </label>
              <code id="key-value-token">
                    {

                        ...

                        "keyValues" &#58; [{

                            "key" &#58; "token",

                            "data" &#58; "y"

                        }],
                        ...

                    }

              </code>   
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopListRq'
            application/xml:
              schema:
                $ref: '#/components/schemas/UpdateCardStatusV4Rq'
        responses:  
          200:
            description:
                    <div>
                        <p>Technical Error Codes &#58;</p>
                        <table>
                        <tr>
                        <th>Error code</th>
                        <th>Error Description</th>
                        </tr>
                        <tr>
                        <td>00000</td>
                        <td>Success</td>
                        </tr>
                        <tr>
                        <td>99999</td>
                        <td>System error</td>
                        </tr>
                        <tr>
                        <td>90009</td>
                        <td>Generic error for request validation failure (check size,format,mandatory etc..)</td>
                        </tr>
                        <tr>
                        <td>00002</td>
                        <td> Forbidden you don't have permission to access for this api</td>
                        </tr>
                        <tr>
                        <td>00007</td>
                        <td>Authorization header is empty</td>
                        </tr>
                        <tr>
                        <td>00008</td>
                        <td>Authorization header is missing</td>
                        </tr>
                        <tr>
                        <td>00009</td>
                        <td>Malformat Authorization content</td>
                        </tr>
                        <tr>
                        <td>00010</td>
                        <td>Bearer is required in the token</td>
                        </tr>
                        <tr>
                        <td>00011</td>
                        <td>Token expired</td>
                        </tr>
                        <tr>
                        <td>00012</td>
                        <td>Invalid token</td>
                        </tr>
                        <table>
                        <p>Business Error Codes &#58;</p>
                        <table>
                        <tr>
                        <th>Error code</th>
                        <th>Error Description</th>
                        </tr>
                        <tr>
                        <td>021301</td>
                        <td>Invalid CardNumber / TokenID</td>
                        </tr>
                        <tr>
                        <td>021302</td>
                        <td>Invalid bankCode</td>
                        </tr>
                        <tr>
                        <td>000116</td>
                        <td>card already in stop list</td>
                        </tr>
                        </table>
                    </div> 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpdateCardStatusV4Rs'
              application/xml:
                      schema:
                          $ref: '#/components/schemas/UpdateCardStatusV4Rs'                     
  /switch-channel/v4.0/cards/contactLess:
    post:
      description:
                    <h3>API Overview</h3>
                    <p>This web service serves to activate or deactivate the contactless feature on the card.</p>
                    <h3>Functional Description</h3>
                    <img  src="./docs/activateContactless.png" />
      summary: Activate or Desactivate the contactless feature on the card.
      tags:
        - Change Contactless.
      requestBody:
        required: true
        description:
              <img id="select-case-img" src="./docs/exclamation.png" />
              <label  id="select-case">To make Connect'API protocol more extensible, an array of <b>key value</b> pairs is available in All object.</label>
              <label id="select-case"> for example to indicate to the PowerCARD Connect’API that the Alias PAN is being sent instead of the card number, the Client must include a key TOKEN with value Y ... &#58; </label>
              <code id="key-value-token">
                    {

                        ...

                        "keyValues" &#58; [{

                            "key" &#58; "token",

                            "data" &#58; "y"

                        }],
                        ...

                    }

              </code>   
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactLessV4Rq'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContactLessV4Rq'
      responses:  
         200:
          description:
                    <div>
                        <p>Technical Error Codes &#58;</p>
                        <table>
                        <tr>
                        <th>Error code</th>
                        <th>Error Description</th>
                        </tr>
                        <tr>
                        <td>00000</td>
                        <td>Success</td>
                        </tr>
                        <tr>
                        <td>99999</td>
                        <td>System error</td>
                        </tr>
                        <tr>
                        <td>90009</td>
                        <td>Generic error for request validation failure (check size,format,mandatory etc..)</td>
                        </tr>
                        <tr>
                        <td>00002</td>
                        <td> Forbidden you don't have permission to access for this api</td>
                        </tr>
                        <tr>
                        <td>00007</td>
                        <td>Authorization header is empty</td>
                        </tr>
                        <tr>
                        <td>00008</td>
                        <td>Authorization header is missing</td>
                        </tr>
                        <tr>
                        <td>00009</td>
                        <td>Malformat Authorization content</td>
                        </tr>
                        <tr>
                        <td>00010</td>
                        <td>Bearer is required in the token</td>
                        </tr>
                        <tr>
                        <td>00011</td>
                        <td>Token expired</td>
                        </tr>
                        <tr>
                        <td>00012</td>
                        <td>Invalid token</td>
                        </tr>
                        <table>
                        <p>Business Error Codes &#58;</p>
                        <table>
                        <tr>
                        <th>Error code</th>
                        <th>Error Description</th>
                        </tr>
                        <tr>
                        <td>021301</td>
                        <td>Invalid CardNumber / TokenID</td>
                        </tr>
                        <tr>
                        <td>021302</td>
                        <td>Invalid bankCode</td>
                        </tr>
                        </table>
                        </div> 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactLessV4Rs'
            application/xml:
                  schema:
                      $ref: '#/components/schemas/ContactLessV4Rs'
  #ChangePinV4
  /switch-channel/v4.0/cards/change_pin:
    post:
      description:
                  <h3>API Overview</h3>
                  <p>
                  The PIN change web Service allows the any cardholder to change its PIN. The cardholder is required to enter the new PIN, as well as the old PIN for verification.
                  </p>
                  <p>
                    The same service is also used to set a pin value for the customer.<br>
                    It is to mention that the new and old PINs are encrypted and formatted as a block of 16 hexadecimal digits. (The new PIN is chosen by the cardholder to replace the current PIN when the cardholder does not remember his current PIN, or the current PIN is compromised, or just wants a new PIN to be set for his card.)<br>
                    A cardholder PINs (Old and new) are never logged, not even in an encrypted form.
                  </p>
                  <h3>Functional Description</h3>
                  <img  src="./docs/changePin.png" />
                  <p></p>
      summary:  The PIN change web Service allows the any cardholder to change its PIN
      tags:
        - Card Pin management.
      requestBody:
        required: true
        description:
              <img id="select-case-img" src="./docs/exclamation.png" />
              <label  id="select-case">To make Connect'API protocol more extensible, an array of <b>key value</b> pairs is available in All object.</label>
              <label id="select-case"> for example to indicate to the PowerCARD Connect’API that the Alias PAN is being sent instead of the card number, the Client must include a key TOKEN with value Y ... &#58; </label>
              <code id="key-value-token">
                    {

                        ...

                        "keyValues" &#58; [{

                            "key" &#58; "token",

                            "data" &#58; "y"

                        }],
                        ...

                    }

              </code>   
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePinV4Rq'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangePinV4Rq'
      responses:  
        200:
          description:
                  <div>
                      <p>Technical Error Codes &#58;</p>
                      <table>
                      <tr>
                      <th>Error code</th>
                      <th>Error Description</th>
                      </tr>
                      <tr>
                      <td>00000</td>
                      <td>Success</td>
                      </tr>
                      <tr>
                      <td>99999</td>
                      <td>System error</td>
                      </tr>
                      <tr>
                      <td>90009</td>
                      <td>Generic error for request validation failure (check size,format,mandatory etc..)</td>
                      </tr>
                      <tr>
                      <td>00002</td>
                      <td> Forbidden you don't have permission to access for this api</td>
                      </tr>
                      <tr>
                      <td>00007</td>
                      <td>Authorization header is empty</td>
                      </tr>
                      <tr>
                      <td>00008</td>
                      <td>Authorization header is missing</td>
                      </tr>
                      <tr>
                      <td>00009</td>
                      <td>Malformat Authorization content</td>
                      </tr>
                      <tr>
                      <td>00010</td>
                      <td>Bearer is required in the token</td>
                      </tr>
                      <tr>
                      <td>00011</td>
                      <td>Token expired</td>
                      </tr>
                      <tr>
                      <td>00012</td>
                      <td>Invalid token</td>
                      </tr>
                      <table>
                      <p>Business Error Codes &#58;</p>
                      <table>
                      <tr>
                      <th>Error code</th>
                      <th>Error Description</th>
                      </tr>
                      <tr>
                      <td>021301</td>
                      <td>Invalid CardNumber / TokenID</td>
                      </tr>
                      <tr>
                      <td>021302</td>
                      <td>Invalid bankCode</td>
                      </tr>
                      </table>
                      </div> 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePinV4Rs'
            application/xml:
                    schema:
                        $ref: '#/components/schemas/ChangePinV4Rs'   
  #ResetPinTryCounter
  /switch-channel/v4.0/cards/reset_pin_try_counter: 
    put:
      description:
                  <h3>API Overview</h3>
                  <p>
                  After a predefined number of wrong pin entry, PowerCARD block automatically the card. Hence, the cardholder can no more use his card in a PIN based transaction. To release the card, the customer or any authorized entity need to rest the pin try counter flag stored inside PowerCARD.
                  The current API allows that by only providing in the request message the card number. PowerCARD will proceed to check the existence of the card before releasing the PIN retry counter.
                  </p>
                  <h3>Functional Description</h3>
                  <img  src="./docs/resetPinTryCounter.png" />
                  <p></p>
      summary:  The Reset Pin Try Counter web Service allows to reset PIN try counter.
      tags:
        - Card Pin management.
      requestBody:
        required: true
        description:
              <img id="select-case-img" src="./docs/exclamation.png" />
              <label  id="select-case">To make Connect'API protocol more extensible, an array of <b>key value</b> pairs is available in All object.</label>
              <label id="select-case"> for example to indicate to the PowerCARD Connect’API that the Alias PAN is being sent instead of the card number, the Client must include a key TOKEN with value Y ... &#58; </label>
              <code id="key-value-token">
                    {

                        ...

                        "keyValues" &#58; [{

                            "key" &#58; "token",

                            "data" &#58; "y"

                        }],
                        ...

                    }

              </code>   
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPinTryCounterV4Rq'
          application/xml:
            schema:
              $ref: '#/components/schemas/ResetPinTryCounterV4Rq'
      responses:  
        200:
          description:
                  <div>
                        <p>Technical Error Codes &#58;</p>
                        <table>
                        <tr>
                        <th>Error code</th>
                        <th>Error Description</th>
                        </tr>
                        <tr>
                        <td>00000</td>
                        <td>Success</td>
                        </tr>
                        <tr>
                        <td>99999</td>
                        <td>System error</td>
                        </tr>
                        <tr>
                        <td>90009</td>
                        <td>Generic error for request validation failure (check size,format,mandatory etc..)</td>
                        </tr>
                        <tr>
                        <td>00002</td>
                        <td> Forbidden you don't have permission to access for this api</td>
                        </tr>
                        <tr>
                        <td>00007</td>
                        <td>Authorization header is empty</td>
                        </tr>
                        <tr>
                        <td>00008</td>
                        <td>Authorization header is missing</td>
                        </tr>
                        <tr>
                        <td>00009</td>
                        <td>Malformat Authorization content</td>
                        </tr>
                        <tr>
                        <td>00010</td>
                        <td>Bearer is required in the token</td>
                        </tr>
                        <tr>
                        <td>00011</td>
                        <td>Token expired</td>
                        </tr>
                        <tr>
                        <td>00012</td>
                        <td>Invalid token</td>
                        </tr>
                        <table>
                        <p>Business Error Codes &#58;</p>
                        <table>
                        <tr>
                        <th>Error code</th>
                        <th>Error Description</th>
                        </tr>
                        <tr>
                        <td>021301</td>
                        <td>Invalid CardNumber / TokenID</td>
                        </tr>
                        <tr>
                        <td>021302</td>
                        <td>Invalid bankCode</td>
                        </tr>
                        </table>
                      </div> 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPinTryCounterV4Rs'
            application/xml:
                    schema:
                        $ref: '#/components/schemas/ResetPinTryCounterV4Rs'
  #VerifyPin
  /switch-channel/v4.0/cards/verify_pin: 
    put:
      description:
                  <h3>API Overview</h3>
                  <p>
                  The verify PIN web service is used to verify if the Personal Identification Number (PIN) introduced is valid or not. Users must transmit different details in the request that are used internally by PowerCARD to communicate with the HSM to validate the PIN captured by the customer. Depending on the validation processes, the response message that will be returned will either contain a Yes or No. Yes to specify that the PIN captured is valid, and No in the opposite case. .
                  </p>
                  <h3>Functional Description</h3>
                  <p><img  src="./docs/verifyPin.png" /></p>
      summary:  The verify PIN web service is used to verify if the Personal Identification Number (PIN) introduced is valid or not.
      tags:
        - Card Pin management.
      requestBody:
        required: true
        description:
              <img id="select-case-img" src="./docs/exclamation.png" />
              <label  id="select-case">To make Connect'API protocol more extensible, an array of <b>key value</b> pairs is available in All object.</label>
              <label id="select-case"> for example to indicate to the PowerCARD Connect’API that the Alias PAN is being sent instead of the card number, the Client must include a key TOKEN with value Y ... &#58; </label>
              <code id="key-value-token">
                    {

                        ...

                        "keyValues" &#58; [{

                            "key" &#58; "token",

                            "data" &#58; "y"

                        }],
                        ...

                    }

              </code>   
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPinV4Rq'
          application/xml:
            schema:
              $ref: '#/components/schemas/VerifyPinV4Rq'
      responses:  
        200:
          description:
                  <div>
                        <p>Technical Error Codes &#58;</p>
                        <table>
                        <tr>
                        <th>Error code</th>
                        <th>Error Description</th>
                        </tr>
                        <tr>
                        <td>00000</td>
                        <td>Success</td>
                        </tr>
                        <tr>
                        <td>99999</td>
                        <td>System error</td>
                        </tr>
                        <tr>
                        <td>90009</td>
                        <td>Generic error for request validation failure (check size,format,mandatory etc..)</td>
                        </tr>
                        <tr>
                        <td>00002</td>
                        <td> Forbidden you don't have permission to access for this api</td>
                        </tr>
                        <tr>
                        <td>00007</td>
                        <td>Authorization header is empty</td>
                        </tr>
                        <tr>
                        <td>00008</td>
                        <td>Authorization header is missing</td>
                        </tr>
                        <tr>
                        <td>00009</td>
                        <td>Malformat Authorization content</td>
                        </tr>
                        <tr>
                        <td>00010</td>
                        <td>Bearer is required in the token</td>
                        </tr>
                        <tr>
                        <td>00011</td>
                        <td>Token expired</td>
                        </tr>
                        <tr>
                        <td>00012</td>
                        <td>Invalid token</td>
                        </tr>
                        <table>
                        <p>Business Error Codes &#58;</p>
                        <table>
                        <tr>
                        <th>Error code</th>
                        <th>Error Description</th>
                        </tr>
                        <tr>
                        <td>021301</td>
                        <td>Invalid CardNumber / TokenID</td>
                        </tr>
                        <tr>
                        <td>021302</td>
                        <td>Invalid bankCode</td>
                        </tr>
                        </table>
                      </div> 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPinV4Rs'
            application/xml:
                    schema:
                        $ref: '#/components/schemas/VerifyPinV4Rs'  
  /switch-channel/v4.0/cards/get_cvv2:
        post:
            description:
                        <h3>API Overview</h3>
                          <p>
                               This web service is mainly used to retrieve the CVC2  when providing a PAN or PAN Alias. PowerCARD is in fact a tokenization system that accepts as entry token value and proceeds by the reverse process of redeeming a token for its associated PAN value.
                          </p>
                          <p>
                               The following sections are intended to highlight the process as well as the technical specification of the request and response messages.  
                          </p>
                        <h3>Functional Description</h3>
                        <img  src="./docs/GetCardCVC2.png" />
            summary:     This web service is mainly used to retrieve the CVC2  when providing a PAN or PAN Alias.
            tags:
              - Card CVC2 management.
            requestBody:
              required: true
              description:
                    <img id="select-case-img" src="./docs/exclamation.png" />
                    <label  id="select-case">To make Connect'API protocol more extensible, an array of <b>key value</b> pairs is available in All object.</label>
                    <label id="select-case"> for example to indicate to the PowerCARD Connect’API that the Alias PAN is being sent instead of the card number, the Client must include a key TOKEN with value Y ... &#58; </label>
                    <code id="key-value-token">
                          {

                              ...

                              "keyValues" &#58; [{

                                  "key" &#58; "token",

                                  "data" &#58; "y"

                              }],
                              ...

                          }

                    </code>   
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/GetCardCVV2V4Rq'
                application/xml:
                  schema:
                    $ref: '#/components/schemas/GetCardCVV2V4Rq'
            responses:  
              200:
                description:
                        <div>
                            <p>Technical Error Codes &#58;</p>
                            <table>
                            <tr>
                            <th>Error code</th>
                            <th>Error Description</th>
                            </tr>
                            <tr>
                            <td>00000</td>
                            <td>Success</td>
                            </tr>
                            <tr>
                            <td>99999</td>
                            <td>System error</td>
                            </tr>
                            <tr>
                            <td>90009</td>
                            <td>Generic error for request validation failure (check size,format,mandatory etc..)</td>
                            </tr>
                            <tr>
                            <td>00002</td>
                            <td> Forbidden you don't have permission to access for this api</td>
                            </tr>
                            <tr>
                            <td>00007</td>
                            <td>Authorization header is empty</td>
                            </tr>
                            <tr>
                            <td>00008</td>
                            <td>Authorization header is missing</td>
                            </tr>
                            <tr>
                            <td>00009</td>
                            <td>Malformat Authorization content</td>
                            </tr>
                            <tr>
                            <td>00010</td>
                            <td>Bearer is required in the token</td>
                            </tr>
                            <tr>
                            <td>00011</td>
                            <td>Token expired</td>
                            </tr>
                            <tr>
                            <td>00012</td>
                            <td>Invalid token</td>
                            </tr>
                            <table>
                            <p>Business Error Codes &#58;</p>
                            <table>
                            <tr>
                            <th>Error code</th>
                            <th>Error Description</th>
                            </tr>
                            <tr>
                            <td>021301</td>
                            <td>Invalid CardNumber / TokenID</td>
                            </tr>
                            <tr>
                            <td>021302</td>
                            <td>Invalid bankCode</td>
                            </tr>
                            </table>
                          </div> 
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/GetCardCVV2V4Rs'
                  application/xml:
                      schema:
                          $ref: '#/components/schemas/GetCardCVV2V4Rs'
  /switch-channel/v4.0/cards/reset_cvv2_try_counter: 
      put:
          description:
                    <h3>API Overview</h3>
                    <p>
                      The CVV2/CVC2 is a three-digit security code that is printed on the back of credit cards.<br>

                      The customer or any authorized entity need to rest the CVV2 try counter flag stored inside PowerCARD.<br>

                      The current API allows that by only providing in the request message the card number. PowerCARD will proceed to check the existence of the card before releasing the CVV2 retry counter.
                    </p>
                    <h3>Functional Description</h3>
                    <img  src="./docs/resetCVV2TryCounter.png" />
                    <p></p>
          summary:  This method allows to releasing the CVV2 retry counter.
          tags:
          - Card CVC2 management.
          requestBody:
            required: true
            description:
                <img id="select-case-img" src="./docs/exclamation.png" />
                <label  id="select-case">To make Connect'API protocol more extensible, an array of <b>key value</b> pairs is available in All object.</label>
                <label id="select-case"> for example to indicate to the PowerCARD Connect’API that the Alias PAN is being sent instead of the card number, the Client must include a key TOKEN with value Y ... &#58; </label>
                <code id="key-value-token">
                      {

                          ...

                          "keyValues" &#58; [{

                              "key" &#58; "token",

                              "data" &#58; "y"

                          }],
                          ...

                      }

                </code>   
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResetCVV2TryCounterV4Rq'
              application/xml:
                schema:
                  $ref: '#/components/schemas/ResetCVV2TryCounterV4Rq'
          responses:  
            200:
              description:
                      <div>
                              <p>Technical Error Codes &#58;</p>
                              <table>
                              <tr>
                              <th>Error code</th>
                              <th>Error Description</th>
                              </tr>
                              <tr>
                              <td>00000</td>
                              <td>Success</td>
                              </tr>
                              <tr>
                              <td>99999</td>
                              <td>System error</td>
                              </tr>
                              <tr>
                              <td>90009</td>
                              <td>Generic error for request validation failure (check size,format,mandatory etc..)</td>
                              </tr>
                              <tr>
                              <td>00002</td>
                              <td> Forbidden you don't have permission to access for this api</td>
                              </tr>
                              <tr>
                              <td>00007</td>
                              <td>Authorization header is empty</td>
                              </tr>
                              <tr>
                              <td>00008</td>
                              <td>Authorization header is missing</td>
                              </tr>
                              <tr>
                              <td>00009</td>
                              <td>Malformat Authorization content</td>
                              </tr>
                              <tr>
                              <td>00010</td>
                              <td>Bearer is required in the token</td>
                              </tr>
                              <tr>
                              <td>00011</td>
                              <td>Token expired</td>
                              </tr>
                              <tr>
                              <td>00012</td>
                              <td>Invalid token</td>
                              </tr>
                              <table>
                              <p>Business Error Codes &#58;</p>
                              <table>
                              <tr>
                              <th>Error code</th>
                              <th>Error Description</th>
                              </tr>
                              <tr>
                              <td>021301</td>
                              <td>Invalid CardNumber / TokenID</td>
                              </tr>
                              <tr>
                              <td>021302</td>
                              <td>Invalid bankCode</td>
                              </tr>
                              </table>
                          </div> 
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ResetCVV2TryCounterV4Rs'
                application/xml:
                        schema:
                            $ref: '#/components/schemas/ResetCVV2TryCounterV4Rs'
  #ReversalRequest
  /switch-channel/v4.0/reversal_request:
    post:
      description:
        <h3>API Overview</h3>
        <p>
        The reversal request web service is used to send a reversal request.
        </p>
        <h3>Functional Description</h3>
        #<p><img  src="./docs/" /></p>
      summary: Send reversal request.
      tags:
        - Reversal Request
      requestBody:
        required: true
        description:
          <img id="select-case-img" src="./docs/exclamation.png" />
          <label  id="select-case">To make Connect'API protocol more extensible, an array of <b>key value</b> pairs is available in All object.</label>
          <label id="select-case"> for example to indicate to the PowerCARD Connect’API that the Alias PAN is being sent instead of the card number, the Client must include a key TOKEN with value Y ... &#58; </label>
          <code id="key-value-token">
          {
              
              ...
              
              "keyValues" &#58; [{
              
              "key" &#58; "token",
              
              "data" &#58; "y"

          } ],
            ...

          }

            </code>
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReversalRequestRq'
          application/xml:
            schema:
              $ref: '#/components/schemas/ReversalRequestRq'
      responses:
        200:
          description:
            <div>
            <p>Technical Error Codes &#58;</p>
            <table>
            <tr>
            <th>Error code</th>
            <th>Error Description</th>
            </tr>
            <tr>
            <td>00000</td>
            <td>Success</td>
            </tr>
            <tr>
            <td>99999</td>
            <td>System error</td>
            </tr>
            <tr>
            <td>90009</td>
            <td>Generic error for request validation failure (check size,format,mandatory etc..)</td>
            </tr>
            <tr>
            <td>00002</td>
            <td> Forbidden you don't have permission to access for this api</td>
            </tr>
            <tr>
            <td>00007</td>
            <td>Authorization header is empty</td>
            </tr>
            <tr>
            <td>00008</td>
            <td>Authorization header is missing</td>
            </tr>
            <tr>
            <td>00009</td>
            <td>Malformat Authorization content</td>
            </tr>
            <tr>
            <td>00010</td>
            <td>Bearer is required in the token</td>
            </tr>
            <tr>
            <td>00011</td>
            <td>Token expired</td>
            </tr>
            <tr>
            <td>00012</td>
            <td>Invalid token</td>
            </tr>
            <table>
            <p>Business Error Codes &#58;</p>
            <table>
            <tr>
            <th>Error code</th>
            <th>Error Description</th>
            </tr>
            <tr>
            <td>021301</td>
            <td>Invalid CardNumber / TokenID</td>
            </tr>
            <tr>
            <td>021302</td>
            <td>Invalid bankCode</td>
            </tr>
            <tr>
            <td>000026</td>
            <td>transaction already reversed</td>
            </tr>
            </table>
            </div>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReversalRequestRs'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReversalRequestRs'

# Components definition
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 
          <div>
               <h5>Api key authorization</h5>
               <p>JWT authorization header using Bearer scheme. Example &#8282; "Authorization &#8282; Bearer {token}"</p>
               <table>
                  <tr>
                      <td>Name &#8282;</td>
                      <td>Authorization</td>
                  </tr>
                   <tr>
                      <td>In &#8282;</td>
                      <td>Header</td>
                  </tr>
                </table>
          </div>      
  schemas:
      # ---- Import TokenAuthentication request and response definition            
      TokenAuthentication:
            $ref: 'request.yaml#/TokenAuthentication'
      TokenAuthenticationResponse:
            $ref: 'response.yaml#/TokenAuthenticationResponse'

    # ---- Import GetCardDetailsV35 request and response definition  
      GetCardDetailsV35Rq:
            $ref: 'request.yaml#/GetCardDetailsV35Rq'
      GetCardDetailsV35Rs:
             $ref: 'response.yaml#/GetCardDetailsV35Rs'

    # ---- Import ActivateContactLessV35 request and response definition   
      ContactLessV4Rq:
             $ref: 'request.yaml#/ContactLessV4Rq' 
      ContactLessV4Rs:
             $ref: 'response.yaml#/ContactLessV4Rs'
    # ---- Import ResetPinTryCounterV4Rq request and response definition   
      ResetPinTryCounterV4Rq:
             $ref: 'request.yaml#/ResetPinTryCounterV4Rq' 
      ResetPinTryCounterV4Rs:
             $ref: 'response.yaml#/ResetPinTryCounterV4Rs'
    # ---- Import ActivateContactLessV35 request and response definition   
      ResetCVV2TryCounterV4Rq:
             $ref: 'request.yaml#/ResetCVV2TryCounterV4Rq' 
      ResetCVV2TryCounterV4Rs:
             $ref: 'response.yaml#/ResetCVV2TryCounterV4Rs'

    # ---- Import ChangeCardProductV35 request and response definition   
      ChangeCardProductV35Rq:
             $ref: 'request.yaml#/ChangeCardProductV35Rq' 
      ChangeCardProductV35Rs:
             $ref: 'response.yaml#/ChangeCardProductV35Rs'

    # ---- Import ChangePinV4 request and response definition
      ChangePinV4Rq:
           $ref: 'request.yaml#/ChangePinV4Rq'
      ChangePinV4Rs:
           $ref: 'response.yaml#/ChangePinV4Rs'
    # ---- Import ChangePinV4 request and response definition
      VerifyPinV4Rq:
           $ref: 'request.yaml#/VerifyPinV4Rq'
      VerifyPinV4Rs:
           $ref: 'response.yaml#/VerifyPinV4Rs'
    
    # ---- Import GetCardCVV2V4Rq request and response definition
      GetCardCVV2V4Rq:
           $ref: 'request.yaml#/GetCardCVV2V4Rq'
      GetCardCVV2V4Rs:
           $ref: 'response.yaml#/GetCardCVV2V4Rs'

    # ---- Import CreateAccountTransactionV35 request and response definition
      CreateAccountTransactionV35Rq:
           $ref: 'request.yaml#/CreateAccountTransactionV35Rq'
      CreateAccountTransactionV35Rs:
           $ref: 'response.yaml#/CreateAccountTransactionV35Rs'

    # --- Import GetAccountBalanceV35 request and response definition
      GetAccountBalanceV35Rq:
           $ref: 'request.yaml#/GetAccountBalanceV35Rq'
      GetAccountBalanceV35Rs:
            $ref: 'response.yaml#/GetAccountBalanceV35Rs'

    # --- Import RequestPinV35 request and response definition
      RequestPinV35Rq:
            $ref: 'request.yaml#/RequestPinV35Rq'
      RequestPinV35Rs:
            $ref: 'response.yaml#/RequestPinV35Rs' 

    # --- Import SetCustomerDetailV35 request and response definition
      SetCustomerDetailV35Rq:
            $ref: 'request.yaml#/SetCustomerDetailV35Rq'
      SetCustomerDetailV35Rs:
            $ref: 'response.yaml#/SetCustomerDetailV35Rs'    

    # --- Import GetCustomerDetailV35 request and response definition
      GetCustomerDetailV35Rq:
            $ref: 'request.yaml#/GetCustomerDetailV35Rq'
      GetCustomerDetailV35Rs:
            $ref: 'response.yaml#/GetCustomerDetailV35Rs' 
      
    # --- Import GetLoyaltyAccountsV35 request and response definition
      GetLoyaltyAccountsV35Rq:
            $ref: 'request.yaml#/GetLoyaltyAccountsV35Rq'
      GetLoyaltyAccountsV35Rs:
            $ref: 'response.yaml#/GetLoyaltyAccountsV35Rs'

    # --- Import UpdateAddressV35 request and response definition
      UpdateAddressV35Rq:
           $ref: 'request.yaml#/UpdateAddressV35Rq'
      UpdateAddressV35Rs:
           $ref: 'response.yaml#/UpdateAddressV35Rs'  

    # --- Import UpdateBankAccount request and response definition 
      UpdateBankAccountV35Rq:
          $ref: 'request.yaml#/UpdateBankAccountV35Rq'
      UpdateBankAccountV35Rs:
          $ref: 'response.yaml#/UpdateBankAccountV35Rs'
  
    # --- Import UpdateCardLimitsV35 request and response definition
      UpdateCardLimitsV35Rq:
          $ref: 'request.yaml#/UpdateCardLimitsV35Rq'
      UpdateCardLimitsV35Rs:
          $ref: 'response.yaml#/UpdateCardLimitsV35Rs'
    
    # --- Import CreateCreditCardV35 request and response definition
      CreateCreditCardV35Rq:
          $ref: 'request.yaml#/CreateCreditCardV35Rq'
      CreateCreditCardV35Rs:
           $ref: 'response.yaml#/CreateCreditCardV35Rs'  

    # --- Import GetCardDomainV35 request and response definition 
      GetCardDomainV35Rq:
            $ref: 'request.yaml#/GetCardDomainV35Rq'
      GetCardDomainV35Rs:
            $ref: 'response.yaml#/GetCardDomainV35Rs'

    # --- Import GetCardLimitsV35 request and response definition
      GetCardLimitsV35Rq:
             $ref: 'request.yaml#/GetCardLimitsV35Rq'
      GetCardLimitsV35Rs:
             $ref: 'response.yaml#/GetCardLimitsV35Rs'

    # --- Import GetEventNotificationV35Rq request and response definition
      GetEventNotificationV35Rq:
              $ref: 'request.yaml#/GetEventNotificationV35Rq'
      GetEventNotificationV35Rs:
              $ref: 'response.yaml#/GetEventNotificationV35Rs'

    # --- Import GetLoyaltyAccTrxsV35Rq request and response definition
      GetLoyaltyAccTrxsV35Rq:
             $ref: 'request.yaml#/GetLoyaltyAccTrxsV35Rq'
      GetLoyaltyAccTrxsV35Rs:
             $ref: 'response.yaml#/GetLoyaltyAccTrxsV35Rs'
    
    # --- Import RenewCardV35Rq request and response definition
      RenewCardV35Rq:
              $ref: 'request.yaml#/RenewCardV35Rq'
      RenewCardV35Rs:
              $ref: 'response.yaml#/RenewCardV35Rs' 

    # --- Import ReplaceCardV35 request and reponse definition
      ReplaceCardV35Rq:
              $ref: 'request.yaml#/ReplaceCardV35Rq'
      ReplaceCardV35Rs:
              $ref: 'response.yaml#/ReplaceCardV35Rs'

    # --- Import UpdateCardStatusV35 request and response definition
      ActivateCardStatusV4Rq:
               $ref: 'request.yaml#/ActivateCardStatusV4Rq'    
      UpdateCardStatusV4Rq:
               $ref: 'request.yaml#/UpdateCardStatusV4Rq'
      UpdateCardStatusV4Rs:
               $ref: 'response.yaml#/UpdateCardStatusV4Rs'
    #
      StopListRq:
                $ref: 'request.yaml#/StopListRq'
      StopListRs:
                $ref: 'response.yaml#/UpdateCardStatusV4Rs'
    # --- Import ChangeCardStatusToRV4Rq request definition
      ChangeCardStatusToRV4Rq:
               $ref: 'request.yaml#/ChangeCardStatusToRV4Rq'

    # --- Import UpdateCardStatusReasonV35 request and response definition
      UpdateCardStatusReasonV35Rq:
               $ref: 'request.yaml#/UpdateCardStatusReasonV35Rq'
      UpdateCardStatusReasonV35Rs:
                $ref: 'response.yaml#/UpdateCardStatusReasonV35Rs'  

    # --- Import UpdateCustomerNameV35 request and response definition
      UpdateCustomerNameV35Rq:
                 $ref: 'request.yaml#/UpdateCustomerNameV35Rq'
      UpdateCustomerNameV35Rs:
                 $ref: 'response.yaml#/UpdateCustomerNameV35Rs'  

   # --- Import UpdateCustomerEmailV35 request and response
      UpdateCustomerEmailV35Rq:
                $ref: 'request.yaml#/UpdateCustomerEmailV35Rq' 
      UpdateCustomerEmailV35Rs:
                $ref: 'response.yaml#/UpdateCustomerEmailV35Rs'

   # --- Import UpdateCustomerPhoneNumberV35 request and response
      UpdateCustomerPhoneNumberV35Rq:
               $ref: 'request.yaml#/UpdateCustomerPhoneNumberV35Rq'
      UpdateCustomerPhoneNumberV35Rs:
               $ref: 'response.yaml#/UpdateCustomerPhoneNumberV35Rs'
    
   # --- Import TransferAccountToAccountV35 request and response
      TransferAccountToAccountV35Rq:
                      $ref: 'request.yaml#/TransferAccountToAccountV35Rq'
      TransferAccountToAccountV35Rs:
                      $ref: 'response.yaml#/TransferAccountToAccountV35Rs'

   # --- Import GetParameterListV35 request and response
      GetParameterListV4Rq:
                      $ref: 'request.yaml#/GetParameterListV4Rq'
      GetParameterListV4Rs:
                       $ref: 'response.yaml#/GetParameterListV4Rs'   

    # --- Import SearchAuthorizationV35 request and response
      SearchAuthorizationV35Rq: 
                       $ref: 'request.yaml#/SearchAuthorizationV35Rq'
      SearchAuthorizationV35Rs:
                       $ref: 'response.yaml#/SearchAuthorizationV35Rs'

    # --- Import UpdateCollaboratorSubscriptionStatusV35 request and response
      UpdateCollaboratorSubscriptionStatusV35Rq:
                       $ref: 'request.yaml#/UpdateCollaboratorSubscriptionStatusV35Rq'
      UpdateCollaboratorSubscriptionStatusV35Rs:
                       $ref: 'response.yaml#/UpdateCollaboratorSubscriptionStatusV35Rs'

    # --- Import CreateDebitCardV35 request and response
      CreateDebitCardV35Rq:
                     $ref: 'request.yaml#/CreateDebitCardV35Rq'
      CreateDebitCardV35Rs:
                     $ref: 'response.yaml#/CreateDebitCardV35Rs'
   
    # --- Import CreateLoyaltyAccountV35 request and response
      CreateLoyaltyAccountV35Rq:
                  $ref: 'request.yaml#/CreateLoyaltyAccountV35Rq'
      CreateLoyaltyAccountV35Rs:
                  $ref: 'response.yaml#/CreateLoyaltyAccountV35Rs'

    # --- Import GetCollaboratorInitiatedSubscriptionV35 request and response
      GetCollaboratorInitiatedSubscriptionV35Rq:
                  $ref: 'request.yaml#/GetCollaboratorInitiatedSubscriptionV35Rq'
      GetCollaboratorInitiatedSubscriptionV35Rs:
                  $ref: 'response.yaml#/GetCollaboratorInitiatedSubscriptionV35Rs'          

    # --- Import GetStatementHistoryV35 request and response
      GetStatementHistoryV35Rq:
                  $ref: 'request.yaml#/GetStatementHistoryV35Rq'
      GetStatementHistoryV35Rs:
                  $ref: 'response.yaml#/GetStatementHistoryV35Rs'

    # --- Import GetStockCardsOverviewV35 request and response
      GetStockCardsOverviewV35Rq:
                  $ref: 'request.yaml#/GetStockCardsOverviewV35Rq'
      GetStockCardsOverviewV35Rs:
                  $ref: 'response.yaml#/GetStockCardsOverviewV35Rs'

    # --- Import LostStolenDeclarationV35 request and response
      LostStolenDeclarationV35Rq:
                   $ref: 'request.yaml#/LostStolenDeclarationV35Rq' 
      LostStolenDeclarationV35Rs:
                   $ref: 'response.yaml#/LostStolenDeclarationV35Rs' 

    # --- Import OrderStockCardsV35 request and response
      OrderStockCardsV35Rq:
                   $ref: 'request.yaml#/OrderStockCardsV35Rq'
      OrderStockCardsV35Rs:
                   $ref: 'response.yaml#/OrderStockCardsV35Rs' 

    # --- Import SearchTransactionsV35 request and response
      SearchTransactionsV35Rq:
                   $ref: 'request.yaml#/SearchTransactionsV35Rq'
      SearchTransactionsV35Rs:
                   $ref: 'response.yaml#/SearchTransactionsV35Rs'

    # --- Import SetCardDetailsV35 request and response.
      SetCardDetailsV35Rq:
                   $ref: 'request.yaml#/SetCardDetailsV35Rq'   
      SetCardDetailsV35Rs:
                  $ref: 'response.yaml#/SetCardDetailsV35Rs' 

    # --- Import FeeInQuiryV35 request and response.
      FeeInQuiryV35Rq:
                   $ref: 'request.yaml#/FeeInQuiryV35Rq'   
      FeeInQuiryV35Rs:
                   $ref: 'response.yaml#/FeeInQuiryV35Rs'

    # --- Import SearchCardV35 request and response.
      SearchCardV35Rq:
               $ref: 'request.yaml#/SearchCardV35Rq'
      SearchCardV35Rs:
               $ref: 'response.yaml#/SearchCardV35Rs'

    # --- Import UpdateCustomerDemogV35 request and response     
      UpdateCustomerDemogV35Rq:
               $ref: 'request.yaml#/UpdateCustomerDemogV35Rq'
      UpdateCustomerDemogV35Rs:
               $ref: 'response.yaml#/UpdateCustomerDemogV35Rs'

    # --- Import UpdateLoyaltyAccStatusV35 request and response
      UpdateLoyaltyAccStatusV35Rq:
               $ref: 'request.yaml#/UpdateLoyaltyAccStatusV35Rq' 
      UpdateLoyaltyAccStatusV35Rs:
                $ref: 'response.yaml#/UpdateLoyaltyAccStatusV35Rs' 

    # --- Import SetCardDomainV35Rq request and response
      SetCardDomainV35Rq:
               $ref: 'request.yaml#/SetCardDomainV35Rq'
      SetCardDomainV35Rs:
               $ref: 'response.yaml#/SetCardDomainV35Rs'

    # --- Import VerifyPin request and response
      VerifyPinRq:
               $ref: 'request.yaml#/VerifyPinRq'
      VerifyPinRs:
               $ref: 'response.yaml#/VerifyPinRs'

    # --- Import DemoV35 request and response
      demoV35Rq:
               $ref: 'request.yaml#/DemoV35Rq'
      demoV35Rs:
               $ref: 'response.yaml#/DemoV35Rs'             
    # --- Import DemoV35 request and response
      GetAuthorizationDetailsV35Rq:
               $ref: 'request.yaml#/GetAuthorizationDetailsV35Rq'
      GetAuthorizationDetailsV35Rs:
               $ref: 'response.yaml#/GetAuthorizationDetailsV35Rs'
    # --- Import DemoV35 request and response
      UpdateCardCharacteristicsV35Rq:
               $ref: 'request.yaml#/UpdateCardCharacteristicsV35Rq'
      UpdateCardCharacteristicsV35Rs:
               $ref: 'response.yaml#/UpdateCardCharacteristicsV35Rs'
    # --- Import DemoV35 request and response
      GetCardCharacteristicsV35Rq:
               $ref: 'request.yaml#/GetCardCharacteristicsV35Rq'
      GetCardCharacteristicsV35Rs:
               $ref: 'response.yaml#/GetCardCharacteristicsV35Rs'     
      # --- Import GetCardCVC2V35 request and response definition
      SecureGetCardCVC2V35Rq:
            $ref: 'request.yaml#/SecureGetCardCVC2V35Rq'
      SecureGetCardCVC2V35Rs:
            $ref: 'response.yaml#/GetCardCVC2V35Rs'
      GetCardFromTokenV4Rq:
        $ref: 'request.yaml#/GetCardFromTokenV4Rq'
      GetCardFromTokenV4Rs:
        $ref: 'response.yaml#/GetCardFromTokenV4Rs'
      ReversalRequestRq:
        $ref: 'request.yaml#/ReversalRequestRq'
      ReversalRequestRs:
        $ref: 'response.yaml#/ReversalRequestRs'
security:
  - bearerAuth: []
